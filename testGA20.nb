(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    289356,       7337]
NotebookOptionsPosition[    283946,       7263]
NotebookOutlinePosition[    284371,       7280]
CellTagsIndexPosition[    284328,       7277]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
This notebook:

- displays the help for the GA20 module, and its functions
- has a number of test cases.
- some manual tests that require visual verification.
\
\>", "Text",
 CellChangeTimes->{{3.691795964600712*^9, 3.691795975214867*^9}, {
   3.691796083626561*^9, 3.691796241126536*^9}, 3.6917964799818163`*^9, {
   3.691875939595688*^9, 3.691875941048305*^9}, {3.6918770691516314`*^9, 
   3.6918770692445993`*^9}, {3.6919525052697067`*^9, 
   3.691952512793326*^9}},ExpressionUUID->"45ceca23-304a-4fb9-82ba-\
372933a8b95c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"<<", " ", "GA20`"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"?", "GA20"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"?", "grade"}], "*)"}]}], "\n", 
 RowBox[{"?", "Scalar"}], "\n", 
 RowBox[{"?", "Vector"}], "\n", 
 RowBox[{
  RowBox[{"?", "Bivector"}], "\n"}], "\n", 
 RowBox[{"?", "gradeQ"}], "\n", 
 RowBox[{"?", "scalarQ"}], "\n", 
 RowBox[{"?", "vectorQ"}], "\n", 
 RowBox[{
  RowBox[{"?", "bivectorQ"}], "\n"}], "\n", 
 RowBox[{"?", "bladeQ"}], "\n", 
 RowBox[{"?", "gradeAnyQ"}], "\n", 
 RowBox[{"?", "notGradeQ"}], "\n", 
 RowBox[{"?", "GradeSelection"}], "\n", 
 RowBox[{"?", "ScalarSelection"}], "\n", 
 RowBox[{"?", "VectorSelection"}], "\n", 
 RowBox[{
  RowBox[{"?", "BivectorSelection"}], "\n"}], "\n", 
 RowBox[{"?", "ScalarValue"}], "\n", 
 RowBox[{"?", "ScalarProduct"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"On", "[", "Assert", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "e0", ",", " ", "e1", ",", " ", "e2", ",", " ", "e12", ",", " ", "e21", 
    ",", " ", "m01", ",", " ", "m02", ",", " ", "m12", ",", " ", "m012"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e0", " ", "=", " ", 
   RowBox[{"Scalar", "[", "1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e1", " ", "=", " ", 
   RowBox[{"Vector", "[", 
    RowBox[{"1", ",", "1"}], "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e2", " ", "=", " ", 
   RowBox[{"Vector", "[", 
    RowBox[{"1", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e12", " ", "=", " ", 
   RowBox[{"Bivector", "[", "1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e21", " ", "=", " ", 
   RowBox[{"-", "e12"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m01", " ", "=", " ", 
   RowBox[{"e0", " ", "+", " ", "e1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m02", " ", "=", " ", 
   RowBox[{"e0", " ", "+", " ", "e21"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m12", " ", "=", " ", 
   RowBox[{"e1", " ", "+", " ", "e21"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m012", " ", "=", " ", 
    RowBox[{"e0", " ", "+", " ", "e1", " ", "+", " ", "e21"}]}], ";"}], 
  "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.691718294880554*^9, 3.691718295281008*^9}, {
   3.6917887255064077`*^9, 3.6917887259455748`*^9}, {3.691790620876504*^9, 
   3.691790621198758*^9}, {3.691790729000072*^9, 3.691790740993383*^9}, {
   3.691790896837412*^9, 3.691790897681327*^9}, 3.6917957960933*^9, {
   3.69187575260861*^9, 3.691875775083118*^9}, {3.691877071435698*^9, 
   3.691877256866488*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"36971f6a-0943-4dee-bce7-5d397b773d20"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GA20: An implementation of Euclidean (CL(2,0)) \
Geometric Algebra.\\n\\nPauli matrices are used to represent the algebraic \
elements.  This provides an efficient and compact representation\\nof the \
entire algebraic space.\\n\\nInternally, a multivector is represented by a \
pair (grade, pauli-representation).  The grade portion will be\\nobliterated \
when adding objects that have different grade, or multiplying vectors or \
bivectors.  When\\nit is available, certain operations can be optimized.  \
Comparison ignores the cached grade if it exists.\\n\\nElements of the \
algebra can be constructed with one of\\n\\n   Scalar[ v ]\\n   Vector[ v, n \
]\\n   Bivector[ v ]\\n\\nExample:\\n\\n   m = Scalar[ Sin[ x ] ] + Vector[ \
Log[ z ], 3 ]\\n   m // StandardForm\\n\\n> e[ 3 ] Log[ z ] + Sin[ x ]\\n\\nA \
few operators are provided:\\n   ==         Compare two multivectors, \
ignoring the cached grade if any.\\n   m1 + m2\\n   m1 - m2\\n   - m\\n   st \
* vb    Scalars can multiply vectors and bivectors in any order\\n   vb1 ** \
vb1 Vectors and bivectors when multiplied have to use the \
NonCommutativeMultiply operator, but any grade object may also.\\n   m1 . m2  \
  Dot product.  The functional form Dot[ m1, m2 ] may also be used.\\n   m1 ^ \
m2   Wedgeproduct.  Enter with m1 [ Esc ]^[ Esc ] m2.  The functional form \
Wedge[ m1, m2 ]\\n   <m>        Scalar selection.  Enter with [ Esc ]<[ Esc ] \
m [ Esc ]>[ Esc ].  The functional form ScalarValue[ m ] may also be used.  \
This returns the numeric (or expression) value of the scalar grade of the \
multivector, and not a grade[ ] object.\\n   <m1,m2>    Scalar product.  \
Enter with [ Esc ]<[ Esc ] m1,m2 [ Esc ]>[ Esc ].  The functional form \
ScalarProduct[ m1, m2 ] may also be used.  This returns the numeric (or \
expression) value of the scalar product of the multivectors, and not a grade[ \
] object.\\n\\n   Functions provided:\\n\\n   - GradeSelection\\n   - \
ScalarSelection\\n   - VectorSelection\\n   - BivectorSelection\\n   - \
ScalarValue, < m >\\n   - ScalarProduct, < m1, m2 >\\n\\nThe following \
built-in methods are overridden:\\n\\n   - TraditionalForm\\n   - DisplayForm\
\\n   - StandardForm\\n   - TeXForm\\n\\nInternal functions:\\n\\n   - \
scalarQ\\n   - vectorQ\\n   - bivectorQ\\n   - bladeQ\\n   - gradeAnyQ\\n   - \
notGradeQ\\n\\nTODO:\\n\\n1) How to get better formatted output by default \
without using one of TraditionalForm, DisplayForm, StandardForm ?\\n\\n2) Can \
a package have options (i.e. to define the name of the e[ ] operator used in \
StandardForm that represents a basis vector).\\n\\n3) proper packaging stuff: \
 private for internals.\\n\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`GA20\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GA20: An implementation of Euclidean (CL(2,0)) \
Geometric Algebra.\\n\\nPauli matrices are used to represent the algebraic \
elements.  This provides an efficient and compact representation\\nof the \
entire algebraic space.\\n\\nInternally, a multivector is represented by a \
pair (grade, pauli-representation).  The grade portion will be\\nobliterated \
when adding objects that have different grade, or multiplying vectors or \
bivectors.  When\\nit is available, certain operations can be optimized.  \
Comparison ignores the cached grade if it exists.\\n\\nElements of the \
algebra can be constructed with one of\\n\\n   Scalar[ v ]\\n   Vector[ v, n \
]\\n   Bivector[ v ]\\n\\nExample:\\n\\n   m = Scalar[ Sin[ x ] ] + Vector[ \
Log[ z ], 3 ]\\n   m // StandardForm\\n\\n> e[ 3 ] Log[ z ] + Sin[ x ]\\n\\nA \
few operators are provided:\\n   ==         Compare two multivectors, \
ignoring the cached grade if any.\\n   m1 + m2\\n   m1 - m2\\n   - m\\n   st \
* vb    Scalars can multiply vectors and bivectors in any order\\n   vb1 ** \
vb1 Vectors and bivectors when multiplied have to use the \
NonCommutativeMultiply operator, but any grade object may also.\\n   m1 . m2  \
  Dot product.  The functional form Dot[ m1, m2 ] may also be used.\\n   m1 ^ \
m2   Wedgeproduct.  Enter with m1 [ Esc ]^[ Esc ] m2.  The functional form \
Wedge[ m1, m2 ]\\n   <m>        Scalar selection.  Enter with [ Esc ]<[ Esc ] \
m [ Esc ]>[ Esc ].  The functional form ScalarValue[ m ] may also be used.  \
This returns the numeric (or expression) value of the scalar grade of the \
multivector, and not a grade[ ] object.\\n   <m1,m2>    Scalar product.  \
Enter with [ Esc ]<[ Esc ] m1,m2 [ Esc ]>[ Esc ].  The functional form \
ScalarProduct[ m1, m2 ] may also be used.  This returns the numeric (or \
expression) value of the scalar product of the multivectors, and not a grade[ \
] object.\\n\\n   Functions provided:\\n\\n   - GradeSelection\\n   - \
ScalarSelection\\n   - VectorSelection\\n   - BivectorSelection\\n   - \
ScalarValue, < m >\\n   - ScalarProduct, < m1, m2 >\\n\\nThe following \
built-in methods are overridden:\\n\\n   - TraditionalForm\\n   - DisplayForm\
\\n   - StandardForm\\n   - TeXForm\\n\\nInternal functions:\\n\\n   - \
scalarQ\\n   - vectorQ\\n   - bivectorQ\\n   - bladeQ\\n   - gradeAnyQ\\n   - \
notGradeQ\\n\\nTODO:\\n\\n1) How to get better formatted output by default \
without using one of TraditionalForm, DisplayForm, StandardForm ?\\n\\n2) Can \
a package have options (i.e. to define the name of the e[ ] operator used in \
StandardForm that represents a basis vector).\\n\\n3) proper packaging stuff: \
 private for internals.\\n\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "GA20: An implementation of Euclidean (CL(2,0)) Geometric Algebra.\n\n\
Pauli matrices are used to represent the algebraic elements.  This provides \
an efficient and compact representation\nof the entire algebraic space.\n\n\
Internally, a multivector is represented by a pair (grade, \
pauli-representation).  The grade portion will be\nobliterated when adding \
objects that have different grade, or multiplying vectors or bivectors.  When\
\nit is available, certain operations can be optimized.  Comparison ignores \
the cached grade if it exists.\n\nElements of the algebra can be constructed \
with one of\n\n   Scalar[ v ]\n   Vector[ v, n ]\n   Bivector[ v ]\n\n\
Example:\n\n   m = Scalar[ Sin[ x ] ] + Vector[ Log[ z ], 3 ]\n   m // \
StandardForm\n\n> e[ 3 ] Log[ z ] + Sin[ x ]\n\nA few operators are provided:\
\n   ==         Compare two multivectors, ignoring the cached grade if any.\n \
  m1 + m2\n   m1 - m2\n   - m\n   st * vb    Scalars can multiply vectors and \
bivectors in any order\n   vb1 ** vb1 Vectors and bivectors when multiplied \
have to use the NonCommutativeMultiply operator, but any grade object may \
also.\n   m1 . m2    Dot product.  The functional form Dot[ m1, m2 ] may also \
be used.\n   m1 ^ m2   Wedgeproduct.  Enter with m1 [ Esc ]^[ Esc ] m2.  The \
functional form Wedge[ m1, m2 ]\n   <m>        Scalar selection.  Enter with \
[ Esc ]<[ Esc ] m [ Esc ]>[ Esc ].  The functional form ScalarValue[ m ] may \
also be used.  This returns the numeric (or expression) value of the scalar \
grade of the multivector, and not a grade[ ] object.\n   <m1,m2>    Scalar \
product.  Enter with [ Esc ]<[ Esc ] m1,m2 [ Esc ]>[ Esc ].  The functional \
form ScalarProduct[ m1, m2 ] may also be used.  This returns the numeric (or \
expression) value of the scalar product of the multivectors, and not a grade[ \
] object.\n\n   Functions provided:\n\n   - GradeSelection\n   - \
ScalarSelection\n   - VectorSelection\n   - BivectorSelection\n   - \
ScalarValue, < m >\n   - ScalarProduct, < m1, m2 >\n\nThe following built-in \
methods are overridden:\n\n   - TraditionalForm\n   - DisplayForm\n   - \
StandardForm\n   - TeXForm\n\nInternal functions:\n\n   - scalarQ\n   - \
vectorQ\n   - bivectorQ\n   - bladeQ\n   - gradeAnyQ\n   - notGradeQ\n\nTODO:\
\n\n1) How to get better formatted output by default without using one of \
TraditionalForm, DisplayForm, StandardForm ?\n\n2) Can a package have options \
(i.e. to define the name of the e[ ] operator used in StandardForm that \
represents a basis vector).\n\n3) proper packaging stuff:  private for \
internals.\n", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "GA20`GA20"|>, False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.903909529885201*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"1a7c78ea-8f6e-41db-8ba5-fcf865eae6b7"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Scalar[ v ] constructs a scalar grade quantity with \
value v.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"Scalar", "[", "GA20`Private`v_", "]"}], ":=", 
                    "GA20`Private`v"}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`Scalar\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Scalar[ v ] constructs a scalar grade quantity with \
value v.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Scalar[ v ] constructs a scalar grade quantity with value v.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, GA20`Scalar, {GA20`Scalar[
         Pattern[GA20`Private`v, 
          Blank[]]] :> GA20`grade[0, GA20`Private`v IdentityMatrix[2]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "GA20`Scalar"|>, False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.903909529915195*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"9f02b8de-7926-437e-90e3-29290c79857a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Vector[ v, n ], where n = {1,2} constructs a vector \
grade quantity with value v in direction n.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"Vector", "[", 
                    RowBox[{"GA20`Private`v_", ",", 
                    RowBox[{"GA20`Private`k_Integer", "/;", 
                    RowBox[{"GA20`Private`k", "\[Equal]", "1"}]}]}], "]"}], 
                    ":=", 
                    RowBox[{"GA20`Private`v", " ", 
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "1"]}]}]}, {" "}, {
                   
                    RowBox[{
                    RowBox[{"Vector", "[", 
                    RowBox[{"GA20`Private`v_", ",", 
                    RowBox[{"GA20`Private`k_Integer", "/;", 
                    RowBox[{"GA20`Private`k", "\[Equal]", "2"}]}]}], "]"}], 
                    ":=", 
                    RowBox[{"GA20`Private`v", " ", 
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "2"]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`Vector\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Vector[ v, n ], where n = {1,2} constructs a vector \
grade quantity with value v in direction n.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Vector[ v, n ], where n = {1,2} constructs a vector grade quantity with \
value v in direction n.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[DownValues, GA20`Vector, {GA20`Vector[
         Pattern[GA20`Private`v, 
          Blank[]], 
         Condition[
          Pattern[GA20`Private`k, 
           Blank[Integer]], GA20`Private`k == 1]] :> 
       GA20`grade[1, GA20`Private`v PauliMatrix[1]], GA20`Vector[
         Pattern[GA20`Private`v, 
          Blank[]], 
         Condition[
          Pattern[GA20`Private`k, 
           Blank[Integer]], GA20`Private`k == 2]] :> 
       GA20`grade[1, GA20`Private`v PauliMatrix[3]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "GA20`Vector"|>, False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.9039095299432383`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"b588a180-ca8e-4f71-86df-e5b079d1dee6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Bivector[ v ], constructs a bivector grade quantity \
with value v in the plane e1,e2.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"Bivector", "[", "GA20`Private`v_", "]"}], ":=", 
                    RowBox[{"GA20`Private`v", " ", 
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "\"12\""]}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`Bivector\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Bivector[ v ], constructs a bivector grade quantity \
with value v in the plane e1,e2.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Bivector[ v ], constructs a bivector grade quantity with value v in the \
plane e1,e2.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[DownValues, GA20`Bivector, {GA20`Bivector[
         Pattern[GA20`Private`v, 
          Blank[]]] :> GA20`grade[2, GA20`Private`v Dot[
           PauliMatrix[1], 
           PauliMatrix[3]]]}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected}, "FullName" -> "GA20`Bivector"|>, 
   False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.9039095299704*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"b692f3d9-1f52-4da9-8d90-bb02b62aa7ad"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"gradeQ[ m, n ] tests if the multivector m is of \
grade n.  n = -1 is used internally to represent values of more than one \
grade.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"gradeQ", "[", 
                    
                    RowBox[{
                    "GA20`Private`m_grade", ",", "GA20`Private`n_Integer"}], 
                    "]"}], ":=", 
                    RowBox[{
                    RowBox[{"First", "[", "GA20`Private`m", "]"}], "\[Equal]",
                     "GA20`Private`n"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`gradeQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"gradeQ[ m, n ] tests if the multivector m is of \
grade n.  n = -1 is used internally to represent values of more than one \
grade.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "gradeQ[ m, n ] tests if the multivector m is of grade n.  n = -1 is used \
internally to represent values of more than one grade.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[DownValues, GA20`gradeQ, {GA20`gradeQ[
         Pattern[GA20`Private`m, 
          Blank[GA20`grade]], 
         Pattern[GA20`Private`n, 
          Blank[Integer]]] :> First[GA20`Private`m] == GA20`Private`n}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "GA20`gradeQ"|>, False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.903909529997202*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"792f56bf-aedd-46c4-8af2-63914881a5eb"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"scalarQ[ m ] tests if the multivector m is of grade \
0 (scalar)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"scalarQ", "[", "GA20`Private`m_grade", "]"}], 
                    ":=", 
                    RowBox[{"gradeQ", "[", 
                    RowBox[{"GA20`Private`m", ",", "0"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`scalarQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"scalarQ[ m ] tests if the multivector m is of grade \
0 (scalar)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "scalarQ[ m ] tests if the multivector m is of grade 0 (scalar)", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, GA20`scalarQ, {GA20`scalarQ[
         Pattern[GA20`Private`m, 
          Blank[GA20`grade]]] :> GA20`gradeQ[GA20`Private`m, 0]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "GA20`scalarQ"|>, False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.9039095300242243`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"70314832-782d-43c1-aa6b-bdc8ce86c7b7"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"vectorQ[ m ] tests if the multivector m is of grade \
1 (vector)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"vectorQ", "[", "GA20`Private`m_grade", "]"}], 
                    ":=", 
                    RowBox[{"gradeQ", "[", 
                    RowBox[{"GA20`Private`m", ",", "1"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`vectorQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"vectorQ[ m ] tests if the multivector m is of grade \
1 (vector)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "vectorQ[ m ] tests if the multivector m is of grade 1 (vector)", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, GA20`vectorQ, {GA20`vectorQ[
         Pattern[GA20`Private`m, 
          Blank[GA20`grade]]] :> GA20`gradeQ[GA20`Private`m, 1]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "GA20`vectorQ"|>, False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.903909530051165*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"002e63d5-3260-405f-bc89-c2f00b54a879"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"bivectorQ[ m ] tests if the multivector m is of \
grade 2 (bivector)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"bivectorQ", "[", "GA20`Private`m_grade", "]"}], 
                    ":=", 
                    RowBox[{"gradeQ", "[", 
                    RowBox[{"GA20`Private`m", ",", "2"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`bivectorQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"bivectorQ[ m ] tests if the multivector m is of \
grade 2 (bivector)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "bivectorQ[ m ] tests if the multivector m is of grade 2 (bivector)", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GA20`bivectorQ, {GA20`bivectorQ[
         Pattern[GA20`Private`m, 
          Blank[GA20`grade]]] :> GA20`gradeQ[GA20`Private`m, 2]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "GA20`bivectorQ"|>, False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.903909530080038*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"dfdf999b-7ea7-4ddc-96f4-fd1884ad0852"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"bladeQ[ m ] tests if the multivector is of a single \
grade.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"bladeQ", "[", "GA20`Private`m_grade", "]"}], 
                    ":=", 
                    RowBox[{
                    RowBox[{"First", "[", "GA20`Private`m", "]"}], 
                    "\[GreaterEqual]", "0"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`bladeQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"bladeQ[ m ] tests if the multivector is of a single \
grade.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "bladeQ[ m ] tests if the multivector is of a single grade.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, GA20`bladeQ, {GA20`bladeQ[
         Pattern[GA20`Private`m, 
          Blank[GA20`grade]]] :> First[GA20`Private`m] >= 0}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "GA20`bladeQ"|>, 
   False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.903909530108982*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"08ab09ae-274b-4046-9c1c-2dd53b73e938"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"gradeAnyQ[ ].  predicate pattern match for grade[ _ \
]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"gradeAnyQ", "[", "GA20`Private`m_grade", "]"}], 
                    ":=", "True"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"gradeAnyQ", "[", "_", "]"}], ":=", "False"}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`gradeAnyQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"gradeAnyQ[ ].  predicate pattern match for grade[ _ \
]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "gradeAnyQ[ ].  predicate pattern match for grade[ _ ]", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GA20`gradeAnyQ, {GA20`gradeAnyQ[
         Pattern[GA20`Private`m, 
          Blank[GA20`grade]]] :> True, GA20`gradeAnyQ[
         Blank[]] :> False}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "GA20`gradeAnyQ"|>, False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.903909530136704*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"546119ed-fd8e-4493-8dab-1305518119de"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"notGradeQ[ ].  predicate pattern match for !grade[ \
]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"notGradeQ", "[", "GA20`Private`v_", "]"}], ":=", 
                    
                    RowBox[{"!", 
                    RowBox[{"gradeAnyQ", "[", "GA20`Private`v", "]"}]}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`notGradeQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"notGradeQ[ ].  predicate pattern match for !grade[ \
]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "notGradeQ[ ].  predicate pattern match for !grade[ ]", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GA20`notGradeQ, {GA20`notGradeQ[
         Pattern[GA20`Private`v, 
          Blank[]]] :> Not[
         GA20`gradeAnyQ[GA20`Private`v]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "GA20`notGradeQ"|>, 
   False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.903909530164234*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"821d9409-94d9-47bd-bfa4-babecb3f28f3"],

Cell[BoxData[
 TemplateBox[{
  "Last", "normal", 
   "\"Nonatomic expression expected at position \
StandardForm[Short[Shallow[HoldForm[1], {10, 50}], 5]] in \
StandardForm[Short[Shallow[HoldForm[Last[GA20`Private`m]], {10, 50}], 5]].\"",
    2, 47, 3, 29070384885731117530, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9039060607612343`*^9, 3.9039060764238863`*^9}, 
   3.903906131419179*^9, 3.903906569196233*^9, 3.903907021042275*^9, 
   3.903908224799788*^9, 3.9039094758975286`*^9, 3.9039095301892548`*^9},
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"e67a836b-8333-411f-89ca-6c396665e293"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GradeSelection[ m, k ] selects the grade k elements \
from the multivector m.  The selected result is represented internally as a \
grade[ ] type (so scalar selection is not just a number).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{
                    RowBox[{"GA20`Private`m_", "?", "scalarQ"}], ",", "0"}], 
                    "]"}], ":=", "GA20`Private`m"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{
                    RowBox[{"GA20`Private`m_", "?", "vectorQ"}], ",", "1"}], 
                    "]"}], ":=", "GA20`Private`m"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{
                    RowBox[{"GA20`Private`m_", "?", "bivectorQ"}], ",", "2"}],
                     "]"}], ":=", "GA20`Private`m"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{"GA20`Private`m_", ",", 
                    RowBox[{"GA20`Private`k_Integer", "/;", 
                    RowBox[{
                    RowBox[{"GA20`Private`k", "\[GreaterEqual]", "0"}], "&&", 
                    
                    RowBox[{"GA20`Private`k", "\[LessEqual]", "2"}]}]}]}], 
                    "]"}], ":=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "2"], ",", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "1"], "+", 
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "\"12\""]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "1"], "-", 
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "\"12\""]}], ",", 
                    RowBox[{"-", 
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "2"]}]}], "}"}]}], 
                    "}"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`GradeSelection\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GradeSelection[ m, k ] selects the grade k elements \
from the multivector m.  The selected result is represented internally as a \
grade[ ] type (so scalar selection is not just a number).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "GradeSelection[ m, k ] selects the grade k elements from the multivector \
m.  The selected result is represented internally as a grade[ ] type (so \
scalar selection is not just a number).", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GA20`GradeSelection, {GA20`GradeSelection[
         PatternTest[
          Pattern[GA20`Private`m, 
           Blank[]], GA20`scalarQ], 0] :> GA20`Private`m, 
       GA20`GradeSelection[
         PatternTest[
          Pattern[GA20`Private`m, 
           Blank[]], GA20`vectorQ], 1] :> GA20`Private`m, 
       GA20`GradeSelection[
         PatternTest[
          Pattern[GA20`Private`m, 
           Blank[]], GA20`bivectorQ], 2] :> GA20`Private`m, 
       GA20`GradeSelection[
         Pattern[GA20`Private`m, 
          Blank[]], 
         Condition[
          Pattern[GA20`Private`k, 
           Blank[Integer]], 
          And[GA20`Private`k >= 0, GA20`Private`k <= 2]]] :> 
       GA20`grade[GA20`Private`k, 
         GA20`pauliGradeSelect[
          Last[GA20`Private`m], GA20`Private`k]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "GA20`GradeSelection"|>, False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.9039095301954737`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"3ea61a9a-9a44-4649-9aba-149aac1e23b1"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarSelection[ m, asMv_Boolean : True ] selects \
the multivector 0 (scalar) elements from the multivector m.  If asMv is True, \
then the selected result is represented internally as a multivector[ ] type, \
and if False, as a scalar.   ScalarSelection[m, False] is the same as \
AngleBracket[m] or ScalarValue[m], all returning a scalar, not multivector \
representation.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    
                    RowBox[{
                    "ScalarSelection", "[", "GA20`Private`v_grade", "]"}], 
                    ":=", 
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{"GA20`Private`v", ",", "0"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ScalarSelection", "[", 
                    RowBox[{"GA20`Private`v_grade", ",", "True"}], "]"}], 
                    ":=", 
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{"GA20`Private`v", ",", "0"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ScalarSelection", "[", 
                    RowBox[{"GA20`Private`v_grade", ",", "False"}], "]"}], 
                    ":=", 
                    
                    RowBox[{
                    "\[LeftAngleBracket]", "GA20`Private`v", 
                    "\[RightAngleBracket]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`ScalarSelection\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarSelection[ m, asMv_Boolean : True ] selects \
the multivector 0 (scalar) elements from the multivector m.  If asMv is True, \
then the selected result is represented internally as a multivector[ ] type, \
and if False, as a scalar.   ScalarSelection[m, False] is the same as \
AngleBracket[m] or ScalarValue[m], all returning a scalar, not multivector \
representation.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "ScalarSelection[ m, asMv_Boolean : True ] selects the multivector 0 \
(scalar) elements from the multivector m.  If asMv is True, then the selected \
result is represented internally as a multivector[ ] type, and if False, as a \
scalar.   ScalarSelection[m, False] is the same as AngleBracket[m] or \
ScalarValue[m], all returning a scalar, not multivector representation.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GA20`ScalarSelection, {GA20`ScalarSelection[
         Pattern[GA20`Private`v, 
          Blank[GA20`grade]]] :> GA20`GradeSelection[GA20`Private`v, 0], 
       GA20`ScalarSelection[
         Pattern[GA20`Private`v, 
          Blank[GA20`grade]], True] :> GA20`GradeSelection[GA20`Private`v, 0],
        GA20`ScalarSelection[
         Pattern[GA20`Private`v, 
          Blank[GA20`grade]], False] :> AngleBracket[GA20`Private`v]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "GA20`ScalarSelection"|>, False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.903909530221573*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"0de4358b-a648-4c42-b2c3-ae8c2aab739e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"VectorSelection[ m ] selects the grade 1 (vector) \
elements from the multivector m.  The selected result is represented \
internally as a grade[ ] type.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"VectorSelection", ":=", 
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{"#1", ",", "1"}], "]"}], "&"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`VectorSelection\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"VectorSelection[ m ] selects the grade 1 (vector) \
elements from the multivector m.  The selected result is represented \
internally as a grade[ ] type.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "VectorSelection[ m ] selects the grade 1 (vector) elements from the \
multivector m.  The selected result is represented internally as a grade[ ] \
type.", "Documentation" -> None, "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, GA20`VectorSelection, {
      GA20`VectorSelection :> (GA20`GradeSelection[#, 1]& )}], "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected}, "FullName" -> "GA20`VectorSelection"|>, 
   False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.903909530248757*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"2df3bd4e-7028-4bd6-8d29-1e5b0ffd40a6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"BivectorSelection[ m ] selects the grade 2 \
(bivector) elements from the multivector m.  The selected result is \
represented internally as a grade[ ] type.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"BivectorSelection", ":=", 
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{"#1", ",", "2"}], "]"}], "&"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`BivectorSelection\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"BivectorSelection[ m ] selects the grade 2 \
(bivector) elements from the multivector m.  The selected result is \
represented internally as a grade[ ] type.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "BivectorSelection[ m ] selects the grade 2 (bivector) elements from the \
multivector m.  The selected result is represented internally as a grade[ ] \
type.", "Documentation" -> None, "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, GA20`BivectorSelection, {
      GA20`BivectorSelection :> (GA20`GradeSelection[#, 2]& )}], "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected}, "FullName" -> "GA20`BivectorSelection"|>, 
   False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.903909530275943*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"fce1d3ce-b53c-4562-a682-46d5d79f617a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarValue[ m ].  Same as AngleBracket[ m ], aka [ \
Esc ]<[ Esc ] m1 [ Esc ]>[ Esc ].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"ScalarValue", "[", "GA20`Private`m_grade", "]"}],
                     ":=", 
                    
                    RowBox[{
                    "\[LeftAngleBracket]", "GA20`Private`m", 
                    "\[RightAngleBracket]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`ScalarValue\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarValue[ m ].  Same as AngleBracket[ m ], aka [ \
Esc ]<[ Esc ] m1 [ Esc ]>[ Esc ].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "ScalarValue[ m ].  Same as AngleBracket[ m ], aka [ Esc ]<[ Esc ] m1 [ \
Esc ]>[ Esc ].", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GA20`ScalarValue, {GA20`ScalarValue[
         Pattern[GA20`Private`m, 
          Blank[GA20`grade]]] :> AngleBracket[GA20`Private`m]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "GA20`ScalarValue"|>, False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.9039095303032713`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"528155bf-a8ce-42a5-a1fe-2c01ccec8797"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarProduct[ ].  Same as AngleBracket[ m1, m2 ], \
aka [ Esc ]<[ Esc ] m1, m2 [ Esc ]>[ Esc ].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"ScalarProduct", "[", 
                    
                    RowBox[{
                    "GA20`Private`m1_grade", ",", "GA20`Private`m2_grade"}], 
                    "]"}], ":=", 
                    RowBox[{"\[LeftAngleBracket]", 
                    RowBox[{"GA20`Private`m1", ",", "GA20`Private`m2"}], 
                    "\[RightAngleBracket]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA20`ScalarProduct\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarProduct[ ].  Same as AngleBracket[ m1, m2 ], \
aka [ Esc ]<[ Esc ] m1, m2 [ Esc ]>[ Esc ].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "ScalarProduct[ ].  Same as AngleBracket[ m1, m2 ], aka [ Esc ]<[ Esc ] \
m1, m2 [ Esc ]>[ Esc ].", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GA20`ScalarProduct, {GA20`ScalarProduct[
         Pattern[GA20`Private`m1, 
          Blank[GA20`grade]], 
         Pattern[GA20`Private`m2, 
          Blank[GA20`grade]]] :> 
       AngleBracket[GA20`Private`m1, GA20`Private`m2]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "GA20`ScalarProduct"|>, False]]], "Output",
 CellChangeTimes->{{3.9039060609399443`*^9, 3.9039060761270742`*^9}, 
   3.903906131122693*^9, 3.903906568892687*^9, 3.903907020728424*^9, 
   3.903908224485874*^9, 3.9039094755827513`*^9, 3.903909530330585*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"a94d3aac-9502-477c-8a8f-57fbf8c0e826"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Predicate", " ", "tests"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Assert", "[", 
        RowBox[{"bladeQ", "[", "#", "]"}], "]"}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e0", ",", "e1", ",", "e2", ",", "e12"}], "}"}]}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Assert", "[", 
        RowBox[{"!", 
         RowBox[{"bladeQ", "[", "#", "]"}]}], "]"}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"m01", ",", "m02", ",", "m12", ",", "m012"}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Assert", "[", 
        RowBox[{"gradeAnyQ", "[", "#", "]"}], "]"}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", "m12", ",", 
       "m012"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Assert", "[", 
        RowBox[{"!", 
         RowBox[{"gradeAnyQ", "[", "#", "]"}]}], "]"}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"Sin", "[", "x", "]"}], ",", 
       RowBox[{"Exp", "[", 
        RowBox[{"I", " ", "theta"}], "]"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Assert", "[", 
        RowBox[{"!", 
         RowBox[{"notGradeQ", "[", "#", "]"}]}], "]"}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "e0", ",", "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", 
       "m12", ",", "m012"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Assert", "[", 
        RowBox[{"notGradeQ", "[", "#", "]"}], "]"}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"Sin", "[", "x", "]"}], ",", 
       RowBox[{"Exp", "[", 
        RowBox[{"I", " ", "theta"}], "]"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{"gradeQ", "[", 
          RowBox[{"#", ",", "0"}], "]"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{"scalarQ", "[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", "e0", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{"!", 
          RowBox[{"gradeQ", "[", 
           RowBox[{"#", ",", "0"}], "]"}]}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{"!", 
          RowBox[{"scalarQ", "[", "#", "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", "m12", ",", 
       "m012"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{"gradeQ", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{"vectorQ", "[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e1", ",", "e2"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{"!", 
          RowBox[{"gradeQ", "[", 
           RowBox[{"#", ",", "1"}], "]"}]}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{"!", 
          RowBox[{"vectorQ", "[", "#", "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "e0", ",", "e12", ",", "m01", ",", "m02", ",", "m12", ",", "m012"}], 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{"gradeQ", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{"bivectorQ", "[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", "e12", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{"!", 
          RowBox[{"gradeQ", "[", 
           RowBox[{"#", ",", "2"}], "]"}]}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{"!", 
          RowBox[{"bivectorQ", "[", "#", "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "e0", ",", "e1", ",", "e2", ",", "m01", ",", "m02", ",", "m12", ",", 
       "m012"}], "}"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Assert", "[", 
        RowBox[{"gradeQ", "[", 
         RowBox[{"#", ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"m01", ",", "m02", ",", "m12", ",", "m012"}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Assert", "[", 
        RowBox[{"!", 
         RowBox[{"gradeQ", "[", 
          RowBox[{"#", ",", 
           RowBox[{"-", "1"}]}], "]"}]}], "]"}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e0", ",", "e1", ",", "e2", ",", "e12"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Grade", " ", "selection", " ", 
     RowBox[{"tests", "."}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"GradeSelection", "[", 
           RowBox[{"#", ",", "0"}], "]"}], "\[Equal]", "e0"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"ScalarSelection", "[", "#", "]"}], "\[Equal]", "e0"}], 
         "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e0", ",", "m01", ",", "m02", ",", "m012"}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"GradeSelection", "[", 
           RowBox[{"#", ",", "0"}], "]"}], "\[Equal]", "0"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"ScalarSelection", "[", "#", "]"}], "\[Equal]", "0"}], 
         "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e1", ",", "e2", ",", "e12", ",", "m12"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"GradeSelection", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "\[Equal]", "e1"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"VectorSelection", "[", "#", "]"}], "\[Equal]", "e1"}], 
         "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e1", ",", "m01", ",", "m12", ",", "m012"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"GradeSelection", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "\[Equal]", "0"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"VectorSelection", "[", "#", "]"}], "\[Equal]", "0"}], 
         "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e0", ",", "e12", ",", "m02"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"GradeSelection", "[", 
           RowBox[{"#", ",", "2"}], "]"}], "\[Equal]", "e21"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"BivectorSelection", "[", "#", "]"}], "\[Equal]", "e21"}], 
         "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e21", ",", "m02", ",", "m12", ",", "m012"}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"GradeSelection", "[", 
           RowBox[{"#", ",", "2"}], "]"}], "\[Equal]", "0"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"BivectorSelection", "[", "#", "]"}], "\[Equal]", "0"}], 
         "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e0", ",", "e1", ",", "e2", ",", "m01"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Minus", " ", "tests"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"-", "e0"}], "\[Equal]", 
      RowBox[{"Scalar", "[", 
       RowBox[{"-", "1"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"-", "e1"}], "\[Equal]", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"-", "e2"}], "\[Equal]", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "2"}], "]"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"-", "e12"}], "\[Equal]", 
      RowBox[{"Bivector", "[", 
       RowBox[{"-", "1"}], "]"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"-", "m01"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "e0"}], "-", "e1"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"-", "m02"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "e0"}], "-", "e21"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"-", "m12"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "e1"}], "-", "e21"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"-", "m012"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "e0"}], "-", "e1", "-", "e21"}]}], "]"}], ";"}], "\n", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Scalar", "/", "Pseudoscalar"}], " ", "multiplication", " ", 
     "tests"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}]}], "\[Equal]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}]}], "\[Equal]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], "**", 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}]}], "\[Equal]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}], "**", 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}]}], "\[Equal]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"e0", ",", "e0", ",", 
         RowBox[{"Scalar", "[", "1", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e0", ",", "e1", ",", 
         RowBox[{"Vector", "[", 
          RowBox[{"1", ",", "1"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e0", ",", "e2", ",", 
         RowBox[{"Vector", "[", 
          RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e0", ",", "e12", ",", 
         RowBox[{"Bivector", "[", "1", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e0", ",", "m01", ",", 
         RowBox[{"e0", "+", "e1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e0", ",", "m02", ",", 
         RowBox[{"e0", "+", "e21"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e0", ",", "m12", ",", 
         RowBox[{"e1", "+", "e21"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e0", ",", "m012", ",", 
         RowBox[{"e0", "+", "e1", "+", "e21"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}]}], "\[Equal]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}]}], "\[Equal]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "e0", ",", 
         RowBox[{"Scalar", "[", "2", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "e1", ",", 
         RowBox[{"Vector", "[", 
          RowBox[{"2", ",", "1"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "e2", ",", 
         RowBox[{"Vector", "[", 
          RowBox[{"2", ",", "2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "e12", ",", 
         RowBox[{"Bivector", "[", "2", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "m01", ",", 
         RowBox[{
          RowBox[{"2", " ", "e0"}], "+", 
          RowBox[{"2", " ", "e1"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "m02", ",", 
         RowBox[{
          RowBox[{"2", " ", "e0"}], "+", 
          RowBox[{"2", " ", "e21"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "m12", ",", 
         RowBox[{
          RowBox[{"2", " ", "e1"}], "+", 
          RowBox[{"2", " ", "e21"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "m012", ",", 
         RowBox[{
          RowBox[{"2", " ", "e0"}], "+", 
          RowBox[{"2", " ", "e1"}], "+", 
          RowBox[{"2", " ", "e21"}]}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Tests", " ", "for", " ", 
      RowBox[{"(", 
       RowBox[{"non", "-", "commutitive"}], ")"}], " ", "multiplication"}], 
     ",", " ", 
     RowBox[{"dot", " ", "and", " ", 
      RowBox[{"wedge", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", " ", 
     RowBox[{
     "mbasis", ",", " ", "ptable", ",", " ", "dtable", ",", " ", "wtable", 
      ",", " ", "stable"}], " ", "]"}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mbasis", "=", 
     RowBox[{"{", 
      RowBox[{"e1", ",", "e2", ",", "e12"}], "}"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ptable", "=", 
     RowBox[{"(*", 
      RowBox[{"e1", ",", "e2", ",", "e12"}], "*)"}], 
     RowBox[{"(*", "e1", "*)"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"e0", ",", "e12", ",", "e2"}], "}"}], ",", 
       RowBox[{"(*", "e2", "*)"}], 
       RowBox[{"{", 
        RowBox[{"e21", ",", "e0", ",", 
         RowBox[{"-", "e1"}]}], "}"}], ",", 
       RowBox[{"(*", "e12", "*)"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "e2"}], ",", "e1", ",", 
         RowBox[{"-", "e0"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dtable", "=", 
     RowBox[{"(*", 
      RowBox[{"e1", ",", "e2", ",", "e12"}], "*)"}], 
     RowBox[{"(*", "e1", "*)"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"e0", ",", "0", ",", "e2"}], "}"}], ",", 
       RowBox[{"(*", "e2", "*)"}], 
       RowBox[{"{", 
        RowBox[{"0", ",", "e0", ",", 
         RowBox[{"-", "e1"}]}], "}"}], ",", 
       RowBox[{"(*", "e12", "*)"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "e2"}], ",", "e1", ",", 
         RowBox[{"-", "e0"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"wtable", "=", 
     RowBox[{"(*", 
      RowBox[{"e1", ",", "e2", ",", "e12"}], "*)"}], 
     RowBox[{"(*", "e1", "*)"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "e12", ",", "0"}], "}"}], ",", 
       RowBox[{"(*", "e2", "*)"}], 
       RowBox[{"{", 
        RowBox[{"e21", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"(*", "e12", "*)"}], 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stable", "=", 
     RowBox[{"(*", 
      RowBox[{"e1", ",", "e2", ",", "e12"}], "*)"}], 
     RowBox[{"(*", "e1", "*)"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ","}], "}"}], ",", 
       RowBox[{"(*", "e2", "*)"}], 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ","}], "}"}], ",", 
       RowBox[{"(*", "e12", "*)"}], 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]",
    "\n", "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], " ", "\[Equal]", " ", 
          RowBox[{"ptable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{"NonCommutativeMultiply", "[", " ", 
           RowBox[{
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "\[Equal]", " ", 
          RowBox[{"ptable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", ".", " ", 
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], " ", "\[Equal]", " ", 
          RowBox[{"dtable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{"Dot", "[", 
           RowBox[{
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "\[Equal]", " ", 
          RowBox[{"dtable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "\[Wedge]", " ", 
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], " ", "\[Equal]", " ", 
          RowBox[{"wtable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{"Wedge", "[", 
           RowBox[{
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "\[Equal]", " ", 
          RowBox[{"wtable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{"\[LeftAngleBracket]", 
           RowBox[{
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", ",", " ", 
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "\[RightAngleBracket]"}], " ", 
          "\[Equal]", " ", 
          RowBox[{"stable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{"ScalarProduct", "[", 
           RowBox[{
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", ",", " ", 
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "\[Equal]", " ", 
          RowBox[{"stable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{"\[LeftAngleBracket]", 
           RowBox[{
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "\[RightAngleBracket]"}], " ", 
          "\[Equal]", " ", 
          RowBox[{"stable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{"ScalarValue", "[", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"mbasis", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
             RowBox[{"mbasis", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], ")"}], " ", "]"}], " ", 
          "\[Equal]", " ", 
          RowBox[{"stable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{"ScalarSelection", "[", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"mbasis", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
              RowBox[{"mbasis", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ")"}], ",", " ", "False"}], 
           " ", "]"}], " ", "\[Equal]", " ", 
          RowBox[{"stable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", 
    ";"}], "\[IndentingNewLine]", "\n", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.691718210439073*^9, 3.6917182571309843`*^9}, {
   3.6917182929298563`*^9, 3.6917183025319567`*^9}, {3.691750173495006*^9, 
   3.691750175245139*^9}, 3.691751017579562*^9, 3.691751071857938*^9, {
   3.6917511135036993`*^9, 3.691751191437381*^9}, {3.691751563802803*^9, 
   3.6917516355396347`*^9}, {3.691752853444841*^9, 3.691752867621365*^9}, {
   3.691781247818859*^9, 3.691781307456411*^9}, {3.691790979873547*^9, 
   3.691790980953986*^9}, {3.6917910542064543`*^9, 3.691791055052411*^9}, {
   3.691794137408502*^9, 3.691794137710519*^9}, 3.6917962719730167`*^9, {
   3.691877176163657*^9, 3.691877176335655*^9}, {3.69187731756637*^9, 
   3.691877445706374*^9}, {3.6918913952879353`*^9, 3.691891479755362*^9}, {
   3.6918927133813543`*^9, 3.6918927172073717`*^9}, {3.691893181927628*^9, 
   3.691893218525127*^9}, 3.691893268298562*^9, {3.6918933086063213`*^9, 
   3.691893325140667*^9}, {3.6918933759750547`*^9, 3.691893402477111*^9}, {
   3.691893448595636*^9, 3.691893502444434*^9}, {3.692008445434374*^9, 
   3.692008484130316*^9}, 3.692009572040307*^9, 3.692009616150391*^9, {
   3.692009781283574*^9, 3.692009822922305*^9}, {3.692010176074326*^9, 
   3.692010196845755*^9}, {3.692010241326173*^9, 3.692010244005372*^9}, 
   3.6920111261218452`*^9, 3.9039066217301617`*^9, 3.9039070468926783`*^9, {
   3.903907099750635*^9, 3.903907152174775*^9}, {3.903907219136894*^9, 
   3.903907237528347*^9}, {3.903908436760044*^9, 3.9039084470603*^9}, {
   3.9039085385913143`*^9, 3.903908547994595*^9}, {3.903908922993863*^9, 
   3.903908926147127*^9}, {3.903909556442733*^9, 3.90390955936067*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"e82809a0-c711-4157-bbe2-9000a905158b"],

Cell["\<\
Debug code for ScalarValue failure, resolved.  Was a bug in special cased \
non-commutative multiply (1_, 2_, 3_ used in pattern rules instead of 1, 2, 3 \
-- seems that some Mathematica versions < 13.2 tolerated that.)\
\>", "Input",
 CellChangeTimes->{{3.903908284067874*^9, 3.903908350971819*^9}},
 FormatType->
  "TextForm",ExpressionUUID->"a57bed58-dbab-47a7-a4f2-caf9cb72b168"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"stable", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[IndentingNewLine]", 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", 
          RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "1", ",", " ", 
          RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ",
       "//", " ", 
      RowBox[{"Grid", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"\[LeftAngleBracket]", 
           RowBox[{
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "\[RightAngleBracket]"}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", 
           RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", " ", "1", ",", " ", 
           RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}]}]}],
      " ", "//", " ", 
     RowBox[{"Grid", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"ScalarValue", "[", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], ")"}], " ", "]"}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", 
          RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "1", ",", " ", 
          RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}]}]}], 
    " ", "//", " ", "Grid"}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mbasis", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "//", "FullForm"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"mbasis", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "//", 
      RowBox[{"FullForm", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "3", "]"}], "]"}], " ", "**", " ", 
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mbasis", "[", 
          RowBox[{"[", "3", "]"}], "]"}], " ", "**", " ", 
         RowBox[{"mbasis", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}]}], "//", "FullForm"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ScalarValue", "[", 
         RowBox[{
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "**", " ", 
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
        RowBox[{"\[LeftAngleBracket]", 
         RowBox[{
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "**", " ", 
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "\[RightAngleBracket]"}], 
        "\[IndentingNewLine]", 
        RowBox[{"List", "[", 
         RowBox[{
          RowBox[{"List", "[", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", 
          RowBox[{"List", "[", 
           RowBox[{"1", ",", "0"}], "]"}]}], "]"}]}], " ", "//", " ", 
       RowBox[{"MatrixForm", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"List", "[", 
           RowBox[{
            RowBox[{"List", "[", 
             RowBox[{"0", ",", 
              RowBox[{"-", "1"}]}], "]"}], ",", 
            RowBox[{"List", "[", 
             RowBox[{"1", ",", "0"}], "]"}]}], "]"}], ".", 
          RowBox[{"List", "[", 
           RowBox[{
            RowBox[{"List", "[", 
             RowBox[{"0", ",", 
              RowBox[{"-", "1"}]}], "]"}], ",", 
            RowBox[{"List", "[", 
             RowBox[{"1", ",", "0"}], "]"}]}], "]"}]}], " ", ")"}]}]}], "//", 
      " ", 
      RowBox[{"MatrixForm", "\[IndentingNewLine]", 
       RowBox[{"List", "[", 
        RowBox[{
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "]"}], ",", 
         RowBox[{"List", "[", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "]"}]}], "]"}]}]}], "//", " ", 
     "MatrixForm"}], "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.903907249043619*^9, 3.903907256325172*^9}, {
   3.903907463822339*^9, 3.9039074747369537`*^9}, {3.903907525626461*^9, 
   3.903907663173089*^9}, {3.903907744949098*^9, 3.903907753666975*^9}, {
   3.90390782663978*^9, 3.903907827632331*^9}, 3.9039078775149813`*^9, 
   3.903908241683661*^9, {3.903908366996069*^9, 3.903908370004375*^9}, {
   3.9039084895382233`*^9, 3.903908489781788*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"c918e8b1-dd42-4b5d-bda0-b68b8cc92e4c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"grade", "[", 
    RowBox[{"2", ",", 
     RowBox[{"List", "[", 
      RowBox[{
       RowBox[{"List", "[", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", 
       RowBox[{"List", "[", 
        RowBox[{"1", ",", "0"}], "]"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.903908491249496*^9},
 CellLabel->
  "Out[126]//FullForm=",ExpressionUUID->"f0286e6f-73bf-4c65-87ad-\
66443c2b050d"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.903907917802314*^9, 3.9039079391321163`*^9}, {
   3.903907977517469*^9, 3.903908002647903*^9}, {3.903908073596878*^9, 
   3.903908073814693*^9}, 3.903908106310154*^9, 3.903908363373014*^9},
 CellLabel->"In[71]:=",ExpressionUUID->"1b6bf4fa-6210-4898-9f9d-b3316ffa634c"],

Cell["\<\
Manual tests, showing the results of various products in traditional form.\
\>", "Text",
 CellChangeTimes->{{3.6917962788404827`*^9, 
  3.691796303542089*^9}},ExpressionUUID->"c62148eb-b4b9-4ddb-8c26-\
ce827fdf77e2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"x", ",", "y"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", " ", 
       RowBox[{"\"\<(\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ")"}], " ", "//", " ", 
         "TraditionalForm"}], ",", "\[IndentingNewLine]", "\"\<)(\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ")"}], " ", "//", " ", 
         "TraditionalForm"}], ",", "\[IndentingNewLine]", "\"\<) = \>\"", ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], " ", "**", " ", 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}]}], ")"}], "//", " ", 
         "TraditionalForm"}]}], "\[IndentingNewLine]", "}"}], "]"}], " ", 
     "&"}], "/@", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"e2", ",", "e2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"e2", ",", "e21"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e2", " ", "-", 
         RowBox[{"5", "e21"}]}], ",", "e2"}], "}"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"e2", ",", 
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{"3", "e21"}]}]}], "}"}], " ", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{
          RowBox[{"Tan", "[", "y", "]"}], "e21"}]}], ",", "e2"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "y", "]"}], "e2"}], ",", 
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{
          RowBox[{"Sin", "[", "x", "]"}], "e21"}]}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], " ", "//", "Column"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", " ", 
       RowBox[{"\"\<(\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ")"}], " ", "//", " ", "TeXForm"}],
         ",", "\[IndentingNewLine]", "\"\<)(\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ")"}], " ", "//", " ", "TeXForm"}],
         ",", "\[IndentingNewLine]", "\"\<) = \>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], " ", "**", " ", 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}]}], ")"}], "//", " ", 
         "TeXForm"}]}], "\[IndentingNewLine]", "}"}], "]"}], " ", "&"}], "/@",
     " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"e2", ",", "e2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"e2", ",", "e21"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e2", " ", "-", 
         RowBox[{"5", "e21"}]}], ",", "e2"}], "}"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"e2", ",", 
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{"3", "e21"}]}]}], "}"}], " ", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{
          RowBox[{"Tan", "[", "y", "]"}], "e21"}]}], ",", "e2"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "y", "]"}], "e2"}], ",", 
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{
          RowBox[{"Sin", "[", "x", "]"}], "e21"}]}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], " ", "//", "Column"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\< \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\< = \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], 
       RowBox[{"(*", 
        RowBox[{"//", " ", "TraditionalForm"}], "*)"}], "\[IndentingNewLine]",
        "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", "//",
    " ", "Grid"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\<\[CenterDot]\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\< = \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", " ", 
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], 
       RowBox[{"(*", 
        RowBox[{"//", " ", "TraditionalForm"}], "*)"}], "\[IndentingNewLine]",
        "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", "//",
    " ", "Grid"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\<\[Wedge]\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\< = \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "\[Wedge]", " ", 
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], 
       RowBox[{"(*", 
        RowBox[{"//", " ", "TraditionalForm"}], "*)"}], "\[IndentingNewLine]",
        "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", "//",
    " ", "Grid"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"\"\<<\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\< \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\<>\>\"", ",", "\[IndentingNewLine]", 
        "\"\< = \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{"\[LeftAngleBracket]", 
          RowBox[{
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "\[RightAngleBracket]"}], 
         ")"}]}], 
       RowBox[{"(*", 
        RowBox[{"//", " ", "TraditionalForm"}], "*)"}], "\[IndentingNewLine]",
        "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", "//",
    " ", "Grid"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"XXForm", " ", "tests", " ", 
    RowBox[{"(", 
     RowBox[{"manual", " ", "verification"}], ")"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "//", "TraditionalForm"}], ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", 
      "m12", ",", "m012"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "#", ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", 
      "m12", ",", "m012"}], "}"}]}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "//", "StandardForm"}], ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", 
      "m12", ",", "m012"}], "}"}]}], "]"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "//", "DisplayForm"}], ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", 
      "m12", ",", "m012"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"#", "//", "TeXForm"}], ")"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "e0", ",", "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", 
     "m12", ",", "m012"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.691791531811805*^9, 3.691791549767912*^9}, {
   3.691791588713826*^9, 3.6917916498371696`*^9}, {3.6917917021550827`*^9, 
   3.6917917202040462`*^9}, {3.691791774541381*^9, 3.6917918197078323`*^9}, 
   3.691791893128619*^9, {3.691792581346946*^9, 3.691792589408039*^9}, {
   3.6917927042212276`*^9, 3.6917927050141172`*^9}, {3.691792865075037*^9, 
   3.691793027992055*^9}, {3.6917931138285217`*^9, 3.691793354385445*^9}, {
   3.691793421672282*^9, 3.691793454478035*^9}, {3.691793493307729*^9, 
   3.69179354162236*^9}, {3.691793573926221*^9, 3.6917935756674356`*^9}, {
   3.691793611249544*^9, 3.6917936578082323`*^9}, {3.6917941624602947`*^9, 
   3.6917942544317627`*^9}, {3.6917943028594723`*^9, 
   3.6917943451806803`*^9}, {3.691794382116899*^9, 3.691794551102071*^9}, {
   3.691794612330554*^9, 3.6917946761087217`*^9}, {3.691794709650693*^9, 
   3.691794747375781*^9}, {3.691794811887302*^9, 3.6917948276847553`*^9}, {
   3.691794955976565*^9, 3.6917950084512367`*^9}, {3.691795218630961*^9, 
   3.691795386213243*^9}, {3.6917954181246157`*^9, 3.691795482761589*^9}, {
   3.691795531345439*^9, 3.691795544568725*^9}, {3.691795576303005*^9, 
   3.691795598207263*^9}, {3.6917958088878593`*^9, 3.6917958093751593`*^9}, {
   3.691795841721541*^9, 3.691795844686182*^9}, {3.691877176350192*^9, 
   3.6918771763574247`*^9}, {3.691877317814925*^9, 3.691877377965032*^9}, {
   3.6918915221836243`*^9, 3.6918915475643578`*^9}, 3.691894212777133*^9, 
   3.692008355674622*^9, {3.701715865185787*^9, 3.701715932561586*^9}, {
   3.701716022451016*^9, 3.7017160291443787`*^9}, {3.725326840526416*^9, 
   3.72532685073575*^9}, {3.725326921227632*^9, 
   3.725326925969862*^9}},ExpressionUUID->"e3b5b69f-1919-4ce3-9768-\
9be6133abe0d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox["1", TraditionalForm], TraditionalForm, Editable -> True]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         RowBox[{"-", 
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]}], 
         TraditionalForm], TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], 
         TraditionalForm], TraditionalForm, Editable -> True]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         RowBox[{
           RowBox[{"5", " ", 
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]}], 
           "+", 
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]}], 
         TraditionalForm], TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox[
         RowBox[{
           RowBox[{"5", " ", 
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}], "+", 
           "1"}], TraditionalForm], TraditionalForm, Editable -> True]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         RowBox[{
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "-", 
           RowBox[{"3", " ", 
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]}]}], 
         TraditionalForm], TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox[
         RowBox[{
           RowBox[{"3", " ", 
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}], "+", 
           "1"}], TraditionalForm], TraditionalForm, Editable -> True]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         RowBox[{
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "-", 
           RowBox[{
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], " ", 
             
             RowBox[{"tan", "(", "y", ")"}]}]}], TraditionalForm], 
        TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox[
         RowBox[{"1", "-", 
           RowBox[{
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], " ", 
             RowBox[{"tan", "(", "y", ")"}]}]}], TraditionalForm], 
        TraditionalForm, Editable -> True]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         RowBox[{
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], " ", 
           RowBox[{"cos", "(", "y", ")"}]}], TraditionalForm], 
        TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         RowBox[{
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "-", 
           RowBox[{
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], " ", 
             
             RowBox[{"sin", "(", "x", ")"}]}]}], TraditionalForm], 
        TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox[
         RowBox[{
           RowBox[{
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], " ", 
             RowBox[{"sin", "(", "x", ")"}], " ", 
             RowBox[{"cos", "(", "y", ")"}]}], "+", 
           RowBox[{"cos", "(", "y", ")"}]}], TraditionalForm], 
        TraditionalForm, Editable -> True]},
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.692008358361168*^9, 3.7017159722680187`*^9, 
  3.7017160306697197`*^9, 3.72532685182164*^9, 3.72532689730477*^9, 
  3.7253269276783257`*^9, 
  3.725577939850293*^9},ExpressionUUID->"2fdff892-f9d4-4ced-977e-\
8f3197dc3d08"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
      "\"(\"", "\"\\\\mathbf{e}_2\"", "\")(\"", "\"\\\\mathbf{e}_2\"", 
       "\") = \"", "1"},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", "\"\\\\mathbf{e}_2\"", "\")(\"", 
       RowBox[{"\"\\\\mathbf{e}_{12}\"", " ", 
         InterpretationBox["\"-1\"", 
          TeXForm[-1], Editable -> True, AutoDelete -> True]}], "\") = \"", 
       "\"\\\\mathbf{e}_1\""},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       RowBox[{"\"\\\\mathbf{e}_2\"", "+", 
         RowBox[{"\"\\\\mathbf{e}_{12}\"", " ", 
           InterpretationBox["\"5\"", 
            TeXForm[5], Editable -> True, AutoDelete -> True]}]}], "\")(\"", 
       "\"\\\\mathbf{e}_2\"", "\") = \"", 
       RowBox[{"1", "+", 
         RowBox[{"\"\\\\mathbf{e}_1\"", " ", 
           InterpretationBox["\"5\"", 
            TeXForm[5], Editable -> True, AutoDelete -> True]}]}]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", "\"\\\\mathbf{e}_2\"", "\")(\"", 
       RowBox[{"\"\\\\mathbf{e}_2\"", "+", 
         RowBox[{"\"\\\\mathbf{e}_{12}\"", " ", 
           InterpretationBox["\"-3\"", 
            TeXForm[-3], Editable -> True, AutoDelete -> True]}]}], 
       "\") = \"", 
       RowBox[{"1", "+", 
         RowBox[{"\"\\\\mathbf{e}_1\"", " ", 
           InterpretationBox["\"3\"", 
            TeXForm[3], Editable -> True, AutoDelete -> True]}]}]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       RowBox[{"\"\\\\mathbf{e}_2\"", "+", 
         RowBox[{"\"\\\\mathbf{e}_{12}\"", " ", 
           InterpretationBox["\"-\\\\tan (y)\"", 
            TeXForm[-Tan[$CellContext`y]], Editable -> True, AutoDelete -> 
            True]}]}], "\")(\"", "\"\\\\mathbf{e}_2\"", "\") = \"", 
       RowBox[{"1", "+", 
         RowBox[{"\"\\\\mathbf{e}_1\"", " ", 
           InterpretationBox["\"-\\\\tan (y)\"", 
            TeXForm[-Tan[$CellContext`y]], Editable -> True, AutoDelete -> 
            True]}]}]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       RowBox[{"\"\\\\mathbf{e}_2\"", " ", 
         InterpretationBox["\"\\\\cos (y)\"", 
          TeXForm[
           Cos[$CellContext`y]], Editable -> True, AutoDelete -> True]}], 
       "\")(\"", 
       RowBox[{"\"\\\\mathbf{e}_2\"", "+", 
         RowBox[{"\"\\\\mathbf{e}_{12}\"", " ", 
           InterpretationBox["\"-\\\\sin (x)\"", 
            TeXForm[-Sin[$CellContext`x]], Editable -> True, AutoDelete -> 
            True]}]}], "\") = \"", 
       RowBox[{
         InterpretationBox["\"\\\\cos (y)\"", 
          TeXForm[
           Cos[$CellContext`y]], Editable -> True, AutoDelete -> True], "+", 
         RowBox[{"\"\\\\mathbf{e}_1\"", " ", 
           InterpretationBox["\"\\\\sin (x) \\\\cos (y)\"", 
            TeXForm[Cos[$CellContext`y] Sin[$CellContext`x]], Editable -> 
            True, AutoDelete -> True]}]}]},
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.692008358361168*^9, 3.7017159722680187`*^9, 
  3.7017160306697197`*^9, 3.72532685182164*^9, 3.72532689730477*^9, 
  3.7253269276783257`*^9, 
  3.725577939865388*^9},ExpressionUUID->"27a14163-ea10-451d-9296-\
dfff793382cc"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "1"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "1"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}]},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       RowBox[{"-", "1"}]},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.692008358361168*^9, 3.7017159722680187`*^9, 
  3.7017160306697197`*^9, 3.72532685182164*^9, 3.72532689730477*^9, 
  3.7253269276783257`*^9, 
  3.725577939876542*^9},ExpressionUUID->"549c071e-89e0-4f7d-8683-\
ac44bf03e9b5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "1"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "1"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}]},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       RowBox[{"-", "1"}]},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.692008358361168*^9, 3.7017159722680187`*^9, 
  3.7017160306697197`*^9, 3.72532685182164*^9, 3.72532689730477*^9, 
  3.7253269276783257`*^9, 
  3.725577939887556*^9},ExpressionUUID->"33eafba4-ed1d-4ed5-b6fb-\
12e9e6eb060b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       "0"},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       "0"},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       "0"},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.692008358361168*^9, 3.7017159722680187`*^9, 
  3.7017160306697197`*^9, 3.72532685182164*^9, 3.72532689730477*^9, 
  3.7253269276783257`*^9, 
  3.7255779398964357`*^9},ExpressionUUID->"c0d9860e-af64-48fd-bada-\
21319cfc2cc2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\">\"", 
       "\" = \"", "1"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"]},
    {
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\">\"", 
       "\" = \"", "1"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"]},
    {
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\">\"", 
       "\" = \"", 
       RowBox[{"-", "1"}]},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.692008358361168*^9, 3.7017159722680187`*^9, 
  3.7017160306697197`*^9, 3.72532685182164*^9, 3.72532689730477*^9, 
  3.7253269276783257`*^9, 
  3.725577939905415*^9},ExpressionUUID->"deeae0a5-c4ec-4546-9ee4-\
a86c1b0d786d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      FormBox["1",
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {
     TagBox[
      FormBox[
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "1"],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {
     TagBox[
      FormBox[
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "2"],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {
     TagBox[
      FormBox[
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"12\"\>"],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {
     TagBox[
      FormBox[
       RowBox[{
        SubscriptBox[
         StyleBox["\<\"e\"\>",
          StripOnInput->False,
          FontWeight->Bold], "1"], "+", "1"}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {
     TagBox[
      FormBox[
       RowBox[{"1", "-", 
        SubscriptBox[
         StyleBox["\<\"e\"\>",
          StripOnInput->False,
          FontWeight->Bold], "\<\"12\"\>"]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {
     TagBox[
      FormBox[
       RowBox[{
        SubscriptBox[
         StyleBox["\<\"e\"\>",
          StripOnInput->False,
          FontWeight->Bold], "1"], "-", 
        SubscriptBox[
         StyleBox["\<\"e\"\>",
          StripOnInput->False,
          FontWeight->Bold], "\<\"12\"\>"]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {
     TagBox[
      FormBox[
       RowBox[{
        RowBox[{"-", 
         SubscriptBox[
          StyleBox["\<\"e\"\>",
           StripOnInput->False,
           FontWeight->Bold], "\<\"12\"\>"]}], "+", 
        SubscriptBox[
         StyleBox["\<\"e\"\>",
          StripOnInput->False,
          FontWeight->Bold], "1"], "+", "1"}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.692008358361168*^9, 3.7017159722680187`*^9, 
  3.7017160306697197`*^9, 3.72532685182164*^9, 3.72532689730477*^9, 
  3.7253269276783257`*^9, 
  3.725577939914981*^9},ExpressionUUID->"01df4d73-5399-4994-a7fe-\
76d2ec940254"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "1"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "2"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "\<\"12\"\>"]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"]}]},
    {
     RowBox[{"1", "-", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"12\"\>"]}]},
    {
     RowBox[{
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "-", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"12\"\>"]}]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "-", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"12\"\>"]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.692008358361168*^9, 3.7017159722680187`*^9, 
  3.7017160306697197`*^9, 3.72532685182164*^9, 3.72532689730477*^9, 
  3.7253269276783257`*^9, 
  3.725577939921418*^9},ExpressionUUID->"345dae69-cce1-4d32-9cc4-\
271481154c1e"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {
     RowBox[{"e", "[", "1", "]"}]},
    {
     RowBox[{"e", "[", "2", "]"}]},
    {
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], " ", 
      RowBox[{"e", "[", "2", "]"}]}]},
    {
     RowBox[{"1", "+", 
      RowBox[{"e", "[", "1", "]"}]}]},
    {
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], "-", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}]}]}]},
    {
     RowBox[{"1", "+", 
      RowBox[{"e", "[", "1", "]"}], "-", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}]}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.692008358361168*^9, 3.7017159722680187`*^9, 
  3.7017160306697197`*^9, 3.72532685182164*^9, 3.72532689730477*^9, 
  3.7253269276783257`*^9, 
  3.725577939927923*^9},ExpressionUUID->"8d20b32a-6a8e-44b3-b142-\
6bba4d853d16"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "1"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "2"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "\<\"12\"\>"]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"]}]},
    {
     RowBox[{"1", "-", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"12\"\>"]}]},
    {
     RowBox[{
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "-", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"12\"\>"]}]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "-", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"12\"\>"]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.692008358361168*^9, 3.7017159722680187`*^9, 
  3.7017160306697197`*^9, 3.72532685182164*^9, 3.72532689730477*^9, 
  3.7253269276783257`*^9, 
  3.725577939933832*^9},ExpressionUUID->"09b93813-9c7e-4201-86b9-\
6beb4132a0e7"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {"\<\"\\\\mathbf{e}_1\"\>"},
    {"\<\"\\\\mathbf{e}_2\"\>"},
    {"\<\"\\\\mathbf{e}_{12}\"\>"},
    {
     RowBox[{"1", "+", "\<\"\\\\mathbf{e}_1\"\>"}]},
    {
     RowBox[{"1", "+", 
      RowBox[{"\<\"\\\\mathbf{e}_{12}\"\>", " ", 
       InterpretationBox["\<\"-1\"\>",
        TeXForm[-1],
        AutoDelete->True,
        Editable->True]}]}]},
    {
     RowBox[{"\<\"\\\\mathbf{e}_1\"\>", "+", 
      RowBox[{"\<\"\\\\mathbf{e}_{12}\"\>", " ", 
       InterpretationBox["\<\"-1\"\>",
        TeXForm[-1],
        AutoDelete->True,
        Editable->True]}]}]},
    {
     RowBox[{"1", "+", "\<\"\\\\mathbf{e}_1\"\>", "+", 
      RowBox[{"\<\"\\\\mathbf{e}_{12}\"\>", " ", 
       InterpretationBox["\<\"-1\"\>",
        TeXForm[-1],
        AutoDelete->True,
        Editable->True]}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.692008358361168*^9, 3.7017159722680187`*^9, 
  3.7017160306697197`*^9, 3.72532685182164*^9, 3.72532689730477*^9, 
  3.7253269276783257`*^9, 
  3.7255779399399242`*^9},ExpressionUUID->"1423bc8c-9189-4aca-a18c-\
03724a70d834"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TODO", ":", " ", 
   RowBox[{"test", " ", "multivector", " ", "products"}], ":", " ", "dot"}], 
  ",", " ", "wedge", ",", " ", "**"}]], "Input",
 CellChangeTimes->{{3.691875787772244*^9, 
  3.691875845771678*^9}},ExpressionUUID->"89709ba7-11b4-431e-86fb-\
60b4d59253cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"manual", " ", "test"}], ",", " ", 
    RowBox[{"or", " ", "just", " ", "the", " ", "dot", " ", "product"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"m1", ",", " ", "m2"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m1", " ", "=", " ", 
     RowBox[{
      RowBox[{"Scalar", "[", "1", "]"}], " ", "+", " ", 
      RowBox[{"Vector", "[", 
       RowBox[{"1", ",", "2"}], "]"}], " ", "+", " ", 
      RowBox[{"Bivector", "[", "1", "]"}]}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m2", " ", "=", " ", 
     RowBox[{
      RowBox[{"Scalar", "[", "1", "]"}], " ", "+", 
      RowBox[{"Vector", "[", 
       RowBox[{"1", ",", "2"}], "]"}], " ", "-", " ", 
      RowBox[{"Bivector", "[", "1", "]"}]}]}], " ", ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"m1", ".", "m2", " ", 
    RowBox[{"(*", 
     RowBox[{"//", " ", "TraditionalForm"}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.691875800491975*^9, 3.691875809658766*^9}, {
   3.691894037639244*^9, 3.6918940494691973`*^9}, {3.6920078010125427`*^9, 
   3.692007803102578*^9}, {3.692007850722372*^9, 3.692007934001274*^9}, {
   3.6920081954687862`*^9, 3.692008307979595*^9}, {3.692008611408082*^9, 
   3.6920086707843313`*^9}, {3.692008737523641*^9, 3.692008851842248*^9}, {
   3.6920089522646008`*^9, 3.692008989460525*^9}, {3.692009053324778*^9, 
   3.692009079959097*^9}, {3.6920091458202543`*^9, 3.6920092718791637`*^9}, {
   3.692009335807555*^9, 3.692009357277741*^9}, {3.692009468340424*^9, 
   3.6920095174128113`*^9}, {3.692011154866823*^9, 3.6920111679047127`*^9}, 
   3.701715942437066*^9, {3.903906049371635*^9, 3.903906050739449*^9}, {
   3.903906090875183*^9, 3.903906113068692*^9}, {3.9039061470447187`*^9, 
   3.903906149483178*^9}, {3.903906197314074*^9, 3.903906212954405*^9}, {
   3.903906243138854*^9, 3.903906265073345*^9}, {3.903906424834886*^9, 
   3.903906437805189*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"8f7ceef2-b423-4af6-a3d7-c8ec2b91e0e3"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.691894056730894*^9, 3.692007804959461*^9, {3.692007852070221*^9, 
   3.6920078719115267`*^9}, {3.692007910309023*^9, 3.692007935692668*^9}, 
   3.6920081772608852`*^9, 3.6920082262593327`*^9, {3.692008258184786*^9, 
   3.6920083087241697`*^9}, {3.692008620290701*^9, 3.6920086725803347`*^9}, {
   3.692008781682931*^9, 3.692008852442244*^9}, 3.6920089391140213`*^9, 
   3.6920089905016127`*^9, 3.692009080840979*^9, {3.692009213549879*^9, 
   3.692009234341085*^9}, 3.692009273253623*^9, 3.692009358975376*^9, {
   3.692009469085383*^9, 3.69200952028538*^9}, 3.692011156609562*^9, 
   3.701716039001183*^9, 3.903906046034636*^9, {3.9039061020602493`*^9, 
   3.9039061499049597`*^9}, {3.9039062021994953`*^9, 
   3.9039062151745033`*^9}, {3.9039062579063053`*^9, 3.903906269200245*^9}, 
   3.903906430675804*^9, 3.903908391525752*^9, 3.903909672024331*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"7407ae78-6c1f-44b2-8026-d6ea3bad91ab"]
}, Open  ]],

Cell["\<\
Original manual unit test for ScalarSelection with True/False parameters.  \
Also have Assertion test for the False case above (all the single grade \
products.)
\
\>", "Text",
 CellChangeTimes->{{3.903906443384185*^9, 3.9039064630427322`*^9}, {
  3.90390961957627*^9, 3.903909655080961*^9}, {3.903909689642129*^9, 
  3.90390969498808*^9}},ExpressionUUID->"394c8ee4-4228-4da4-a0a3-\
b5bcf7357381"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ScalarSelection", "[", 
   RowBox[{"3", " ", "m1"}], "]"}], "//", " ", 
  "FullForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ScalarSelection", "[", 
   RowBox[{
    RowBox[{"3", " ", "m1"}], ",", " ", "True"}], "]"}], "//", " ", 
  "FullForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ScalarSelection", "[", 
   RowBox[{
    RowBox[{"3", " ", "m1"}], ",", " ", "False"}], "]"}], "//", " ", 
  "FullForm"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.903906740043022*^9, 3.90390675125698*^9}, {
   3.903908575421783*^9, 3.9039086047626467`*^9}, 3.903909615724053*^9, 
   3.903909661560058*^9},
 CellLabel->
  "In[122]:=",ExpressionUUID->"c2599d95-a3eb-47f8-9521-c8ebaf6998e5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"grade", "[", 
    RowBox[{"0", ",", 
     RowBox[{"List", "[", 
      RowBox[{
       RowBox[{"List", "[", 
        RowBox[{"3", ",", "0"}], "]"}], ",", 
       RowBox[{"List", "[", 
        RowBox[{"0", ",", "3"}], "]"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.903909662576621*^9, 3.903909674547065*^9}},
 CellLabel->
  "Out[122]//FullForm=",ExpressionUUID->"47fc49e7-7dd6-41a9-8fbb-\
9027de56e429"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"grade", "[", 
    RowBox[{"0", ",", 
     RowBox[{"List", "[", 
      RowBox[{
       RowBox[{"List", "[", 
        RowBox[{"3", ",", "0"}], "]"}], ",", 
       RowBox[{"List", "[", 
        RowBox[{"0", ",", "3"}], "]"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.903909662576621*^9, 3.9039096745492153`*^9}},
 CellLabel->
  "Out[123]//FullForm=",ExpressionUUID->"42ac626e-ab5d-4593-ac9d-\
a3bb297d6d9c"],

Cell[BoxData[
 TagBox[
  StyleBox["3",
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.903909662576621*^9, 3.903909674550682*^9}},
 CellLabel->
  "Out[124]//FullForm=",ExpressionUUID->"46727896-f98e-448a-b809-\
cb61e6c68487"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"ClearAll", "[", "s", "]"}], "\[IndentingNewLine]", "s"}], " ", 
    "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            TagBox[
             StyleBox[
              RowBox[{"grade", "[", 
               RowBox[{"2", ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"List", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"1", ",", "0"}], "]"}]}], "]"}]}], "]"}],
              ShowSpecialCharacters->False,
              ShowStringCharacters->True,
              NumberMarks->True],
             FullForm], " ", "**", " ", 
            TagBox[
             StyleBox[
              RowBox[{"grade", "[", 
               RowBox[{"2", ",", 
                RowBox[{"List", "[", 
                 RowBox[{
                  RowBox[{"List", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"1", ",", "0"}], "]"}]}], "]"}]}], "]"}],
              ShowSpecialCharacters->False,
              ShowStringCharacters->True,
              NumberMarks->True],
             FullForm]}], "\[IndentingNewLine]", "s"}], "//", " ", 
          RowBox[{"FullForm", "\[IndentingNewLine]", 
           RowBox[{"(", 
            RowBox[{"s", "//", "Last"}], ")"}]}]}], " ", "//", " ", 
         RowBox[{"MatrixForm", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"ScalarSelection", "[", "s", "]"}], "\[IndentingNewLine]", 
          RowBox[{"ScalarSelection", "[", 
           RowBox[{"s", ",", " ", "True"}], "]"}]}]}], "//", " ", 
        RowBox[{"FullForm", "\[IndentingNewLine]", 
         RowBox[{"ScalarSelection", "[", 
          RowBox[{"s", ",", " ", "False"}], "]"}]}]}], "//", " ", 
       RowBox[{"FullForm", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "j", ",", 
              RowBox[{"mbasis", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"mbasis", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"mbasis", "[", 
                RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
               RowBox[{"mbasis", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"mbasis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
                 RowBox[{"mbasis", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "//", "FullForm"}],
               ",", " ", 
              RowBox[{"stable", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Assert", "[", " ", 
             RowBox[{
              RowBox[{"ScalarSelection", "[", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"mbasis", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
                  RowBox[{"mbasis", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}], ")"}], ",", " ", 
                "False"}], " ", "]"}], " ", "\[Equal]", " ", 
              RowBox[{"stable", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "2", ",", " ", "2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "1", ",", " ", "1"}], "}"}]}], "]"}], " ", 
        "\[IndentingNewLine]", 
        StyleBox[
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"List", "[", 
            RowBox[{"0", ",", "1"}], "]"}], ",", 
           RowBox[{"List", "[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "]"}]}], "]"}],
         ShowSpecialCharacters->False,
         ShowStringCharacters->True,
         NumberMarks->True]}]}], 
      StyleBox["//",
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True], 
      StyleBox[
       RowBox[{"MatrixForm", "\\[IndentingNewLine]", 
        RowBox[{"ClearAll", "[", "f21", "]"}], "\n", "f21"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True]}], 
     StyleBox["=",
      ShowSpecialCharacters->False,
      ShowStringCharacters->True,
      NumberMarks->True], 
     RowBox[{
      StyleBox[
       RowBox[{"grade", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"List", "[", 
            RowBox[{"0", ",", "1"}], "]"}], ",", 
           RowBox[{"List", "[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "]"}]}], "]"}]}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True], 
      StyleBox["\n",
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True], 
      StyleBox[
       RowBox[{"ScalarSelection", "[", "f21", "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True], 
      StyleBox["\\[IndentingNewLine]",
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True], 
      RowBox[{"ScalarSelection", "[", 
       RowBox[{"f21", ",", " ", "True"}], "]"}], "\[IndentingNewLine]", 
      RowBox[{"ScalarSelection", "[", 
       RowBox[{"f21", ",", " ", "False"}], "]"}]}]}]}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.903908760393325*^9, 3.903908880681196*^9}, {
  3.903909601640427*^9, 3.9039096077515173`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"dc92bea9-8d7c-4a5f-8e0f-6348360e0097"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.90390893778668*^9, 3.903909038449565*^9}, {
  3.903909094229562*^9, 3.903909101216241*^9}, {3.903909587903927*^9, 
  3.9039095951212187`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"79de829a-7985-47ea-875d-cfba0d4fe203"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.903909207793685*^9, 3.903909217883864*^9}, {
  3.9039095804548817`*^9, 3.9039095838900547`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"ddc5a5dd-d2cb-4b31-8f15-ae6a920bfc81"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9039092939733*^9, 3.9039094003966846`*^9}, 
   3.903909576879961*^9},
 CellLabel->
  "In[110]:=",ExpressionUUID->"fa388657-e27d-4243-818f-ffe57c4370e1"]
},
WindowSize->{1440, 813},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c41db28f-0d15-4110-a6b8-7d2331395328"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 536, 13, 226, "Text",ExpressionUUID->"45ceca23-304a-4fb9-82ba-372933a8b95c"],
Cell[CellGroupData[{
Cell[1119, 37, 2900, 75, 1194, "Input",ExpressionUUID->"36971f6a-0943-4dee-bce7-5d397b773d20"],
Cell[4022, 114, 16184, 312, 2521, "Output",ExpressionUUID->"1a7c78ea-8f6e-41db-8ba5-fcf865eae6b7"],
Cell[20209, 428, 10301, 256, 141, "Output",ExpressionUUID->"9f02b8de-7926-437e-90e3-29290c79857a"],
Cell[30513, 686, 11609, 284, 141, "Output",ExpressionUUID->"b588a180-ca8e-4f71-86df-e5b079d1dee6"],
Cell[42125, 972, 10583, 261, 141, "Output",ExpressionUUID->"b692f3d9-1f52-4da9-8d90-bb02b62aa7ad"],
Cell[52711, 1235, 10398, 257, 141, "Output",ExpressionUUID->"792f56bf-aedd-46c4-8af2-63914881a5eb"],
Cell[63112, 1494, 9994, 249, 141, "Output",ExpressionUUID->"70314832-782d-43c1-aa6b-bdc8ce86c7b7"],
Cell[73109, 1745, 9992, 249, 141, "Output",ExpressionUUID->"002e63d5-3260-405f-bc89-c2f00b54a879"],
Cell[83104, 1996, 10020, 250, 141, "Output",ExpressionUUID->"dfdf999b-7ea7-4ddc-96f4-fd1884ad0852"],
Cell[93127, 2248, 10004, 250, 141, "Output",ExpressionUUID->"08ab09ae-274b-4046-9c1c-2dd53b73e938"],
Cell[103134, 2500, 10002, 249, 141, "Output",ExpressionUUID->"546119ed-fd8e-4493-8dab-1305518119de"],
Cell[113139, 2751, 9971, 250, 141, "Output",ExpressionUUID->"821d9409-94d9-47bd-bfa4-babecb3f28f3"],
Cell[123113, 3003, 644, 13, 70, "Message",ExpressionUUID->"e67a836b-8333-411f-89ca-6c396665e293"],
Cell[123760, 3018, 13687, 331, 176, "Output",ExpressionUUID->"3ea61a9a-9a44-4649-9aba-149aac1e23b1"],
Cell[137450, 3351, 12384, 293, 211, "Output",ExpressionUUID->"0de4358b-a648-4c42-b2c3-ae8c2aab739e"],
Cell[149837, 3646, 10592, 260, 141, "Output",ExpressionUUID->"2df3bd4e-7028-4bd6-8d29-1e5b0ffd40a6"],
Cell[160432, 3908, 10614, 260, 141, "Output",ExpressionUUID->"fce1d3ce-b53c-4562-a682-46d5d79f617a"],
Cell[171049, 4170, 10543, 261, 141, "Output",ExpressionUUID->"528155bf-a8ce-42a5-a1fe-2c01ccec8797"],
Cell[181595, 4433, 10775, 265, 141, "Output",ExpressionUUID->"a94d3aac-9502-477c-8a8f-57fbf8c0e826"]
}, Open  ]],
Cell[192385, 4701, 28263, 781, 3447, "Input",ExpressionUUID->"e82809a0-c711-4157-bbe2-9000a905158b"],
Cell[220651, 5484, 393, 7, 62, "Input",ExpressionUUID->"a57bed58-dbab-47a7-a4f2-caf9cb72b168"],
Cell[CellGroupData[{
Cell[221069, 5495, 5671, 141, 884, "Input",ExpressionUUID->"c918e8b1-dd42-4b5d-bda0-b68b8cc92e4c"],
Cell[226743, 5638, 560, 19, 73, "Output",ExpressionUUID->"f0286e6f-73bf-4c65-87ad-66443c2b050d"]
}, Open  ]],
Cell[227318, 5660, 317, 4, 46, "Input",ExpressionUUID->"1b6bf4fa-6210-4898-9f9d-b3316ffa634c"],
Cell[227638, 5666, 226, 5, 53, "Text",ExpressionUUID->"c62148eb-b4b9-4ddb-8c26-ce827fdf77e2"],
Cell[CellGroupData[{
Cell[227889, 5675, 13669, 340, 2651, "Input",ExpressionUUID->"e3b5b69f-1919-4ce3-9768-9be6133abe0d"],
Cell[241561, 6017, 5472, 152, 177, "Output",ExpressionUUID->"2fdff892-f9d4-4ced-977e-8f3197dc3d08"],
Cell[247036, 6171, 3327, 81, 183, "Output",ExpressionUUID->"27a14163-ea10-451d-9296-dfff793382cc"],
Cell[250366, 6254, 3180, 88, 99, "Output",ExpressionUUID->"549c071e-89e0-4f7d-8683-ac44bf03e9b5"],
Cell[253549, 6344, 3170, 94, 99, "Output",ExpressionUUID->"33eafba4-ed1d-4ed5-b6fb-12e9e6eb060b"],
Cell[256722, 6440, 2938, 88, 99, "Output",ExpressionUUID->"c0d9860e-af64-48fd-bada-21319cfc2cc2"],
Cell[259663, 6530, 2811, 77, 99, "Output",ExpressionUUID->"deeae0a5-c4ec-4546-9ee4-a86c1b0d786d"],
Cell[262477, 6609, 2546, 100, 229, "Output",ExpressionUUID->"01df4d73-5399-4994-a7fe-76d2ec940254"],
Cell[265026, 6711, 1646, 59, 229, "Output",ExpressionUUID->"345dae69-cce1-4d32-9cc4-271481154c1e"],
Cell[266675, 6772, 1186, 40, 229, "Output",ExpressionUUID->"8d20b32a-6a8e-44b3-b142-6bba4d853d16"],
Cell[267864, 6814, 1646, 59, 229, "Output",ExpressionUUID->"09b93813-9c7e-4201-86b9-6beb4132a0e7"],
Cell[269513, 6875, 1273, 38, 235, "Output",ExpressionUUID->"1423bc8c-9189-4aca-a18c-03724a70d834"]
}, Open  ]],
Cell[270801, 6916, 305, 7, 46, "Input",ExpressionUUID->"89709ba7-11b4-431e-86fb-60b4d59253cb"],
Cell[CellGroupData[{
Cell[271131, 6927, 2099, 44, 171, "Input",ExpressionUUID->"8f7ceef2-b423-4af6-a3d7-c8ec2b91e0e3"],
Cell[273233, 6973, 991, 15, 52, "Output",ExpressionUUID->"7407ae78-6c1f-44b2-8026-d6ea3bad91ab"]
}, Open  ]],
Cell[274239, 6991, 407, 9, 122, "Text",ExpressionUUID->"394c8ee4-4228-4da4-a0a3-b5bcf7357381"],
Cell[CellGroupData[{
Cell[274671, 7004, 738, 19, 140, "Input",ExpressionUUID->"c2599d95-a3eb-47f8-9521-c8ebaf6998e5"],
Cell[275412, 7025, 559, 18, 73, "Output",ExpressionUUID->"47fc49e7-7dd6-41a9-8fbb-9027de56e429"],
Cell[275974, 7045, 561, 18, 73, "Output",ExpressionUUID->"42ac626e-ab5d-4593-ac9d-a3bb297d6d9c"],
Cell[276538, 7065, 310, 10, 73, "Output",ExpressionUUID->"46727896-f98e-448a-b809-cb61e6c68487"]
}, Open  ]],
Cell[276863, 7078, 6367, 164, 698, "Input",ExpressionUUID->"dc92bea9-8d7c-4a5f-8e0f-6348360e0097"],
Cell[283233, 7244, 274, 5, 46, "Input",ExpressionUUID->"79de829a-7985-47ea-875d-cfba0d4fe203"],
Cell[283510, 7251, 228, 4, 46, "Input",ExpressionUUID->"ddc5a5dd-d2cb-4b31-8f15-ae6a920bfc81"],
Cell[283741, 7257, 201, 4, 46, "Input",ExpressionUUID->"fa388657-e27d-4243-818f-ffe57c4370e1"]
}
]
*)

