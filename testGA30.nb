(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    441871,      11401]
NotebookOptionsPosition[    436084,      11319]
NotebookOutlinePosition[    436563,      11338]
CellTagsIndexPosition[    436520,      11335]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
This notebook:

- displays the help for the GA30 module, and its functions
- has a number of test cases.
- some manual tests that require visual verification.

These tests can also be used to see examples of how to use the GA functions \
and operators defined by the GA30 package.
\
\>", "Text",
 CellChangeTimes->{{3.691795964600712*^9, 3.691795975214867*^9}, {
   3.691796083626561*^9, 3.691796241126536*^9}, 3.6917964799818163`*^9, {
   3.691875939595688*^9, 3.691875941048305*^9}, {3.6952980158174686`*^9, 
   3.69529805149472*^9}},ExpressionUUID->"ad00b55f-7c01-40aa-ac6c-\
2a561783a060"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"<<", " ", "GA30`"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"?", "GA30"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"?", "grade"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"?", "Scalar"}], "\n", 
   RowBox[{"?", "Vector"}], "\n", 
   RowBox[{"?", "Bivector"}], "\n", 
   RowBox[{"?", "Trivector"}], "\n", 
   RowBox[{"?", "gradeQ"}], "\n", 
   RowBox[{"?", "scalarQ"}], "\n", 
   RowBox[{"?", "vectorQ"}], "\n", 
   RowBox[{"?", "bivectorQ"}], "\n", 
   RowBox[{"?", "trivectorQ"}], "\n", 
   RowBox[{"?", "bladeQ"}], "\n", 
   RowBox[{"?", "gradeAnyQ"}], "\n", 
   RowBox[{"?", "notGradeQ"}], "\n", 
   RowBox[{"?", "GradeSelection"}], "\n", 
   RowBox[{"?", "ScalarSelection"}], "\n", 
   RowBox[{"?", "VectorSelection"}], "\n", 
   RowBox[{"?", "BivectorSelection"}], "\n", 
   RowBox[{"?", "TrivectorSelection"}], "\n", 
   RowBox[{"?", "ScalarValue"}], "\n", 
   RowBox[{"?", "ScalarProduct"}], "\[IndentingNewLine]", 
   RowBox[{"On", "[", "Assert", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{
     "e0", ",", " ", "e1", ",", " ", "e2", ",", " ", "e3", ",", " ", "e23", 
      ",", " ", "e31", ",", " ", "e12", ",", " ", "e32", ",", " ", "e13", ",",
       " ", "e21", ",", " ", "e123", ",", " ", "m01", ",", " ", "m02", ",", 
      " ", "m03", ",", " ", "m12", ",", " ", "m23", ",", " ", "m012", ",", 
      " ", "m013", ",", " ", "m023", ",", " ", "m123"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e0", " ", "=", " ", 
     RowBox[{"Scalar", "[", "1", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e1", " ", "=", " ", 
     RowBox[{"Vector", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e2", " ", "=", " ", 
     RowBox[{"Vector", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e3", " ", "=", " ", 
     RowBox[{"Vector", "[", 
      RowBox[{"1", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e23", " ", "=", " ", 
     RowBox[{"Bivector", "[", 
      RowBox[{"1", ",", "2", ",", "3"}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e31", " ", "=", " ", 
     RowBox[{"Bivector", "[", 
      RowBox[{"1", ",", "3", ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e12", " ", "=", " ", 
     RowBox[{"Bivector", "[", 
      RowBox[{"1", ",", "1", ",", "2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e32", " ", "=", " ", 
     RowBox[{"-", "e23"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e13", " ", "=", " ", 
     RowBox[{"-", "e31"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e21", " ", "=", " ", 
     RowBox[{"-", "e12"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e123", " ", "=", " ", 
     RowBox[{"Trivector", "[", "1", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m01", " ", "=", " ", 
     RowBox[{"e0", " ", "+", " ", "e1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m02", " ", "=", " ", 
     RowBox[{"e0", " ", "+", " ", "e23"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m03", " ", "=", " ", 
     RowBox[{"e0", " ", "+", " ", "e123"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m12", " ", "=", " ", 
     RowBox[{"e1", " ", "+", " ", "e23"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m13", " ", "=", " ", 
     RowBox[{"e1", " ", "+", " ", "e123"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m23", " ", "=", " ", 
     RowBox[{"e23", " ", "+", " ", "e123"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m012", " ", "=", " ", 
     RowBox[{"e0", " ", "+", " ", "e1", " ", "+", " ", "e23"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m013", " ", "=", " ", 
     RowBox[{"e0", " ", "+", " ", "e1", " ", "+", " ", "e123"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m023", " ", "=", " ", 
     RowBox[{"e0", " ", "+", " ", "e23", " ", "+", " ", "e123"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m123", " ", "=", " ", 
     RowBox[{"e1", " ", "+", " ", "e23", " ", "+", " ", "e123"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.691718294880554*^9, 3.691718295281008*^9}, {
   3.6917887255064077`*^9, 3.6917887259455748`*^9}, {3.691790620876504*^9, 
   3.691790621198758*^9}, {3.691790729000072*^9, 3.691790740993383*^9}, {
   3.691790896837412*^9, 3.691790897681327*^9}, 3.6917957960933*^9, {
   3.69187575260861*^9, 3.691875775083118*^9}, {3.692184711037939*^9, 
   3.692184722640644*^9}, 3.69218479245914*^9, {3.695297829492331*^9, 
   3.695297840519065*^9}, {3.695309170794883*^9, 3.695309171280188*^9}, 
   3.725577969808049*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"dd68e078-9023-4718-8b06-c9a62096c345"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GA30: An implementation of Euclidean (CL(3,0)) \
Geometric Algebra.\\n\\nPauli matrices are used to represent the algebraic \
elements.  This provides an efficient and compact representation\\nof the \
entire algebraic space.\\n\\nInternally, a multivector is represented by a \
pair (grade, pauli-representation).  The grade portion will be\\nobliterated \
when adding objects that have different grade, or multiplying vectors or \
bivectors.  When\\nit is available, certain operations can be optimized.  \
Comparison ignores the cached grade if it exists.\\n\\nElements of the \
algebra can be constructed with one of\\n\\n   Scalar[ v ]\\n   Vector[ v, n \
]\\n   Bivector[ v, n, m ]\\n   Trivector[ v ]\\n\\nExample:\\n\\n   m = \
Scalar[ Sin[ x ] ] + Vector[ Log[ z ], 3 ] + Trivector[ 7 ] ;\\n   m // \
StandardForm\\n\\n> 7 e[ 123 ] + e[ 3 ] Log[ z ] + Sin[ x ]\\n\\nA few \
operators are provided:\\n   ==         Compare two multivectors, ignoring \
the cached grade if any.\\n   m1 + m2\\n   m1 - m2\\n   - m\\n   st * vb    \
Scalars and trivectors can multiply vectors and bivectors in any order\\n   \
vb1 ** vb1 Vectors and bivectors when multiplied have to use the \
NonCommutativeMultiply operator, but any grade object may also.\\n   m1 . m2  \
  Dot product.  The functional form Dot[ m1, m2 ] may also be used.\\n   m1 ^ \
m2   Wedgeproduct.  Enter with m1 [ Esc ]^[ Esc ] m2.  The functional form \
Wedge[ m1, m2 ]\\n   <m>        Scalar selection.  Enter with [ Esc ]<[ Esc ] \
m [ Esc ]>[ Esc ].  The functional form ScalarValue[ m ] may also be used.  \
This returns the numeric (or expression) value of the scalar grade of the \
multivector, and not a grade[ ] object.\\n   <m1,m2>    Scalar product.  \
Enter with [ Esc ]<[ Esc ] m1,m2 [ Esc ]>[ Esc ].  The functional form \
ScalarProduct[ m1, m2 ] may also be used.  This returns the numeric (or \
expression) value of the scalar product of the multivectors, and not a grade[ \
] object.\\n\\n   Functions provided:\\n\\n   - GradeSelection\\n   - \
ScalarSelection\\n   - VectorSelection\\n   - BivectorSelection\\n   - \
TrivectorSelection\\n   - ScalarValue, < m >\\n   - ScalarProduct, < m1, m2 >\
\\n\\nThe following built-in methods are overridden:\\n\\n   - \
TraditionalForm\\n   - DisplayForm\\n   - StandardForm\\n   - \
TeXForm\\n\\nInternal functions:\\n\\n   - scalarQ\\n   - vectorQ\\n   - \
bivectorQ\\n   - trivectorQ\\n   - bladeQ\\n   - gradeAnyQ\\n   - \
notGradeQ\\n\\nTODO:\\n\\n1) How to get better formatted output by default \
without using one of TraditionalForm, DisplayForm, StandardForm ?\\n\\n2) Can \
a package have options (i.e. to define the name of the e[ ] operator used in \
StandardForm that represents a basis vector).\\n\\n3) proper packaging stuff: \
 private for internals.\\n\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`GA30\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GA30: An implementation of Euclidean (CL(3,0)) \
Geometric Algebra.\\n\\nPauli matrices are used to represent the algebraic \
elements.  This provides an efficient and compact representation\\nof the \
entire algebraic space.\\n\\nInternally, a multivector is represented by a \
pair (grade, pauli-representation).  The grade portion will be\\nobliterated \
when adding objects that have different grade, or multiplying vectors or \
bivectors.  When\\nit is available, certain operations can be optimized.  \
Comparison ignores the cached grade if it exists.\\n\\nElements of the \
algebra can be constructed with one of\\n\\n   Scalar[ v ]\\n   Vector[ v, n \
]\\n   Bivector[ v, n, m ]\\n   Trivector[ v ]\\n\\nExample:\\n\\n   m = \
Scalar[ Sin[ x ] ] + Vector[ Log[ z ], 3 ] + Trivector[ 7 ] ;\\n   m // \
StandardForm\\n\\n> 7 e[ 123 ] + e[ 3 ] Log[ z ] + Sin[ x ]\\n\\nA few \
operators are provided:\\n   ==         Compare two multivectors, ignoring \
the cached grade if any.\\n   m1 + m2\\n   m1 - m2\\n   - m\\n   st * vb    \
Scalars and trivectors can multiply vectors and bivectors in any order\\n   \
vb1 ** vb1 Vectors and bivectors when multiplied have to use the \
NonCommutativeMultiply operator, but any grade object may also.\\n   m1 . m2  \
  Dot product.  The functional form Dot[ m1, m2 ] may also be used.\\n   m1 ^ \
m2   Wedgeproduct.  Enter with m1 [ Esc ]^[ Esc ] m2.  The functional form \
Wedge[ m1, m2 ]\\n   <m>        Scalar selection.  Enter with [ Esc ]<[ Esc ] \
m [ Esc ]>[ Esc ].  The functional form ScalarValue[ m ] may also be used.  \
This returns the numeric (or expression) value of the scalar grade of the \
multivector, and not a grade[ ] object.\\n   <m1,m2>    Scalar product.  \
Enter with [ Esc ]<[ Esc ] m1,m2 [ Esc ]>[ Esc ].  The functional form \
ScalarProduct[ m1, m2 ] may also be used.  This returns the numeric (or \
expression) value of the scalar product of the multivectors, and not a grade[ \
] object.\\n\\n   Functions provided:\\n\\n   - GradeSelection\\n   - \
ScalarSelection\\n   - VectorSelection\\n   - BivectorSelection\\n   - \
TrivectorSelection\\n   - ScalarValue, < m >\\n   - ScalarProduct, < m1, m2 >\
\\n\\nThe following built-in methods are overridden:\\n\\n   - \
TraditionalForm\\n   - DisplayForm\\n   - StandardForm\\n   - \
TeXForm\\n\\nInternal functions:\\n\\n   - scalarQ\\n   - vectorQ\\n   - \
bivectorQ\\n   - trivectorQ\\n   - bladeQ\\n   - gradeAnyQ\\n   - \
notGradeQ\\n\\nTODO:\\n\\n1) How to get better formatted output by default \
without using one of TraditionalForm, DisplayForm, StandardForm ?\\n\\n2) Can \
a package have options (i.e. to define the name of the e[ ] operator used in \
StandardForm that represents a basis vector).\\n\\n3) proper packaging stuff: \
 private for internals.\\n\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "GA30: An implementation of Euclidean (CL(3,0)) Geometric Algebra.\n\n\
Pauli matrices are used to represent the algebraic elements.  This provides \
an efficient and compact representation\nof the entire algebraic space.\n\n\
Internally, a multivector is represented by a pair (grade, \
pauli-representation).  The grade portion will be\nobliterated when adding \
objects that have different grade, or multiplying vectors or bivectors.  When\
\nit is available, certain operations can be optimized.  Comparison ignores \
the cached grade if it exists.\n\nElements of the algebra can be constructed \
with one of\n\n   Scalar[ v ]\n   Vector[ v, n ]\n   Bivector[ v, n, m ]\n   \
Trivector[ v ]\n\nExample:\n\n   m = Scalar[ Sin[ x ] ] + Vector[ Log[ z ], 3 \
] + Trivector[ 7 ] ;\n   m // StandardForm\n\n> 7 e[ 123 ] + e[ 3 ] Log[ z ] \
+ Sin[ x ]\n\nA few operators are provided:\n   ==         Compare two \
multivectors, ignoring the cached grade if any.\n   m1 + m2\n   m1 - m2\n   - \
m\n   st * vb    Scalars and trivectors can multiply vectors and bivectors in \
any order\n   vb1 ** vb1 Vectors and bivectors when multiplied have to use \
the NonCommutativeMultiply operator, but any grade object may also.\n   m1 . \
m2    Dot product.  The functional form Dot[ m1, m2 ] may also be used.\n   \
m1 ^ m2   Wedgeproduct.  Enter with m1 [ Esc ]^[ Esc ] m2.  The functional \
form Wedge[ m1, m2 ]\n   <m>        Scalar selection.  Enter with [ Esc ]<[ \
Esc ] m [ Esc ]>[ Esc ].  The functional form ScalarValue[ m ] may also be \
used.  This returns the numeric (or expression) value of the scalar grade of \
the multivector, and not a grade[ ] object.\n   <m1,m2>    Scalar product.  \
Enter with [ Esc ]<[ Esc ] m1,m2 [ Esc ]>[ Esc ].  The functional form \
ScalarProduct[ m1, m2 ] may also be used.  This returns the numeric (or \
expression) value of the scalar product of the multivectors, and not a grade[ \
] object.\n\n   Functions provided:\n\n   - GradeSelection\n   - \
ScalarSelection\n   - VectorSelection\n   - BivectorSelection\n   - \
TrivectorSelection\n   - ScalarValue, < m >\n   - ScalarProduct, < m1, m2 >\n\
\nThe following built-in methods are overridden:\n\n   - TraditionalForm\n   \
- DisplayForm\n   - StandardForm\n   - TeXForm\n\nInternal functions:\n\n   - \
scalarQ\n   - vectorQ\n   - bivectorQ\n   - trivectorQ\n   - bladeQ\n   - \
gradeAnyQ\n   - notGradeQ\n\nTODO:\n\n1) How to get better formatted output \
by default without using one of TraditionalForm, DisplayForm, StandardForm ?\n\
\n2) Can a package have options (i.e. to define the name of the e[ ] operator \
used in StandardForm that represents a basis vector).\n\n3) proper packaging \
stuff:  private for internals.\n", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "GA30`GA30"|>, 
   False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.903962719584964*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"6b4d35df-5ec3-4e65-ad01-42312e3f7346"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Scalar[ v ] constructs a scalar grade quantity with \
value v.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"Scalar", "[", "GA30`Private`v_", "]"}], ":=", 
                    "GA30`Private`v"}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`Scalar\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Scalar[ v ] constructs a scalar grade quantity with \
value v.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Scalar[ v ] constructs a scalar grade quantity with value v.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, GA30`Scalar, {GA30`Scalar[
         Pattern[GA30`Private`v, 
          Blank[]]] :> GA30`grade[0, GA30`Private`v IdentityMatrix[2]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "GA30`Scalar"|>, False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.9039627196105947`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"f89c569e-4c6a-44e5-ab4a-5f09522e9faa"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Vector[ v, n ], where n = {1,2,3} constructs a \
vector grade quantity with value v in direction n.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"Vector", "[", 
                    RowBox[{"GA30`Private`v_", ",", 
                    RowBox[{"GA30`Private`k_Integer", "/;", 
                    RowBox[{
                    RowBox[{"GA30`Private`k", "\[GreaterEqual]", "1"}], "&&", 
                    
                    RowBox[{"GA30`Private`k", "\[LessEqual]", "3"}]}]}]}], 
                    "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "\"31\""], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ".", 
                    RowBox[{"(", 
                    RowBox[{"GA30`Private`v", " ", 
                    RowBox[{"pauliMatrix", "[", "GA30`Private`k", "]"}]}], 
                    ")"}]}]}], "]"}]}], "+", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "1"], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ".", 
                    RowBox[{"(", 
                    RowBox[{"GA30`Private`v", " ", 
                    RowBox[{"pauliMatrix", "[", "GA30`Private`k", "]"}]}], 
                    ")"}]}]}], "]"}]}], "+", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "\"23\""], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "}"}]}], "}"}], 
                    ".", 
                    RowBox[{"(", 
                    RowBox[{"GA30`Private`v", " ", 
                    RowBox[{"pauliMatrix", "[", "GA30`Private`k", "]"}]}], 
                    ")"}]}]}], "]"}]}], "+", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "2"], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", "1"}], "]"}], ",", "0"}], "}"}]}], 
                    "}"}], ".", 
                    RowBox[{"(", 
                    RowBox[{"GA30`Private`v", " ", 
                    RowBox[{"pauliMatrix", "[", "GA30`Private`k", "]"}]}], 
                    ")"}]}]}], "]"}]}], "+", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "3"], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "}"}], ".", 
                    RowBox[{"(", 
                    RowBox[{"GA30`Private`v", " ", 
                    RowBox[{"pauliMatrix", "[", "GA30`Private`k", "]"}]}], 
                    ")"}]}]}], "]"}]}], "+", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "\"12\""], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", "1"}], "]"}]}], "}"}]}], "}"}], ".", 
                    RowBox[{"(", 
                    RowBox[{"GA30`Private`v", " ", 
                    RowBox[{"pauliMatrix", "[", "GA30`Private`k", "]"}]}], 
                    ")"}]}]}], "]"}]}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`Vector\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Vector[ v, n ], where n = {1,2,3} constructs a \
vector grade quantity with value v in direction n.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Vector[ v, n ], where n = {1,2,3} constructs a vector grade quantity \
with value v in direction n.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[DownValues, GA30`Vector, {GA30`Vector[
         Pattern[GA30`Private`v, 
          Blank[]], 
         Condition[
          Pattern[GA30`Private`k, 
           Blank[Integer]], 
          And[GA30`Private`k >= 1, GA30`Private`k <= 3]]] :> 
       GA30`grade[1, GA30`Private`v GA30`pauliMatrix[GA30`Private`k]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "GA30`Vector"|>, False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.9039627196434603`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"543b55ca-7fbf-479a-ad63-38e0378a87ff"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Bivector[ v, n1, n2 ], where n1,n2 = {1,2,3} \
constructs a bivector grade quantity with value v in the plane n1,n2.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"Bivector", "[", 
                    RowBox[{"GA30`Private`v_", ",", 
                    RowBox[{"GA30`Private`k_Integer", "/;", 
                    RowBox[{
                    RowBox[{"GA30`Private`k", "\[GreaterEqual]", "1"}], "&&", 
                    
                    RowBox[{"GA30`Private`k", "\[LessEqual]", "3"}]}]}], ",", 
                    
                    RowBox[{"GA30`Private`j_Integer", "/;", 
                    RowBox[{
                    RowBox[{"GA30`Private`j", "\[GreaterEqual]", "1"}], "&&", 
                    
                    RowBox[{"GA30`Private`j", "\[LessEqual]", "3"}]}]}]}], 
                    "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "\"31\""], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ".", 
                    RowBox[{"(", 
                    RowBox[{"GA30`Private`v", " ", 
                    RowBox[{
                    RowBox[{"pauliMatrix", "[", "GA30`Private`k", "]"}], ".", 
                    
                    RowBox[{"pauliMatrix", "[", "GA30`Private`j", "]"}]}]}], 
                    ")"}]}]}], "]"}]}], "+", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "1"], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ".", 
                    RowBox[{"(", 
                    RowBox[{"GA30`Private`v", " ", 
                    RowBox[{
                    RowBox[{"pauliMatrix", "[", "GA30`Private`k", "]"}], ".", 
                    
                    RowBox[{"pauliMatrix", "[", "GA30`Private`j", "]"}]}]}], 
                    ")"}]}]}], "]"}]}], "+", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "\"23\""], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "}"}]}], "}"}], 
                    ".", 
                    RowBox[{"(", 
                    RowBox[{"GA30`Private`v", " ", 
                    RowBox[{
                    RowBox[{"pauliMatrix", "[", "GA30`Private`k", "]"}], ".", 
                    
                    RowBox[{"pauliMatrix", "[", "GA30`Private`j", "]"}]}]}], 
                    ")"}]}]}], "]"}]}], "+", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "2"], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", "1"}], "]"}], ",", "0"}], "}"}]}], 
                    "}"}], ".", 
                    RowBox[{"(", 
                    RowBox[{"GA30`Private`v", " ", 
                    RowBox[{
                    RowBox[{"pauliMatrix", "[", "GA30`Private`k", "]"}], ".", 
                    
                    RowBox[{"pauliMatrix", "[", "GA30`Private`j", "]"}]}]}], 
                    ")"}]}]}], "]"}]}], "+", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "3"], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "}"}], ".", 
                    RowBox[{"(", 
                    RowBox[{"GA30`Private`v", " ", 
                    RowBox[{
                    RowBox[{"pauliMatrix", "[", "GA30`Private`k", "]"}], ".", 
                    
                    RowBox[{"pauliMatrix", "[", "GA30`Private`j", "]"}]}]}], 
                    ")"}]}]}], "]"}]}], "+", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "\"12\""], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", "1"}], "]"}]}], "}"}]}], "}"}], ".", 
                    RowBox[{"(", 
                    RowBox[{"GA30`Private`v", " ", 
                    RowBox[{
                    RowBox[{"pauliMatrix", "[", "GA30`Private`k", "]"}], ".", 
                    
                    RowBox[{"pauliMatrix", "[", "GA30`Private`j", "]"}]}]}], 
                    ")"}]}]}], "]"}]}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`Bivector\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Bivector[ v, n1, n2 ], where n1,n2 = {1,2,3} \
constructs a bivector grade quantity with value v in the plane n1,n2.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Bivector[ v, n1, n2 ], where n1,n2 = {1,2,3} constructs a bivector grade \
quantity with value v in the plane n1,n2.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[DownValues, GA30`Bivector, {GA30`Bivector[
         Pattern[GA30`Private`v, 
          Blank[]], 
         Condition[
          Pattern[GA30`Private`k, 
           Blank[Integer]], 
          And[GA30`Private`k >= 1, GA30`Private`k <= 3]], 
         Condition[
          Pattern[GA30`Private`j, 
           Blank[Integer]], 
          And[GA30`Private`j >= 1, GA30`Private`j <= 3]]] :> 
       GA30`grade[2, GA30`Private`v Dot[
           GA30`pauliMatrix[GA30`Private`k], 
           GA30`pauliMatrix[GA30`Private`j]]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "GA30`Bivector"|>, False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.903962719671506*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"29f786a2-7c1a-4316-b2dc-e70c8dcd1416"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Trivector[ v ] constructs a trivector \
(pseudoscalar) grade quantity scaled by v.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"Trivector", "[", "GA30`Private`v_", "]"}], ":=", 
                    
                    RowBox[{"GA30`Private`v", " ", 
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "\"123\""]}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`Trivector\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Trivector[ v ] constructs a trivector \
(pseudoscalar) grade quantity scaled by v.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Trivector[ v ] constructs a trivector (pseudoscalar) grade quantity \
scaled by v.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GA30`Trivector, {GA30`Trivector[
         Pattern[GA30`Private`v, 
          Blank[]]] :> 
       GA30`grade[3, GA30`complexI GA30`Private`v IdentityMatrix[2]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "GA30`Trivector"|>, False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.903962719698092*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"465f05b0-3030-4d45-a1b9-74554945a71e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"gradeQ[ m, n ] tests if the multivector m is of \
grade n.  n = -1 is used internally to represent values of more than one \
grade.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"gradeQ", "[", 
                    
                    RowBox[{
                    "GA30`Private`m_grade", ",", "GA30`Private`n_Integer"}], 
                    "]"}], ":=", 
                    RowBox[{
                    RowBox[{"First", "[", "GA30`Private`m", "]"}], "\[Equal]",
                     "GA30`Private`n"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`gradeQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"gradeQ[ m, n ] tests if the multivector m is of \
grade n.  n = -1 is used internally to represent values of more than one \
grade.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "gradeQ[ m, n ] tests if the multivector m is of grade n.  n = -1 is used \
internally to represent values of more than one grade.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[DownValues, GA30`gradeQ, {GA30`gradeQ[
         Pattern[GA30`Private`m, 
          Blank[GA30`grade]], 
         Pattern[GA30`Private`n, 
          Blank[Integer]]] :> First[GA30`Private`m] == GA30`Private`n}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "GA30`gradeQ"|>, False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.903962719727922*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"31b49c4f-e868-4ffd-80fa-17d28c15e1c4"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"scalarQ[ m ] tests if the multivector m is of grade \
0 (scalar)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"scalarQ", "[", "GA30`Private`m_grade", "]"}], 
                    ":=", 
                    RowBox[{"gradeQ", "[", 
                    RowBox[{"GA30`Private`m", ",", "0"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`scalarQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"scalarQ[ m ] tests if the multivector m is of grade \
0 (scalar)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "scalarQ[ m ] tests if the multivector m is of grade 0 (scalar)", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, GA30`scalarQ, {GA30`scalarQ[
         Pattern[GA30`Private`m, 
          Blank[GA30`grade]]] :> GA30`gradeQ[GA30`Private`m, 0]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "GA30`scalarQ"|>, False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.903962719755024*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"2e888425-3aef-4716-b6d6-2b55e2c8971b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"vectorQ[ m ] tests if the multivector m is of grade \
1 (vector)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"vectorQ", "[", "GA30`Private`m_grade", "]"}], 
                    ":=", 
                    RowBox[{"gradeQ", "[", 
                    RowBox[{"GA30`Private`m", ",", "1"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`vectorQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"vectorQ[ m ] tests if the multivector m is of grade \
1 (vector)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "vectorQ[ m ] tests if the multivector m is of grade 1 (vector)", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, GA30`vectorQ, {GA30`vectorQ[
         Pattern[GA30`Private`m, 
          Blank[GA30`grade]]] :> GA30`gradeQ[GA30`Private`m, 1]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "GA30`vectorQ"|>, False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.903962719782062*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"012c1cf5-3e6e-4b12-ba33-ba6d5a089945"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"bivectorQ[ m ] tests if the multivector m is of \
grade 2 (bivector)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"bivectorQ", "[", "GA30`Private`m_grade", "]"}], 
                    ":=", 
                    RowBox[{"gradeQ", "[", 
                    RowBox[{"GA30`Private`m", ",", "2"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`bivectorQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"bivectorQ[ m ] tests if the multivector m is of \
grade 2 (bivector)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "bivectorQ[ m ] tests if the multivector m is of grade 2 (bivector)", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GA30`bivectorQ, {GA30`bivectorQ[
         Pattern[GA30`Private`m, 
          Blank[GA30`grade]]] :> GA30`gradeQ[GA30`Private`m, 2]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "GA30`bivectorQ"|>, False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.903962719808819*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"4af70198-b84e-4144-925e-a6898d60b1fa"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"trivectorQ[ m ] tests if the multivector m is of \
grade 3 (trivector)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"trivectorQ", "[", "GA30`Private`m_grade", "]"}], 
                    ":=", 
                    RowBox[{"gradeQ", "[", 
                    RowBox[{"GA30`Private`m", ",", "3"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`trivectorQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"trivectorQ[ m ] tests if the multivector m is of \
grade 3 (trivector)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "trivectorQ[ m ] tests if the multivector m is of grade 3 (trivector)", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GA30`trivectorQ, {GA30`trivectorQ[
         Pattern[GA30`Private`m, 
          Blank[GA30`grade]]] :> GA30`gradeQ[GA30`Private`m, 3]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "GA30`trivectorQ"|>, False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.903962719835539*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"913421dd-a7d7-4dd5-bc1f-c86828251f83"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"bladeQ[ m ] tests if the multivector is of a single \
grade.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"bladeQ", "[", "GA30`Private`m_grade", "]"}], 
                    ":=", 
                    RowBox[{
                    RowBox[{"First", "[", "GA30`Private`m", "]"}], 
                    "\[GreaterEqual]", "0"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`bladeQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"bladeQ[ m ] tests if the multivector is of a single \
grade.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "bladeQ[ m ] tests if the multivector is of a single grade.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, GA30`bladeQ, {GA30`bladeQ[
         Pattern[GA30`Private`m, 
          Blank[GA30`grade]]] :> First[GA30`Private`m] >= 0}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "GA30`bladeQ"|>, 
   False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.903962719862257*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"0c1287b7-52b3-431f-be93-9bb90d670b18"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"gradeAnyQ[ ].  predicate pattern match for grade[ _ \
]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"gradeAnyQ", "[", "GA30`Private`m_grade", "]"}], 
                    ":=", "True"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"gradeAnyQ", "[", "_", "]"}], ":=", "False"}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`gradeAnyQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"gradeAnyQ[ ].  predicate pattern match for grade[ _ \
]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "gradeAnyQ[ ].  predicate pattern match for grade[ _ ]", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GA30`gradeAnyQ, {GA30`gradeAnyQ[
         Pattern[GA30`Private`m, 
          Blank[GA30`grade]]] :> True, GA30`gradeAnyQ[
         Blank[]] :> False}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "GA30`gradeAnyQ"|>, False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.90396271988904*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"0fc054b2-387e-40fa-95ea-5e726262757d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"notGradeQ[ ].  predicate pattern match for !grade[ \
]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"notGradeQ", "[", "GA30`Private`v_", "]"}], ":=", 
                    
                    RowBox[{"!", 
                    RowBox[{"gradeAnyQ", "[", "GA30`Private`v", "]"}]}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`notGradeQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"notGradeQ[ ].  predicate pattern match for !grade[ \
]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "notGradeQ[ ].  predicate pattern match for !grade[ ]", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GA30`notGradeQ, {GA30`notGradeQ[
         Pattern[GA30`Private`v, 
          Blank[]]] :> Not[
         GA30`gradeAnyQ[GA30`Private`v]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "GA30`notGradeQ"|>, 
   False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.903962719915716*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"6eb62604-9785-4ebe-af01-420d346faea2"],

Cell[BoxData[
 TemplateBox[{
  "Last", "normal", 
   "\"Nonatomic expression expected at position \
StandardForm[Short[Shallow[HoldForm[1], {10, 50}], 5]] in \
StandardForm[Short[Shallow[HoldForm[Last[GA30`Private`m]], {10, 50}], 5]].\"",
    2, 15, 1, 29070733826981257510, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.903909936453909*^9, 3.903909952950745*^9}, 
   3.90395816079241*^9, 3.903962719963471*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1ad7412b-d587-414c-b5aa-503eef7445eb"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GradeSelection[ m, k ] selects the grade k elements \
from the multivector m.  The selected result is represented internally as a \
grade[ ] type (so scalar selection is not just a number).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{
                    RowBox[{"GA30`Private`m_", "?", "scalarQ"}], ",", "0"}], 
                    "]"}], ":=", "GA30`Private`m"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{
                    RowBox[{"GA30`Private`m_", "?", "vectorQ"}], ",", "1"}], 
                    "]"}], ":=", "GA30`Private`m"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{
                    RowBox[{"GA30`Private`m_", "?", "bivectorQ"}], ",", "2"}],
                     "]"}], ":=", "GA30`Private`m"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{
                    RowBox[{"GA30`Private`m_", "?", "trivectorQ"}], ",", 
                    "3"}], "]"}], ":=", "GA30`Private`m"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{"GA30`Private`m_", ",", 
                    RowBox[{"GA30`Private`k_Integer", "/;", 
                    RowBox[{
                    RowBox[{"GA30`Private`k", "\[GreaterEqual]", "0"}], "&&", 
                    
                    RowBox[{"GA30`Private`k", "\[LessEqual]", "3"}]}]}]}], 
                    "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "\"31\""], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ".", 
                    RowBox[{"pauliGradeSelect", "[", 
                    RowBox[{
                    RowBox[{"Last", "[", "GA30`Private`m", "]"}], ",", 
                    "GA30`Private`k"}], "]"}]}]}], "]"}]}], "+", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "1"], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ".", 
                    RowBox[{"pauliGradeSelect", "[", 
                    RowBox[{
                    RowBox[{"Last", "[", "GA30`Private`m", "]"}], ",", 
                    "GA30`Private`k"}], "]"}]}]}], "]"}]}], "+", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "\"23\""], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "}"}]}], "}"}], 
                    ".", 
                    RowBox[{"pauliGradeSelect", "[", 
                    RowBox[{
                    RowBox[{"Last", "[", "GA30`Private`m", "]"}], ",", 
                    "GA30`Private`k"}], "]"}]}]}], "]"}]}], "+", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "2"], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", "1"}], "]"}], ",", "0"}], "}"}]}], 
                    "}"}], ".", 
                    RowBox[{"pauliGradeSelect", "[", 
                    RowBox[{
                    RowBox[{"Last", "[", "GA30`Private`m", "]"}], ",", 
                    "GA30`Private`k"}], "]"}]}]}], "]"}]}], "+", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "3"], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "}"}], ".", 
                    RowBox[{"pauliGradeSelect", "[", 
                    RowBox[{
                    RowBox[{"Last", "[", "GA30`Private`m", "]"}], ",", 
                    "GA30`Private`k"}], "]"}]}]}], "]"}]}], "+", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "\"12\""], " ", 
                    RowBox[{"trace", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"complex", "[", 
                    RowBox[{"0", ",", "1"}], "]"}]}], "}"}]}], "}"}], ".", 
                    RowBox[{"pauliGradeSelect", "[", 
                    RowBox[{
                    RowBox[{"Last", "[", "GA30`Private`m", "]"}], ",", 
                    "GA30`Private`k"}], "]"}]}]}], "]"}]}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`GradeSelection\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GradeSelection[ m, k ] selects the grade k elements \
from the multivector m.  The selected result is represented internally as a \
grade[ ] type (so scalar selection is not just a number).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "GradeSelection[ m, k ] selects the grade k elements from the multivector \
m.  The selected result is represented internally as a grade[ ] type (so \
scalar selection is not just a number).", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GA30`GradeSelection, {GA30`GradeSelection[
         PatternTest[
          Pattern[GA30`Private`m, 
           Blank[]], GA30`scalarQ], 0] :> GA30`Private`m, 
       GA30`GradeSelection[
         PatternTest[
          Pattern[GA30`Private`m, 
           Blank[]], GA30`vectorQ], 1] :> GA30`Private`m, 
       GA30`GradeSelection[
         PatternTest[
          Pattern[GA30`Private`m, 
           Blank[]], GA30`bivectorQ], 2] :> GA30`Private`m, 
       GA30`GradeSelection[
         PatternTest[
          Pattern[GA30`Private`m, 
           Blank[]], GA30`trivectorQ], 3] :> GA30`Private`m, 
       GA30`GradeSelection[
         Pattern[GA30`Private`m, 
          Blank[]], 
         Condition[
          Pattern[GA30`Private`k, 
           Blank[Integer]], 
          And[GA30`Private`k >= 0, GA30`Private`k <= 3]]] :> 
       GA30`grade[GA30`Private`k, 
         GA30`pauliGradeSelect[
          Last[GA30`Private`m], GA30`Private`k]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "GA30`GradeSelection"|>, False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.90396271996916*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"f0235b8b-cec3-4908-a346-6558a08e65c5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarSelection[ m, asMv_Boolean : True ] selects \
the multivector 0 (scalar) elements from the multivector m.  If asMv is True, \
then the selected result is represented internally as a multivector[ ] type, \
and if False, as a scalar.   ScalarSelection[m, False] is the same as \
AngleBracket[m] or ScalarValue[m], all returning a scalar, not multivector \
representation.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    
                    RowBox[{
                    "ScalarSelection", "[", "GA30`Private`v_grade", "]"}], 
                    ":=", 
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{"GA30`Private`v", ",", "0"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ScalarSelection", "[", 
                    RowBox[{"GA30`Private`v_grade", ",", "True"}], "]"}], 
                    ":=", 
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{"GA30`Private`v", ",", "0"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ScalarSelection", "[", 
                    RowBox[{"GA30`Private`v_grade", ",", "False"}], "]"}], 
                    ":=", 
                    
                    RowBox[{
                    "\[LeftAngleBracket]", "GA30`Private`v", 
                    "\[RightAngleBracket]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`ScalarSelection\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarSelection[ m, asMv_Boolean : True ] selects \
the multivector 0 (scalar) elements from the multivector m.  If asMv is True, \
then the selected result is represented internally as a multivector[ ] type, \
and if False, as a scalar.   ScalarSelection[m, False] is the same as \
AngleBracket[m] or ScalarValue[m], all returning a scalar, not multivector \
representation.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "ScalarSelection[ m, asMv_Boolean : True ] selects the multivector 0 \
(scalar) elements from the multivector m.  If asMv is True, then the selected \
result is represented internally as a multivector[ ] type, and if False, as a \
scalar.   ScalarSelection[m, False] is the same as AngleBracket[m] or \
ScalarValue[m], all returning a scalar, not multivector representation.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GA30`ScalarSelection, {GA30`ScalarSelection[
         Pattern[GA30`Private`v, 
          Blank[GA30`grade]]] :> GA30`GradeSelection[GA30`Private`v, 0], 
       GA30`ScalarSelection[
         Pattern[GA30`Private`v, 
          Blank[GA30`grade]], True] :> GA30`GradeSelection[GA30`Private`v, 0],
        GA30`ScalarSelection[
         Pattern[GA30`Private`v, 
          Blank[GA30`grade]], False] :> AngleBracket[GA30`Private`v]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "GA30`ScalarSelection"|>, False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.903962720003207*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"45602e02-8b9f-478e-9097-5eb442187602"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"VectorSelection[ m ] selects the grade 1 (vector) \
elements from the multivector m.  The selected result is represented \
internally as a grade[ ] type.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"VectorSelection", ":=", 
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{"#1", ",", "1"}], "]"}], "&"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`VectorSelection\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"VectorSelection[ m ] selects the grade 1 (vector) \
elements from the multivector m.  The selected result is represented \
internally as a grade[ ] type.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "VectorSelection[ m ] selects the grade 1 (vector) elements from the \
multivector m.  The selected result is represented internally as a grade[ ] \
type.", "Documentation" -> None, "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, GA30`VectorSelection, {
      GA30`VectorSelection :> (GA30`GradeSelection[#, 1]& )}], "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected}, "FullName" -> "GA30`VectorSelection"|>, 
   False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.903962720029756*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"09c084e0-6cea-442e-8313-61c1aaa35d8b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"BivectorSelection[ m ] selects the grade 2 \
(bivector) elements from the multivector m.  The selected result is \
represented internally as a grade[ ] type.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"BivectorSelection", ":=", 
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{"#1", ",", "2"}], "]"}], "&"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`BivectorSelection\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"BivectorSelection[ m ] selects the grade 2 \
(bivector) elements from the multivector m.  The selected result is \
represented internally as a grade[ ] type.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "BivectorSelection[ m ] selects the grade 2 (bivector) elements from the \
multivector m.  The selected result is represented internally as a grade[ ] \
type.", "Documentation" -> None, "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, GA30`BivectorSelection, {
      GA30`BivectorSelection :> (GA30`GradeSelection[#, 2]& )}], "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected}, "FullName" -> "GA30`BivectorSelection"|>, 
   False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.903962720056501*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"dcc1d1d0-f820-47f0-80f5-54682b559e71"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"TrivectorSelection[ m ] selects the grade 3 \
(trivector) element from the multivector m if it exists.  The selected result \
is represented internally as a grade[ ] type (not just an number or \
expression).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"TrivectorSelection", ":=", 
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{"#1", ",", "3"}], "]"}], "&"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`TrivectorSelection\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"TrivectorSelection[ m ] selects the grade 3 \
(trivector) element from the multivector m if it exists.  The selected result \
is represented internally as a grade[ ] type (not just an number or \
expression).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "TrivectorSelection[ m ] selects the grade 3 (trivector) element from the \
multivector m if it exists.  The selected result is represented internally as \
a grade[ ] type (not just an number or expression).", "Documentation" -> None,
     "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, GA30`TrivectorSelection, {
      GA30`TrivectorSelection :> (GA30`GradeSelection[#, 3]& )}], "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected}, "FullName" -> "GA30`TrivectorSelection"|>, 
   False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.9039627200829973`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"10f3d1f5-efaa-4cef-a61f-2fe5a525bd53"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarValue[ m ].  Same as AngleBracket[ m ], aka [ \
Esc ]<[ Esc ] m1 [ Esc ]>[ Esc ].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"ScalarValue", "[", "GA30`Private`m_grade", "]"}],
                     ":=", 
                    
                    RowBox[{
                    "\[LeftAngleBracket]", "GA30`Private`m", 
                    "\[RightAngleBracket]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`ScalarValue\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarValue[ m ].  Same as AngleBracket[ m ], aka [ \
Esc ]<[ Esc ] m1 [ Esc ]>[ Esc ].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "ScalarValue[ m ].  Same as AngleBracket[ m ], aka [ Esc ]<[ Esc ] m1 [ \
Esc ]>[ Esc ].", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GA30`ScalarValue, {GA30`ScalarValue[
         Pattern[GA30`Private`m, 
          Blank[GA30`grade]]] :> AngleBracket[GA30`Private`m]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "GA30`ScalarValue"|>, False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.903962720109561*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"02f9fc67-8b42-4999-b017-f00b130107b2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarProduct[ ].  Same as AngleBracket[ m1, m2 ], \
aka [ Esc ]<[ Esc ] m1, m2 [ Esc ]>[ Esc ].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"ScalarProduct", "[", 
                    
                    RowBox[{
                    "GA30`Private`m1_grade", ",", "GA30`Private`m2_grade"}], 
                    "]"}], ":=", 
                    RowBox[{"\[LeftAngleBracket]", 
                    RowBox[{"GA30`Private`m1", ",", "GA30`Private`m2"}], 
                    "\[RightAngleBracket]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GA30`ScalarProduct\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarProduct[ ].  Same as AngleBracket[ m1, m2 ], \
aka [ Esc ]<[ Esc ] m1, m2 [ Esc ]>[ Esc ].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "ScalarProduct[ ].  Same as AngleBracket[ m1, m2 ], aka [ Esc ]<[ Esc ] \
m1, m2 [ Esc ]>[ Esc ].", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GA30`ScalarProduct, {GA30`ScalarProduct[
         Pattern[GA30`Private`m1, 
          Blank[GA30`grade]], 
         Pattern[GA30`Private`m2, 
          Blank[GA30`grade]]] :> 
       AngleBracket[GA30`Private`m1, GA30`Private`m2]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "GA30`ScalarProduct"|>, False]]], "Output",
 CellChangeTimes->{{3.90390993662149*^9, 3.903909952574485*^9}, 
   3.903958160424711*^9, 3.90396272013596*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"24d1b1cc-d1ab-4d6f-9d30-36798ea65b05"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Predicate tests (automatic)", "Subsection",
 CellChangeTimes->{{3.695297945304801*^9, 
  3.6952979567959137`*^9}},ExpressionUUID->"577843da-0eb4-42e4-8529-\
6090e96b7a35"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Assert", "[", 
      RowBox[{"bladeQ", "[", "#", "]"}], "]"}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "e0", ",", "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", "e12",
      ",", "e123"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Assert", "[", 
      RowBox[{"!", 
       RowBox[{"bladeQ", "[", "#", "]"}]}], "]"}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "m01", ",", "m02", ",", "m03", ",", "m12", ",", "m13", ",", "m23", ",", 
     "m012", ",", "m013", ",", "m023", ",", "m123"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Assert", "[", 
      RowBox[{"gradeAnyQ", "[", "#", "]"}], "]"}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", "e12", ",", 
     "e123", ",", "m01", ",", "m02", ",", "m03", ",", "m12", ",", "m13", ",", 
     "m23", ",", "m012", ",", "m013", ",", "m023", ",", "m123"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Assert", "[", 
      RowBox[{"!", 
       RowBox[{"gradeAnyQ", "[", "#", "]"}]}], "]"}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "theta"}], "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Assert", "[", 
      RowBox[{"!", 
       RowBox[{"notGradeQ", "[", "#", "]"}]}], "]"}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "e0", ",", "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", "e12",
      ",", "e123", ",", "m01", ",", "m02", ",", "m03", ",", "m12", ",", "m13",
      ",", "m23", ",", "m012", ",", "m013", ",", "m023", ",", "m123"}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Assert", "[", 
      RowBox[{"notGradeQ", "[", "#", "]"}], "]"}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "theta"}], "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Assert", "[", 
       RowBox[{"gradeQ", "[", 
        RowBox[{"#", ",", "0"}], "]"}], "]"}], ",", 
      RowBox[{"Assert", "[", 
       RowBox[{"scalarQ", "[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"{", "e0", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Assert", "[", 
       RowBox[{"!", 
        RowBox[{"gradeQ", "[", 
         RowBox[{"#", ",", "0"}], "]"}]}], "]"}], ",", 
      RowBox[{"Assert", "[", 
       RowBox[{"!", 
        RowBox[{"scalarQ", "[", "#", "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", "e12", ",", 
     "e123", ",", "m01", ",", "m02", ",", "m03", ",", "m12", ",", "m13", ",", 
     "m23", ",", "m012", ",", "m013", ",", "m023", ",", "m123"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Assert", "[", 
       RowBox[{"gradeQ", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"Assert", "[", 
       RowBox[{"vectorQ", "[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"e1", ",", "e2", ",", "e3"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Assert", "[", 
       RowBox[{"!", 
        RowBox[{"gradeQ", "[", 
         RowBox[{"#", ",", "1"}], "]"}]}], "]"}], ",", 
      RowBox[{"Assert", "[", 
       RowBox[{"!", 
        RowBox[{"vectorQ", "[", "#", "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "e0", ",", "e23", ",", "e31", ",", "e12", ",", "e123", ",", "m01", ",", 
     "m02", ",", "m03", ",", "m12", ",", "m13", ",", "m23", ",", "m012", ",", 
     "m013", ",", "m023", ",", "m123"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Assert", "[", 
       RowBox[{"gradeQ", "[", 
        RowBox[{"#", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"Assert", "[", 
       RowBox[{"bivectorQ", "[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"e23", ",", "e31", ",", "e12"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Assert", "[", 
       RowBox[{"!", 
        RowBox[{"gradeQ", "[", 
         RowBox[{"#", ",", "2"}], "]"}]}], "]"}], ",", 
      RowBox[{"Assert", "[", 
       RowBox[{"!", 
        RowBox[{"bivectorQ", "[", "#", "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "e0", ",", "e1", ",", "e2", ",", "e3", ",", "e123", ",", "m01", ",", 
     "m02", ",", "m03", ",", "m12", ",", "m13", ",", "m23", ",", "m012", ",", 
     "m013", ",", "m023", ",", "m123"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Assert", "[", 
       RowBox[{"gradeQ", "[", 
        RowBox[{"#", ",", "3"}], "]"}], "]"}], ",", 
      RowBox[{"Assert", "[", 
       RowBox[{"trivectorQ", "[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"{", "e123", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Assert", "[", 
       RowBox[{"!", 
        RowBox[{"gradeQ", "[", 
         RowBox[{"#", ",", "3"}], "]"}]}], "]"}], ",", 
      RowBox[{"Assert", "[", 
       RowBox[{"!", 
        RowBox[{"trivectorQ", "[", "#", "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
   
   RowBox[{"{", 
    RowBox[{
    "e0", ",", "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", "e12",
      ",", "m01", ",", "m02", ",", "m03", ",", "m12", ",", "m13", ",", "m23", 
     ",", "m012", ",", "m013", ",", "m023", ",", "m123"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Assert", "[", 
      RowBox[{"gradeQ", "[", 
       RowBox[{"#", ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "m01", ",", "m02", ",", "m03", ",", "m12", ",", "m13", ",", "m23", ",", 
     "m012", ",", "m013", ",", "m023", ",", "m123"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Assert", "[", 
       RowBox[{"!", 
        RowBox[{"gradeQ", "[", 
         RowBox[{"#", ",", 
          RowBox[{"-", "1"}]}], "]"}]}], "]"}], "}"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", 
      "e12", ",", "e123"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Grade", " ", "selection", " ", 
    RowBox[{"tests", "."}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Assert", "[", 
       RowBox[{
        RowBox[{"GradeSelection", "[", 
         RowBox[{"#", ",", "0"}], "]"}], "\[Equal]", "e0"}], "]"}], ",", 
      RowBox[{"Assert", "[", 
       RowBox[{
        RowBox[{"ScalarSelection", "[", "#", "]"}], "\[Equal]", "e0"}], 
       "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "e0", ",", "m01", ",", "m02", ",", "m03", ",", "m013", ",", "m012", ",", 
     "m023"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{"GradeSelection", "[", 
          RowBox[{"#", ",", "0"}], "]"}], "\[Equal]", "0"}], "]"}], ",", 
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{"ScalarSelection", "[", "#", "]"}], "\[Equal]", "0"}], 
        "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", "e12", ",", 
      "e123", ",", "m12", ",", "m13", ",", "m23", ",", "m123"}], "}"}]}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Assert", "[", 
       RowBox[{
        RowBox[{"GradeSelection", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "\[Equal]", "e1"}], "]"}], ",", 
      RowBox[{"Assert", "[", 
       RowBox[{
        RowBox[{"VectorSelection", "[", "#", "]"}], "\[Equal]", "e1"}], 
       "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "e1", ",", "m01", ",", "m12", ",", "m13", ",", "m012", ",", "m013", ",", 
     "m123"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{"GradeSelection", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "\[Equal]", "0"}], "]"}], ",", 
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{"VectorSelection", "[", "#", "]"}], "\[Equal]", "0"}], 
        "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e23", ",", "e31", ",", "e12", ",", "e123", ",", "m02", ",", 
      "m03", ",", "m23", ",", "m023"}], "}"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Assert", "[", 
       RowBox[{
        RowBox[{"GradeSelection", "[", 
         RowBox[{"#", ",", "2"}], "]"}], "\[Equal]", "e23"}], "]"}], ",", 
      RowBox[{"Assert", "[", 
       RowBox[{
        RowBox[{"BivectorSelection", "[", "#", "]"}], "\[Equal]", "e23"}], 
       "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "e23", ",", "m02", ",", "m12", ",", "m23", ",", "m023", ",", "m123", ",", 
     "m012"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{"GradeSelection", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "\[Equal]", "0"}], "]"}], ",", 
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{"BivectorSelection", "[", "#", "]"}], "\[Equal]", "0"}], 
        "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e3", ",", "e123", ",", "m01", ",", 
      "m03", ",", "m13", ",", "m013"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Assert", "[", 
       RowBox[{
        RowBox[{"GradeSelection", "[", 
         RowBox[{"#", ",", "3"}], "]"}], "\[Equal]", "e123"}], "]"}], ",", 
      RowBox[{"Assert", "[", 
       RowBox[{
        RowBox[{"TrivectorSelection", "[", "#", "]"}], "\[Equal]", "e123"}], 
       "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "e123", ",", "m03", ",", "m13", ",", "m23", ",", "m013", ",", "m023", ",",
      "m123"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{"GradeSelection", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "\[Equal]", "0"}], "]"}], ",", 
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{"TrivectorSelection", "[", "#", "]"}], "\[Equal]", "0"}], 
        "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", 
      "e12", ",", "m01", ",", "m02", ",", "m12", ",", "m012"}], "}"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Minus", " ", "tests"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "e0"}], "\[Equal]", 
    RowBox[{"Scalar", "[", 
     RowBox[{"-", "1"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "e1"}], "\[Equal]", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "e2"}], "\[Equal]", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "e3"}], "\[Equal]", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "3"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "e23"}], "\[Equal]", 
    RowBox[{"Bivector", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2", ",", "3"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "e31"}], "\[Equal]", 
    RowBox[{"Bivector", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "3", ",", "1"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "e12"}], "\[Equal]", 
    RowBox[{"Bivector", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", "2"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "e123"}], "\[Equal]", 
    RowBox[{"Trivector", "[", 
     RowBox[{"-", "1"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "m01"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "e0"}], "-", "e1"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "m02"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "e0"}], "-", "e23"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "m03"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "e0"}], "-", "e123"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "m12"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "e1"}], "-", "e23"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "m13"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "e1"}], "-", "e123"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "m23"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "e23"}], "-", "e123"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "m012"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "e0"}], "-", "e1", "-", "e23"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "m013"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "e0"}], "-", "e1", "-", "e123"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"-", "m023"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "e0"}], "-", "e23", "-", "e123"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Assert", "[", 
    RowBox[{
     RowBox[{"-", "m123"}], "\[Equal]", 
     RowBox[{
      RowBox[{"-", "e1"}], "-", "e23", "-", "e123"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Scalar", "/", "Pseudoscalar"}], " ", "multiplication", " ", 
    "tests"}], "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ")"}]}], "\[Equal]", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ")"}]}], "\[Equal]", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "e0", ",", 
        RowBox[{"Scalar", "[", "2", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "e1", ",", 
        RowBox[{"Vector", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "e2", ",", 
        RowBox[{"Vector", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "e3", ",", 
        RowBox[{"Vector", "[", 
         RowBox[{"2", ",", "3"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "e23", ",", 
        RowBox[{"Bivector", "[", 
         RowBox[{"2", ",", "2", ",", "3"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "e31", ",", 
        RowBox[{"Bivector", "[", 
         RowBox[{"2", ",", "3", ",", "1"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "e12", ",", 
        RowBox[{"Bivector", "[", 
         RowBox[{"2", ",", "1", ",", "2"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "e123", ",", 
        RowBox[{"Trivector", "[", "2", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "m01", ",", 
        RowBox[{
         RowBox[{"2", " ", "e0"}], "+", 
         RowBox[{"2", " ", "e1"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "m02", ",", 
        RowBox[{
         RowBox[{"2", " ", "e0"}], "+", 
         RowBox[{"2", " ", "e23"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "m03", ",", 
        RowBox[{
         RowBox[{"2", " ", "e0"}], "+", 
         RowBox[{"2", " ", "e123"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "m12", ",", 
        RowBox[{
         RowBox[{"2", " ", "e1"}], "+", 
         RowBox[{"2", " ", "e23"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "m13", ",", 
        RowBox[{
         RowBox[{"2", " ", "e1"}], "+", 
         RowBox[{"2", " ", "e123"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "m23", ",", 
        RowBox[{
         RowBox[{"2", " ", "e23"}], "+", 
         RowBox[{"2", " ", "e123"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "m012", ",", 
        RowBox[{
         RowBox[{"2", " ", "e0"}], "+", 
         RowBox[{"2", " ", "e1"}], "+", 
         RowBox[{"2", " ", "e23"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "m013", ",", 
        RowBox[{
         RowBox[{"2", " ", "e0"}], "+", 
         RowBox[{"2", " ", "e1"}], "+", 
         RowBox[{"2", " ", "e123"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "m023", ",", 
        RowBox[{
         RowBox[{"2", " ", "e0"}], "+", 
         RowBox[{"2", " ", "e23"}], "+", 
         RowBox[{"2", " ", "e123"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "m123", ",", 
        RowBox[{
         RowBox[{"2", " ", "e1"}], "+", 
         RowBox[{"2", " ", "e23"}], "+", 
         RowBox[{"2", " ", "e123"}]}]}], "}"}]}], "}"}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ")"}]}], "\[Equal]", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ")"}]}], "\[Equal]", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ")"}], "**", 
          RowBox[{"(", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ")"}]}], "\[Equal]", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ")"}], "**", 
          RowBox[{"(", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ")"}]}], "\[Equal]", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], "&"}], "/@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"e0", ",", "e0", ",", 
        RowBox[{"Scalar", "[", "1", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "e1", ",", 
        RowBox[{"Vector", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "e2", ",", 
        RowBox[{"Vector", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "e3", ",", 
        RowBox[{"Vector", "[", 
         RowBox[{"1", ",", "3"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "e23", ",", 
        RowBox[{"Bivector", "[", 
         RowBox[{"1", ",", "2", ",", "3"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "e31", ",", 
        RowBox[{"Bivector", "[", 
         RowBox[{"1", ",", "3", ",", "1"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "e12", ",", 
        RowBox[{"Bivector", "[", 
         RowBox[{"1", ",", "1", ",", "2"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "e123", ",", 
        RowBox[{"Trivector", "[", "1", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "m01", ",", 
        RowBox[{"e0", "+", "e1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "m02", ",", 
        RowBox[{"e0", "+", "e23"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "m03", ",", 
        RowBox[{"e0", "+", "e123"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "m12", ",", 
        RowBox[{"e1", "+", "e23"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "m13", ",", 
        RowBox[{"e1", "+", "e123"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "m23", ",", 
        RowBox[{"e23", "+", "e123"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "m012", ",", 
        RowBox[{"e0", "+", "e1", "+", "e23"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "m013", ",", 
        RowBox[{"e0", "+", "e1", "+", "e123"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "m023", ",", 
        RowBox[{"e0", "+", "e23", "+", "e123"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e0", ",", "m123", ",", 
        RowBox[{"e1", "+", "e23", "+", "e123"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "e0", ",", 
        RowBox[{"Trivector", "[", "1", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "e1", ",", 
        RowBox[{"Bivector", "[", 
         RowBox[{"1", ",", "2", ",", "3"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "e2", ",", 
        RowBox[{"Bivector", "[", 
         RowBox[{"1", ",", "3", ",", "1"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "e3", ",", 
        RowBox[{"Bivector", "[", 
         RowBox[{"1", ",", "1", ",", "2"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "e23", ",", 
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "e31", ",", 
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "e12", ",", 
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "e123", ",", 
        RowBox[{"Scalar", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "m01", ",", 
        RowBox[{
         RowBox[{"e123", " ", "e0"}], "+", 
         RowBox[{"e123", " ", "e1"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "m02", ",", 
        RowBox[{
         RowBox[{"e123", " ", "e0"}], "+", 
         RowBox[{"e123", " ", "e23"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "m03", ",", 
        RowBox[{
         RowBox[{"e123", " ", "e0"}], "+", 
         RowBox[{"e123", " ", "e123"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "m12", ",", 
        RowBox[{
         RowBox[{"e123", " ", "e1"}], "+", 
         RowBox[{"e123", " ", "e23"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "m13", ",", 
        RowBox[{
         RowBox[{"e123", " ", "e1"}], "+", 
         RowBox[{"e123", " ", "e123"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "m23", ",", 
        RowBox[{
         RowBox[{"e123", " ", "e23"}], "+", 
         RowBox[{"e123", " ", "e123"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "m012", ",", 
        RowBox[{
         RowBox[{"e123", " ", "e0"}], "+", 
         RowBox[{"e123", " ", "e1"}], "+", 
         RowBox[{"e123", " ", "e23"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "m013", ",", 
        RowBox[{
         RowBox[{"e123", " ", "e0"}], "+", 
         RowBox[{"e123", " ", "e1"}], "+", 
         RowBox[{"e123", " ", "e123"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "m023", ",", 
        RowBox[{
         RowBox[{"e123", " ", "e0"}], "+", 
         RowBox[{"e123", " ", "e23"}], "+", 
         RowBox[{"e123", " ", "e123"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e123", ",", "m123", ",", 
        RowBox[{
         RowBox[{"e123", " ", "e1"}], "+", 
         RowBox[{"e123", " ", "e23"}], "+", 
         RowBox[{"e123", " ", "e123"}]}]}], "}"}]}], "}"}]}], ";"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Tests", " ", "for", " ", 
     RowBox[{"(", 
      RowBox[{"non", "-", "commutitive"}], ")"}], " ", "multiplication"}], 
    ",", " ", 
    RowBox[{"dot", " ", "and", " ", 
     RowBox[{"wedge", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", " ", 
   RowBox[{
   "mbasis", ",", " ", "ptable", ",", " ", "dtable", ",", " ", "wtable", ",", 
    " ", "stable"}], " ", "]"}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mbasis", "=", 
    RowBox[{"{", 
     RowBox[{
     "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", "e12", ",", 
      "e123"}], "}"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ptable", "=", 
    RowBox[{"(*", 
     RowBox[{
     "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", "e12", ",", 
      "e123"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", "e1", "*)"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"e0", ",", "e12", ",", "e13", ",", "e123", ",", 
        RowBox[{"-", "e3"}], ",", "e2", ",", "e23"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "e2", "*)"}], 
      RowBox[{"{", 
       RowBox[{"e21", ",", "e0", ",", "e23", ",", "e3", ",", "e123", ",", 
        RowBox[{"-", "e1"}], ",", "e31"}], "}"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"(*", "e3", "*)"}], 
      RowBox[{"{", 
       RowBox[{"e31", ",", "e32", ",", "e0", ",", 
        RowBox[{"-", "e2"}], ",", "e1", ",", "e123", ",", "e12"}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"(*", "e23", "*)"}], 
      RowBox[{"{", 
       RowBox[{"e123", ",", 
        RowBox[{"-", "e3"}], ",", "e2", ",", 
        RowBox[{"-", "e0"}], ",", "e21", ",", "e31", ",", 
        RowBox[{"-", "e1"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "e31", "*)"}], 
      RowBox[{"{", 
       RowBox[{"e3", ",", "e123", ",", 
        RowBox[{"-", "e1"}], ",", "e12", ",", 
        RowBox[{"-", "e0"}], ",", "e32", ",", 
        RowBox[{"-", "e2"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "e12", "*)"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "e2"}], ",", "e1", ",", "e123", ",", "e13", ",", "e23", 
        ",", 
        RowBox[{"-", "e0"}], ",", 
        RowBox[{"-", "e3"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "e123", "*)"}], 
      RowBox[{"{", 
       RowBox[{"e23", ",", "e31", ",", "e12", ",", 
        RowBox[{"-", "e1"}], ",", 
        RowBox[{"-", "e2"}], ",", 
        RowBox[{"-", "e3"}], ",", 
        RowBox[{"-", "e0"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dtable", "=", 
    RowBox[{"(*", 
     RowBox[{
     "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", "e12", ",", 
      "e123"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", "e1", "*)"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"e0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "e3"}], ",", "e2", ",", "e23"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "e2", "*)"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "e0", ",", "0", ",", "e3", ",", "0", ",", 
        RowBox[{"-", "e1"}], ",", "e31"}], "}"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"(*", "e3", "*)"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "e0", ",", 
        RowBox[{"-", "e2"}], ",", "e1", ",", "0", ",", "e12"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "e23", "*)"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "e3"}], ",", "e2", ",", 
        RowBox[{"-", "e0"}], ",", "0", ",", "0", ",", 
        RowBox[{"-", "e1"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "e31", "*)"}], 
      RowBox[{"{", 
       RowBox[{"e3", ",", "0", ",", 
        RowBox[{"-", "e1"}], ",", "0", ",", 
        RowBox[{"-", "e0"}], ",", "0", ",", 
        RowBox[{"-", "e2"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "e12", "*)"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "e2"}], ",", "e1", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "e0"}], ",", 
        RowBox[{"-", "e3"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "e123", "*)"}], 
      RowBox[{"{", 
       RowBox[{"e23", ",", "e31", ",", "e12", ",", 
        RowBox[{"-", "e1"}], ",", 
        RowBox[{"-", "e2"}], ",", 
        RowBox[{"-", "e3"}], ",", 
        RowBox[{"-", "e0"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"wtable", "=", 
    RowBox[{"(*", 
     RowBox[{
     "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", "e12", ",", 
      "e123"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", "e1", "*)"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0", ",", "e12", ",", "e13", ",", "e123", ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "e2", "*)"}], 
      RowBox[{"{", 
       RowBox[{
       "e21", ",", "0", ",", "e23", ",", "0", ",", "e123", ",", "0", ",", 
        "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "e3", "*)"}], 
      RowBox[{"{", 
       RowBox[{
       "e31", ",", "e32", ",", "0", ",", "0", ",", "0", ",", "e123", ",", 
        "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "e23", "*)"}], 
      RowBox[{"{", 
       RowBox[{
       "e123", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "e31", "*)"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "e123", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "e12", "*)"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "e123", ",", "0", ",", "0", ",", "0", ",", "0"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "e123", "*)"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
       "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stable", "=", 
    RowBox[{"(*", 
     RowBox[{
     "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", "e12", ",", 
      "e123"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", "e1", "*)"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "e2", "*)"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "e3", "*)"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "e23", "*)"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "e31", "*)"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "e12", "*)"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "e123", "*)"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Assert", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], " ", "\[Equal]", " ", 
         RowBox[{"ptable", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Assert", "[", " ", 
        RowBox[{
         RowBox[{"NonCommutativeMultiply", "[", " ", 
          RowBox[{
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "\[Equal]", " ", 
         RowBox[{"ptable", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Assert", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", ".", " ", 
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], " ", "\[Equal]", " ", 
         RowBox[{"dtable", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Assert", "[", " ", 
        RowBox[{
         RowBox[{"Dot", "[", 
          RowBox[{
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "\[Equal]", " ", 
         RowBox[{"dtable", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Assert", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "\[Wedge]", " ", 
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], " ", "\[Equal]", " ", 
         RowBox[{"wtable", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Assert", "[", " ", 
        RowBox[{
         RowBox[{"Wedge", "[", 
          RowBox[{
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "\[Equal]", " ", 
         RowBox[{"wtable", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Assert", "[", " ", 
        RowBox[{
         RowBox[{"\[LeftAngleBracket]", 
          RowBox[{
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", ",", " ", 
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "\[RightAngleBracket]"}], " ", 
         "\[Equal]", " ", 
         RowBox[{"stable", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Assert", "[", " ", 
        RowBox[{
         RowBox[{"ScalarProduct", "[", 
          RowBox[{
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", ",", " ", 
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "\[Equal]", " ", 
         RowBox[{"stable", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Assert", "[", " ", 
        RowBox[{
         RowBox[{"\[LeftAngleBracket]", 
          RowBox[{
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "\[RightAngleBracket]"}], " ", 
         "\[Equal]", " ", 
         RowBox[{"stable", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Assert", "[", " ", 
        RowBox[{
         RowBox[{"ScalarValue", "[", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], ")"}], " ", "]"}], " ", 
         "\[Equal]", " ", 
         RowBox[{"stable", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Assert", "[", " ", 
        RowBox[{
         RowBox[{"ScalarSelection", "[", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"mbasis", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
             RowBox[{"mbasis", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], ")"}], ",", " ", "False"}], 
          " ", "]"}], " ", "\[Equal]", " ", 
         RowBox[{"stable", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\n"}], "Input",
 CellChangeTimes->{{3.691718210439073*^9, 3.6917182571309843`*^9}, {
   3.6917182929298563`*^9, 3.6917183025319567`*^9}, {3.691750173495006*^9, 
   3.691750175245139*^9}, 3.691751017579562*^9, 3.691751071857938*^9, {
   3.6917511135036993`*^9, 3.691751191437381*^9}, {3.691751563802803*^9, 
   3.6917516355396347`*^9}, {3.691752853444841*^9, 3.691752867621365*^9}, {
   3.691781247818859*^9, 3.691781307456411*^9}, {3.691790979873547*^9, 
   3.691790980953986*^9}, {3.6917910542064543`*^9, 3.691791055052411*^9}, {
   3.691794137408502*^9, 3.691794137710519*^9}, 3.6917962719730167`*^9, {
   3.695297933037281*^9, 3.695297967299975*^9}, {3.903909981423339*^9, 
   3.903910000603784*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"e5bf2811-8a60-44c9-8350-8f7bd1ce8285"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Manual tests, showing the results of various products in traditional form.\
\>", "Subsection",
 CellChangeTimes->{{3.6917962788404827`*^9, 
  3.691796303542089*^9}},ExpressionUUID->"6f56a442-56d1-4f37-bd74-\
195f8db78e3d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"x", ",", "y"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", " ", 
       RowBox[{"\"\<(\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ")"}], " ", "//", " ", 
         "TraditionalForm"}], ",", "\[IndentingNewLine]", "\"\<)(\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ")"}], " ", "//", " ", 
         "TraditionalForm"}], ",", "\[IndentingNewLine]", "\"\<) = \>\"", ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], " ", "**", " ", 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}]}], ")"}], "//", " ", 
         "TraditionalForm"}]}], "\[IndentingNewLine]", "}"}], "]"}], " ", 
     "&"}], "/@", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"e2", ",", "e2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"e2", ",", "e21"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e2", " ", "-", 
         RowBox[{"5", "e21"}]}], ",", "e2"}], "}"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"e2", ",", 
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{"3", "e21"}]}]}], "}"}], " ", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{
          RowBox[{"Tan", "[", "y", "]"}], "e21"}]}], ",", "e2"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "y", "]"}], "e2"}], ",", 
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{
          RowBox[{"Sin", "[", "x", "]"}], "e21"}]}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], " ", "//", "Column"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", " ", 
       RowBox[{"\"\<(\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ")"}], " ", "//", " ", "TeXForm"}],
         ",", "\[IndentingNewLine]", "\"\<)(\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ")"}], " ", "//", " ", "TeXForm"}],
         ",", "\[IndentingNewLine]", "\"\<) = \>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], " ", "**", " ", 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}]}], ")"}], "//", " ", 
         "TeXForm"}]}], "\[IndentingNewLine]", "}"}], "]"}], " ", "&"}], "/@",
     " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"e2", ",", "e2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"e2", ",", "e21"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e2", " ", "-", 
         RowBox[{"5", "e21"}]}], ",", "e2"}], "}"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"e2", ",", 
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{"3", "e21"}]}]}], "}"}], " ", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{
          RowBox[{"Tan", "[", "y", "]"}], "e21"}]}], ",", "e2"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "y", "]"}], "e2"}], ",", 
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{
          RowBox[{"Sin", "[", "x", "]"}], "e21"}]}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], " ", "//", "Column"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\< \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\< = \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], 
       RowBox[{"(*", 
        RowBox[{"//", " ", "TraditionalForm"}], "*)"}], "\[IndentingNewLine]",
        "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", "//",
    " ", "Grid"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\<\[CenterDot]\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\< = \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", " ", 
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], 
       RowBox[{"(*", 
        RowBox[{"//", " ", "TraditionalForm"}], "*)"}], "\[IndentingNewLine]",
        "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", "//",
    " ", "Grid"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\<\[Wedge]\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\< = \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "\[Wedge]", " ", 
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], 
       RowBox[{"(*", 
        RowBox[{"//", " ", "TraditionalForm"}], "*)"}], "\[IndentingNewLine]",
        "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", "//",
    " ", "Grid"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"\"\<<\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\< \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\<>\>\"", ",", "\[IndentingNewLine]", 
        "\"\< = \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{"\[LeftAngleBracket]", 
          RowBox[{
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "\[RightAngleBracket]"}], 
         ")"}]}], 
       RowBox[{"(*", 
        RowBox[{"//", " ", "TraditionalForm"}], "*)"}], "\[IndentingNewLine]",
        "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", "//",
    " ", "Grid"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"XXForm", " ", "tests", " ", 
    RowBox[{"(", 
     RowBox[{"manual", " ", "verification"}], ")"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "//", "StandardForm"}], ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", 
      "e12", ",", "e123", ",", "m01", ",", "m02", ",", "m03", ",", "m12", ",",
       "m13", ",", "m23", ",", "m012", ",", "m013", ",", "m023", ",", 
      "m123"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "#", ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", 
      "e12", ",", "e123", ",", "m01", ",", "m02", ",", "m03", ",", "m12", ",",
       "m13", ",", "m23", ",", "m012", ",", "m013", ",", "m023", ",", 
      "m123"}], "}"}]}], "]"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "//", "StandardForm"}], ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", 
      "e12", ",", "e123", ",", "m01", ",", "m02", ",", "m03", ",", "m12", ",",
       "m13", ",", "m23", ",", "m012", ",", "m013", ",", "m023", ",", 
      "m123"}], "}"}]}], "]"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "//", "DisplayForm"}], ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", 
      "e12", ",", "e123", ",", "m01", ",", "m02", ",", "m03", ",", "m12", ",",
       "m13", ",", "m23", ",", "m012", ",", "m013", ",", "m023", ",", 
      "m123"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"#", "//", "TeXForm"}], ")"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "e0", ",", "e1", ",", "e2", ",", "e3", ",", "e23", ",", "e31", ",", "e12",
      ",", "e123", ",", "m01", ",", "m02", ",", "m03", ",", "m12", ",", "m13",
      ",", "m23", ",", "m012", ",", "m013", ",", "m023", ",", "m123"}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.691791531811805*^9, 3.691791549767912*^9}, {
   3.691791588713826*^9, 3.6917916498371696`*^9}, {3.6917917021550827`*^9, 
   3.6917917202040462`*^9}, {3.691791774541381*^9, 3.6917918197078323`*^9}, 
   3.691791893128619*^9, {3.691792581346946*^9, 3.691792589408039*^9}, {
   3.6917927042212276`*^9, 3.6917927050141172`*^9}, {3.691792865075037*^9, 
   3.691793027992055*^9}, {3.6917931138285217`*^9, 3.691793354385445*^9}, {
   3.691793421672282*^9, 3.691793454478035*^9}, {3.691793493307729*^9, 
   3.69179354162236*^9}, {3.691793573926221*^9, 3.6917935756674356`*^9}, {
   3.691793611249544*^9, 3.6917936578082323`*^9}, {3.6917941624602947`*^9, 
   3.6917942544317627`*^9}, {3.6917943028594723`*^9, 
   3.6917943451806803`*^9}, {3.691794382116899*^9, 3.691794551102071*^9}, {
   3.691794612330554*^9, 3.6917946761087217`*^9}, {3.691794709650693*^9, 
   3.691794747375781*^9}, {3.691794811887302*^9, 3.6917948276847553`*^9}, {
   3.691794955976565*^9, 3.6917950084512367`*^9}, {3.691795218630961*^9, 
   3.691795386213243*^9}, {3.6917954181246157`*^9, 3.691795482761589*^9}, {
   3.691795531345439*^9, 3.691795544568725*^9}, {3.691795576303005*^9, 
   3.691795598207263*^9}, {3.6917958088878593`*^9, 3.6917958093751593`*^9}, {
   3.691795841721541*^9, 3.691795844686182*^9}, {3.701716115273912*^9, 
   3.70171616604908*^9}, {3.725323274745186*^9, 3.725323317550624*^9}, {
   3.7253233884256*^9, 3.725323401784754*^9}, {3.7253235872111397`*^9, 
   3.725323587228676*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"fe91dae3-52fe-42a1-863c-4e085e62b74a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox["1", TraditionalForm], TraditionalForm, Editable -> True]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         RowBox[{"-", 
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]}], 
         TraditionalForm], TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], 
         TraditionalForm], TraditionalForm, Editable -> True]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         RowBox[{
           RowBox[{"5", " ", 
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]}], 
           "+", 
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]}], 
         TraditionalForm], TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox[
         RowBox[{
           RowBox[{"5", " ", 
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}], "+", 
           "1"}], TraditionalForm], TraditionalForm, Editable -> True]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         RowBox[{
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "-", 
           RowBox[{"3", " ", 
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]}]}], 
         TraditionalForm], TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox[
         RowBox[{
           RowBox[{"3", " ", 
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}], "+", 
           "1"}], TraditionalForm], TraditionalForm, Editable -> True]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         RowBox[{
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "-", 
           RowBox[{
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], " ", 
             
             RowBox[{"tan", "(", "y", ")"}]}]}], TraditionalForm], 
        TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox[
         RowBox[{"1", "-", 
           RowBox[{
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], " ", 
             RowBox[{"tan", "(", "y", ")"}]}]}], TraditionalForm], 
        TraditionalForm, Editable -> True]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         RowBox[{
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], " ", 
           RowBox[{"cos", "(", "y", ")"}]}], TraditionalForm], 
        TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         RowBox[{
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "-", 
           RowBox[{
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], " ", 
             
             RowBox[{"sin", "(", "x", ")"}]}]}], TraditionalForm], 
        TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox[
         RowBox[{
           RowBox[{
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], " ", 
             RowBox[{"sin", "(", "x", ")"}], " ", 
             RowBox[{"cos", "(", "y", ")"}]}], "+", 
           RowBox[{"cos", "(", "y", ")"}]}], TraditionalForm], 
        TraditionalForm, Editable -> True]},
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.691791551402295*^9, {3.691791594869808*^9, 3.6917916458927193`*^9}, {
   3.691791709440235*^9, 3.691791720571684*^9}, {3.691791768503936*^9, 
   3.69179179516475*^9}, 3.6917920865475893`*^9, {3.69179258229484*^9, 
   3.6917925900896387`*^9}, {3.691792687344152*^9, 3.691792708165069*^9}, {
   3.691792841796733*^9, 3.691792949602928*^9}, {3.691792982818384*^9, 
   3.691793028460248*^9}, 3.691793150190076*^9, {3.691793193380019*^9, 
   3.691793222383069*^9}, {3.6917932775491123`*^9, 3.691793316206334*^9}, 
   3.69179336027372*^9, {3.6917934288920307`*^9, 3.691793456198935*^9}, {
   3.6917934965731*^9, 3.691793543089006*^9}, 3.69179357632473*^9, {
   3.691793611881084*^9, 3.691793659967074*^9}, 3.691794147805304*^9, {
   3.691794194160804*^9, 3.691794230413221*^9}, 3.691794309990511*^9, 
   3.691794347202363*^9, {3.6917944697362633`*^9, 3.69179448721546*^9}, {
   3.6917945202197237`*^9, 3.691794552050255*^9}, 3.691794642658412*^9, 
   3.691794680130802*^9, 3.69179475428813*^9, 3.691794831212236*^9, 
   3.691794978608439*^9, 3.691795009809869*^9, {3.691795199059567*^9, 
   3.691795223228322*^9}, 3.6917954895859947`*^9, 3.6917955468865633`*^9, 
   3.691795602693726*^9, {3.691795829638823*^9, 3.691795848393449*^9}, 
   3.69218483024903*^9, 3.701716174254334*^9, 3.725323319903133*^9, 
   3.725323406116519*^9, 3.725323699482471*^9, 3.725324018263672*^9, 
   3.7253242075493727`*^9, 3.725324426734576*^9, 3.7253245551632433`*^9, 
   3.725324740233644*^9, 3.725324868930287*^9, 3.725326182399308*^9, 
   3.725327139453877*^9, 3.725577998667445*^9, 3.903958175275917*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"2f317952-a9ad-4ce8-a141-572a9f6498d8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
      "\"(\"", "\"\\\\mathbf{e}_2\"", "\")(\"", "\"\\\\mathbf{e}_2\"", 
       "\") = \"", "1"},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", "\"\\\\mathbf{e}_2\"", "\")(\"", 
       RowBox[{"\"\\\\mathbf{e}_{12}\"", " ", 
         InterpretationBox["\"-1\"", 
          TeXForm[-1], Editable -> True, AutoDelete -> True]}], "\") = \"", 
       "\"\\\\mathbf{e}_1\""},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       RowBox[{"\"\\\\mathbf{e}_2\"", "+", 
         RowBox[{"\"\\\\mathbf{e}_{12}\"", " ", 
           InterpretationBox["\"5\"", 
            TeXForm[5], Editable -> True, AutoDelete -> True]}]}], "\")(\"", 
       "\"\\\\mathbf{e}_2\"", "\") = \"", 
       RowBox[{"1", "+", 
         RowBox[{"\"\\\\mathbf{e}_1\"", " ", 
           InterpretationBox["\"5\"", 
            TeXForm[5], Editable -> True, AutoDelete -> True]}]}]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", "\"\\\\mathbf{e}_2\"", "\")(\"", 
       RowBox[{"\"\\\\mathbf{e}_2\"", "+", 
         RowBox[{"\"\\\\mathbf{e}_{12}\"", " ", 
           InterpretationBox["\"-3\"", 
            TeXForm[-3], Editable -> True, AutoDelete -> True]}]}], 
       "\") = \"", 
       RowBox[{"1", "+", 
         RowBox[{"\"\\\\mathbf{e}_1\"", " ", 
           InterpretationBox["\"3\"", 
            TeXForm[3], Editable -> True, AutoDelete -> True]}]}]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       RowBox[{"\"\\\\mathbf{e}_2\"", "+", 
         RowBox[{"\"\\\\mathbf{e}_{12}\"", " ", 
           InterpretationBox["\"-\\\\tan (y)\"", 
            TeXForm[-Tan[$CellContext`y]], Editable -> True, AutoDelete -> 
            True]}]}], "\")(\"", "\"\\\\mathbf{e}_2\"", "\") = \"", 
       RowBox[{"1", "+", 
         RowBox[{"\"\\\\mathbf{e}_1\"", " ", 
           InterpretationBox["\"-\\\\tan (y)\"", 
            TeXForm[-Tan[$CellContext`y]], Editable -> True, AutoDelete -> 
            True]}]}]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       RowBox[{"\"\\\\mathbf{e}_2\"", " ", 
         InterpretationBox["\"\\\\cos (y)\"", 
          TeXForm[
           Cos[$CellContext`y]], Editable -> True, AutoDelete -> True]}], 
       "\")(\"", 
       RowBox[{"\"\\\\mathbf{e}_2\"", "+", 
         RowBox[{"\"\\\\mathbf{e}_{12}\"", " ", 
           InterpretationBox["\"-\\\\sin (x)\"", 
            TeXForm[-Sin[$CellContext`x]], Editable -> True, AutoDelete -> 
            True]}]}], "\") = \"", 
       RowBox[{
         InterpretationBox["\"\\\\cos (y)\"", 
          TeXForm[
           Cos[$CellContext`y]], Editable -> True, AutoDelete -> True], "+", 
         RowBox[{"\"\\\\mathbf{e}_1\"", " ", 
           InterpretationBox["\"\\\\sin (x) \\\\cos (y)\"", 
            TeXForm[Cos[$CellContext`y] Sin[$CellContext`x]], Editable -> 
            True, AutoDelete -> True]}]}]},
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.691791551402295*^9, {3.691791594869808*^9, 3.6917916458927193`*^9}, {
   3.691791709440235*^9, 3.691791720571684*^9}, {3.691791768503936*^9, 
   3.69179179516475*^9}, 3.6917920865475893`*^9, {3.69179258229484*^9, 
   3.6917925900896387`*^9}, {3.691792687344152*^9, 3.691792708165069*^9}, {
   3.691792841796733*^9, 3.691792949602928*^9}, {3.691792982818384*^9, 
   3.691793028460248*^9}, 3.691793150190076*^9, {3.691793193380019*^9, 
   3.691793222383069*^9}, {3.6917932775491123`*^9, 3.691793316206334*^9}, 
   3.69179336027372*^9, {3.6917934288920307`*^9, 3.691793456198935*^9}, {
   3.6917934965731*^9, 3.691793543089006*^9}, 3.69179357632473*^9, {
   3.691793611881084*^9, 3.691793659967074*^9}, 3.691794147805304*^9, {
   3.691794194160804*^9, 3.691794230413221*^9}, 3.691794309990511*^9, 
   3.691794347202363*^9, {3.6917944697362633`*^9, 3.69179448721546*^9}, {
   3.6917945202197237`*^9, 3.691794552050255*^9}, 3.691794642658412*^9, 
   3.691794680130802*^9, 3.69179475428813*^9, 3.691794831212236*^9, 
   3.691794978608439*^9, 3.691795009809869*^9, {3.691795199059567*^9, 
   3.691795223228322*^9}, 3.6917954895859947`*^9, 3.6917955468865633`*^9, 
   3.691795602693726*^9, {3.691795829638823*^9, 3.691795848393449*^9}, 
   3.69218483024903*^9, 3.701716174254334*^9, 3.725323319903133*^9, 
   3.725323406116519*^9, 3.725323699482471*^9, 3.725324018263672*^9, 
   3.7253242075493727`*^9, 3.725324426734576*^9, 3.7253245551632433`*^9, 
   3.725324740233644*^9, 3.725324868930287*^9, 3.725326182399308*^9, 
   3.725327139453877*^9, 3.725577998667445*^9, 3.903958175294106*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"09852304-7c58-4537-b2b4-5f553af18ed4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "1"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "3"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""]},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "1"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""]},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", "1"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "3"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       
       RowBox[{"-", "1"}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}]},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       
       RowBox[{"-", "1"}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]}]},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       RowBox[{"-", "1"}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "3"]}]},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "3"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"", 
       RowBox[{"-", "1"}]},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.691791551402295*^9, {3.691791594869808*^9, 3.6917916458927193`*^9}, {
   3.691791709440235*^9, 3.691791720571684*^9}, {3.691791768503936*^9, 
   3.69179179516475*^9}, 3.6917920865475893`*^9, {3.69179258229484*^9, 
   3.6917925900896387`*^9}, {3.691792687344152*^9, 3.691792708165069*^9}, {
   3.691792841796733*^9, 3.691792949602928*^9}, {3.691792982818384*^9, 
   3.691793028460248*^9}, 3.691793150190076*^9, {3.691793193380019*^9, 
   3.691793222383069*^9}, {3.6917932775491123`*^9, 3.691793316206334*^9}, 
   3.69179336027372*^9, {3.6917934288920307`*^9, 3.691793456198935*^9}, {
   3.6917934965731*^9, 3.691793543089006*^9}, 3.69179357632473*^9, {
   3.691793611881084*^9, 3.691793659967074*^9}, 3.691794147805304*^9, {
   3.691794194160804*^9, 3.691794230413221*^9}, 3.691794309990511*^9, 
   3.691794347202363*^9, {3.6917944697362633`*^9, 3.69179448721546*^9}, {
   3.6917945202197237`*^9, 3.691794552050255*^9}, 3.691794642658412*^9, 
   3.691794680130802*^9, 3.69179475428813*^9, 3.691794831212236*^9, 
   3.691794978608439*^9, 3.691795009809869*^9, {3.691795199059567*^9, 
   3.691795223228322*^9}, 3.6917954895859947`*^9, 3.6917955468865633`*^9, 
   3.691795602693726*^9, {3.691795829638823*^9, 3.691795848393449*^9}, 
   3.69218483024903*^9, 3.701716174254334*^9, 3.725323319903133*^9, 
   3.725323406116519*^9, 3.725323699482471*^9, 3.725324018263672*^9, 
   3.7253242075493727`*^9, 3.725324426734576*^9, 3.7253245551632433`*^9, 
   3.725324740233644*^9, 3.725324868930287*^9, 3.725326182399308*^9, 
   3.725327139453877*^9, 3.725577998667445*^9, 3.903958175314406*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"70077ddf-0e21-495a-8b99-a0944aebdc9c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "1"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "3"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""]},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "1"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""]},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", "1"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "3"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       
       RowBox[{"-", "1"}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}]},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       
       RowBox[{"-", "1"}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]}]},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       RowBox[{"-", "1"}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "3"]}]},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "3"]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"", 
       RowBox[{"-", "1"}]},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.691791551402295*^9, {3.691791594869808*^9, 3.6917916458927193`*^9}, {
   3.691791709440235*^9, 3.691791720571684*^9}, {3.691791768503936*^9, 
   3.69179179516475*^9}, 3.6917920865475893`*^9, {3.69179258229484*^9, 
   3.6917925900896387`*^9}, {3.691792687344152*^9, 3.691792708165069*^9}, {
   3.691792841796733*^9, 3.691792949602928*^9}, {3.691792982818384*^9, 
   3.691793028460248*^9}, 3.691793150190076*^9, {3.691793193380019*^9, 
   3.691793222383069*^9}, {3.6917932775491123`*^9, 3.691793316206334*^9}, 
   3.69179336027372*^9, {3.6917934288920307`*^9, 3.691793456198935*^9}, {
   3.6917934965731*^9, 3.691793543089006*^9}, 3.69179357632473*^9, {
   3.691793611881084*^9, 3.691793659967074*^9}, 3.691794147805304*^9, {
   3.691794194160804*^9, 3.691794230413221*^9}, 3.691794309990511*^9, 
   3.691794347202363*^9, {3.6917944697362633`*^9, 3.69179448721546*^9}, {
   3.6917945202197237`*^9, 3.691794552050255*^9}, 3.691794642658412*^9, 
   3.691794680130802*^9, 3.69179475428813*^9, 3.691794831212236*^9, 
   3.691794978608439*^9, 3.691795009809869*^9, {3.691795199059567*^9, 
   3.691795223228322*^9}, 3.6917954895859947`*^9, 3.6917955468865633`*^9, 
   3.691795602693726*^9, {3.691795829638823*^9, 3.691795848393449*^9}, 
   3.69218483024903*^9, 3.701716174254334*^9, 3.725323319903133*^9, 
   3.725323406116519*^9, 3.725323699482471*^9, 3.725324018263672*^9, 
   3.7253242075493727`*^9, 3.725324426734576*^9, 3.7253245551632433`*^9, 
   3.725324740233644*^9, 3.725324868930287*^9, 3.725326182399308*^9, 
   3.725327139453877*^9, 3.725577998667445*^9, 3.903958175335181*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"c86c02d9-bfb1-4a3a-aeda-c2925ee3dbc1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"",
        "0"},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"",
        "0"},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""]}]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"",
        "0"},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"",
        "0"},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"",
        "0"},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""]},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"",
        "0"},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" = \"", "0"},
      
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       "0"},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" = \"",
        "0"},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.691791551402295*^9, {3.691791594869808*^9, 3.6917916458927193`*^9}, {
   3.691791709440235*^9, 3.691791720571684*^9}, {3.691791768503936*^9, 
   3.69179179516475*^9}, 3.6917920865475893`*^9, {3.69179258229484*^9, 
   3.6917925900896387`*^9}, {3.691792687344152*^9, 3.691792708165069*^9}, {
   3.691792841796733*^9, 3.691792949602928*^9}, {3.691792982818384*^9, 
   3.691793028460248*^9}, 3.691793150190076*^9, {3.691793193380019*^9, 
   3.691793222383069*^9}, {3.6917932775491123`*^9, 3.691793316206334*^9}, 
   3.69179336027372*^9, {3.6917934288920307`*^9, 3.691793456198935*^9}, {
   3.6917934965731*^9, 3.691793543089006*^9}, 3.69179357632473*^9, {
   3.691793611881084*^9, 3.691793659967074*^9}, 3.691794147805304*^9, {
   3.691794194160804*^9, 3.691794230413221*^9}, 3.691794309990511*^9, 
   3.691794347202363*^9, {3.6917944697362633`*^9, 3.69179448721546*^9}, {
   3.6917945202197237`*^9, 3.691794552050255*^9}, 3.691794642658412*^9, 
   3.691794680130802*^9, 3.69179475428813*^9, 3.691794831212236*^9, 
   3.691794978608439*^9, 3.691795009809869*^9, {3.691795199059567*^9, 
   3.691795223228322*^9}, 3.6917954895859947`*^9, 3.6917955468865633`*^9, 
   3.691795602693726*^9, {3.691795829638823*^9, 3.691795848393449*^9}, 
   3.69218483024903*^9, 3.701716174254334*^9, 3.725323319903133*^9, 
   3.725323406116519*^9, 3.725323699482471*^9, 3.725324018263672*^9, 
   3.7253242075493727`*^9, 3.725324426734576*^9, 3.7253245551632433`*^9, 
   3.725324740233644*^9, 3.725324868930287*^9, 3.725326182399308*^9, 
   3.725327139453877*^9, 3.725577998667445*^9, 3.903958175347303*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"4f572d1c-ac87-41a5-b227-ffc869923726"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\">\"", 
       "\" = \"", "1"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"]},
    {
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\">\"", 
       "\" = \"", "1"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"]},
    {
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\">\"", 
       "\" = \"", "1"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"]},
    {
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\">\"", 
       "\" = \"", 
       RowBox[{"-", "1"}]},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"]},
    {
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\">\"", 
       "\" = \"", 
       RowBox[{"-", "1"}]},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"]},
    {
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\">\"", 
       "\" = \"", 
       RowBox[{"-", "1"}]},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"]},
    {
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "3"], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"23\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"31\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\">\"", 
       "\" = \"", "0"},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"123\""], "\">\"", 
       "\" = \"", 
       RowBox[{"-", "1"}]},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.691791551402295*^9, {3.691791594869808*^9, 3.6917916458927193`*^9}, {
   3.691791709440235*^9, 3.691791720571684*^9}, {3.691791768503936*^9, 
   3.69179179516475*^9}, 3.6917920865475893`*^9, {3.69179258229484*^9, 
   3.6917925900896387`*^9}, {3.691792687344152*^9, 3.691792708165069*^9}, {
   3.691792841796733*^9, 3.691792949602928*^9}, {3.691792982818384*^9, 
   3.691793028460248*^9}, 3.691793150190076*^9, {3.691793193380019*^9, 
   3.691793222383069*^9}, {3.6917932775491123`*^9, 3.691793316206334*^9}, 
   3.69179336027372*^9, {3.6917934288920307`*^9, 3.691793456198935*^9}, {
   3.6917934965731*^9, 3.691793543089006*^9}, 3.69179357632473*^9, {
   3.691793611881084*^9, 3.691793659967074*^9}, 3.691794147805304*^9, {
   3.691794194160804*^9, 3.691794230413221*^9}, 3.691794309990511*^9, 
   3.691794347202363*^9, {3.6917944697362633`*^9, 3.69179448721546*^9}, {
   3.6917945202197237`*^9, 3.691794552050255*^9}, 3.691794642658412*^9, 
   3.691794680130802*^9, 3.69179475428813*^9, 3.691794831212236*^9, 
   3.691794978608439*^9, 3.691795009809869*^9, {3.691795199059567*^9, 
   3.691795223228322*^9}, 3.6917954895859947`*^9, 3.6917955468865633`*^9, 
   3.691795602693726*^9, {3.691795829638823*^9, 3.691795848393449*^9}, 
   3.69218483024903*^9, 3.701716174254334*^9, 3.725323319903133*^9, 
   3.725323406116519*^9, 3.725323699482471*^9, 3.725324018263672*^9, 
   3.7253242075493727`*^9, 3.725324426734576*^9, 3.7253245551632433`*^9, 
   3.725324740233644*^9, 3.725324868930287*^9, 3.725326182399308*^9, 
   3.725327139453877*^9, 3.725577998667445*^9, 3.903958175366083*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"9ebb6eca-49ca-4a61-820e-45f874f40a59"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {
     RowBox[{"e", "[", "1", "]"}]},
    {
     RowBox[{"e", "[", "2", "]"}]},
    {
     RowBox[{"e", "[", "3", "]"}]},
    {
     RowBox[{
      RowBox[{"e", "[", "2", "]"}], " ", 
      RowBox[{"e", "[", "3", "]"}]}]},
    {
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], " ", 
      RowBox[{"e", "[", "3", "]"}]}]},
    {
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], " ", 
      RowBox[{"e", "[", "2", "]"}]}]},
    {
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], " ", 
      RowBox[{"e", "[", "2", "]"}], " ", 
      RowBox[{"e", "[", "3", "]"}]}]},
    {
     RowBox[{"1", "+", 
      RowBox[{"e", "[", "1", "]"}]}]},
    {
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]},
    {
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], "+", 
      RowBox[{
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], "+", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}], "+", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]},
    {
     RowBox[{"1", "+", 
      RowBox[{"e", "[", "1", "]"}], "+", 
      RowBox[{
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]},
    {
     RowBox[{"1", "+", 
      RowBox[{"e", "[", "1", "]"}], "+", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]},
    {
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}], "+", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], "+", 
      RowBox[{
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}], "+", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.691791551402295*^9, {3.691791594869808*^9, 3.6917916458927193`*^9}, {
   3.691791709440235*^9, 3.691791720571684*^9}, {3.691791768503936*^9, 
   3.69179179516475*^9}, 3.6917920865475893`*^9, {3.69179258229484*^9, 
   3.6917925900896387`*^9}, {3.691792687344152*^9, 3.691792708165069*^9}, {
   3.691792841796733*^9, 3.691792949602928*^9}, {3.691792982818384*^9, 
   3.691793028460248*^9}, 3.691793150190076*^9, {3.691793193380019*^9, 
   3.691793222383069*^9}, {3.6917932775491123`*^9, 3.691793316206334*^9}, 
   3.69179336027372*^9, {3.6917934288920307`*^9, 3.691793456198935*^9}, {
   3.6917934965731*^9, 3.691793543089006*^9}, 3.69179357632473*^9, {
   3.691793611881084*^9, 3.691793659967074*^9}, 3.691794147805304*^9, {
   3.691794194160804*^9, 3.691794230413221*^9}, 3.691794309990511*^9, 
   3.691794347202363*^9, {3.6917944697362633`*^9, 3.69179448721546*^9}, {
   3.6917945202197237`*^9, 3.691794552050255*^9}, 3.691794642658412*^9, 
   3.691794680130802*^9, 3.69179475428813*^9, 3.691794831212236*^9, 
   3.691794978608439*^9, 3.691795009809869*^9, {3.691795199059567*^9, 
   3.691795223228322*^9}, 3.6917954895859947`*^9, 3.6917955468865633`*^9, 
   3.691795602693726*^9, {3.691795829638823*^9, 3.691795848393449*^9}, 
   3.69218483024903*^9, 3.701716174254334*^9, 3.725323319903133*^9, 
   3.725323406116519*^9, 3.725323699482471*^9, 3.725324018263672*^9, 
   3.7253242075493727`*^9, 3.725324426734576*^9, 3.7253245551632433`*^9, 
   3.725324740233644*^9, 3.725324868930287*^9, 3.725326182399308*^9, 
   3.725327139453877*^9, 3.725577998667445*^9, 3.903958175377405*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"2e1c027c-8ceb-431e-a299-c8bb3e30a486"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "1"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "2"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "3"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "\<\"23\"\>"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "\<\"31\"\>"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "\<\"12\"\>"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "\<\"123\"\>"]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"]}]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"23\"\>"]}]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"123\"\>"]}]},
    {
     RowBox[{
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"23\"\>"]}]},
    {
     RowBox[{
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"123\"\>"]}]},
    {
     RowBox[{
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"123\"\>"], "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"23\"\>"]}]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"23\"\>"]}]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"123\"\>"]}]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"123\"\>"], "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"23\"\>"]}]},
    {
     RowBox[{
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"123\"\>"], "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"23\"\>"]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.691791551402295*^9, {3.691791594869808*^9, 3.6917916458927193`*^9}, {
   3.691791709440235*^9, 3.691791720571684*^9}, {3.691791768503936*^9, 
   3.69179179516475*^9}, 3.6917920865475893`*^9, {3.69179258229484*^9, 
   3.6917925900896387`*^9}, {3.691792687344152*^9, 3.691792708165069*^9}, {
   3.691792841796733*^9, 3.691792949602928*^9}, {3.691792982818384*^9, 
   3.691793028460248*^9}, 3.691793150190076*^9, {3.691793193380019*^9, 
   3.691793222383069*^9}, {3.6917932775491123`*^9, 3.691793316206334*^9}, 
   3.69179336027372*^9, {3.6917934288920307`*^9, 3.691793456198935*^9}, {
   3.6917934965731*^9, 3.691793543089006*^9}, 3.69179357632473*^9, {
   3.691793611881084*^9, 3.691793659967074*^9}, 3.691794147805304*^9, {
   3.691794194160804*^9, 3.691794230413221*^9}, 3.691794309990511*^9, 
   3.691794347202363*^9, {3.6917944697362633`*^9, 3.69179448721546*^9}, {
   3.6917945202197237`*^9, 3.691794552050255*^9}, 3.691794642658412*^9, 
   3.691794680130802*^9, 3.69179475428813*^9, 3.691794831212236*^9, 
   3.691794978608439*^9, 3.691795009809869*^9, {3.691795199059567*^9, 
   3.691795223228322*^9}, 3.6917954895859947`*^9, 3.6917955468865633`*^9, 
   3.691795602693726*^9, {3.691795829638823*^9, 3.691795848393449*^9}, 
   3.69218483024903*^9, 3.701716174254334*^9, 3.725323319903133*^9, 
   3.725323406116519*^9, 3.725323699482471*^9, 3.725324018263672*^9, 
   3.7253242075493727`*^9, 3.725324426734576*^9, 3.7253245551632433`*^9, 
   3.725324740233644*^9, 3.725324868930287*^9, 3.725326182399308*^9, 
   3.725327139453877*^9, 3.725577998667445*^9, 3.903958175378788*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"66ddf71d-fed2-41bf-8504-2e4b8da7204c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {
     RowBox[{"e", "[", "1", "]"}]},
    {
     RowBox[{"e", "[", "2", "]"}]},
    {
     RowBox[{"e", "[", "3", "]"}]},
    {
     RowBox[{
      RowBox[{"e", "[", "2", "]"}], " ", 
      RowBox[{"e", "[", "3", "]"}]}]},
    {
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], " ", 
      RowBox[{"e", "[", "3", "]"}]}]},
    {
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], " ", 
      RowBox[{"e", "[", "2", "]"}]}]},
    {
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], " ", 
      RowBox[{"e", "[", "2", "]"}], " ", 
      RowBox[{"e", "[", "3", "]"}]}]},
    {
     RowBox[{"1", "+", 
      RowBox[{"e", "[", "1", "]"}]}]},
    {
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]},
    {
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], "+", 
      RowBox[{
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], "+", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}], "+", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]},
    {
     RowBox[{"1", "+", 
      RowBox[{"e", "[", "1", "]"}], "+", 
      RowBox[{
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]},
    {
     RowBox[{"1", "+", 
      RowBox[{"e", "[", "1", "]"}], "+", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]},
    {
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}], "+", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], "+", 
      RowBox[{
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}], "+", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}], " ", 
       RowBox[{"e", "[", "3", "]"}]}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.691791551402295*^9, {3.691791594869808*^9, 3.6917916458927193`*^9}, {
   3.691791709440235*^9, 3.691791720571684*^9}, {3.691791768503936*^9, 
   3.69179179516475*^9}, 3.6917920865475893`*^9, {3.69179258229484*^9, 
   3.6917925900896387`*^9}, {3.691792687344152*^9, 3.691792708165069*^9}, {
   3.691792841796733*^9, 3.691792949602928*^9}, {3.691792982818384*^9, 
   3.691793028460248*^9}, 3.691793150190076*^9, {3.691793193380019*^9, 
   3.691793222383069*^9}, {3.6917932775491123`*^9, 3.691793316206334*^9}, 
   3.69179336027372*^9, {3.6917934288920307`*^9, 3.691793456198935*^9}, {
   3.6917934965731*^9, 3.691793543089006*^9}, 3.69179357632473*^9, {
   3.691793611881084*^9, 3.691793659967074*^9}, 3.691794147805304*^9, {
   3.691794194160804*^9, 3.691794230413221*^9}, 3.691794309990511*^9, 
   3.691794347202363*^9, {3.6917944697362633`*^9, 3.69179448721546*^9}, {
   3.6917945202197237`*^9, 3.691794552050255*^9}, 3.691794642658412*^9, 
   3.691794680130802*^9, 3.69179475428813*^9, 3.691794831212236*^9, 
   3.691794978608439*^9, 3.691795009809869*^9, {3.691795199059567*^9, 
   3.691795223228322*^9}, 3.6917954895859947`*^9, 3.6917955468865633`*^9, 
   3.691795602693726*^9, {3.691795829638823*^9, 3.691795848393449*^9}, 
   3.69218483024903*^9, 3.701716174254334*^9, 3.725323319903133*^9, 
   3.725323406116519*^9, 3.725323699482471*^9, 3.725324018263672*^9, 
   3.7253242075493727`*^9, 3.725324426734576*^9, 3.7253245551632433`*^9, 
   3.725324740233644*^9, 3.725324868930287*^9, 3.725326182399308*^9, 
   3.725327139453877*^9, 3.725577998667445*^9, 3.903958175380602*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"6d6beb62-95e0-4251-a81b-55709458c94b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "1"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "2"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "3"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "\<\"23\"\>"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "\<\"31\"\>"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "\<\"12\"\>"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "\<\"123\"\>"]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"]}]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"23\"\>"]}]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"123\"\>"]}]},
    {
     RowBox[{
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"23\"\>"]}]},
    {
     RowBox[{
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"123\"\>"]}]},
    {
     RowBox[{
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"123\"\>"], "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"23\"\>"]}]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"23\"\>"]}]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"123\"\>"]}]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"123\"\>"], "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"23\"\>"]}]},
    {
     RowBox[{
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"123\"\>"], "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"23\"\>"]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.691791551402295*^9, {3.691791594869808*^9, 3.6917916458927193`*^9}, {
   3.691791709440235*^9, 3.691791720571684*^9}, {3.691791768503936*^9, 
   3.69179179516475*^9}, 3.6917920865475893`*^9, {3.69179258229484*^9, 
   3.6917925900896387`*^9}, {3.691792687344152*^9, 3.691792708165069*^9}, {
   3.691792841796733*^9, 3.691792949602928*^9}, {3.691792982818384*^9, 
   3.691793028460248*^9}, 3.691793150190076*^9, {3.691793193380019*^9, 
   3.691793222383069*^9}, {3.6917932775491123`*^9, 3.691793316206334*^9}, 
   3.69179336027372*^9, {3.6917934288920307`*^9, 3.691793456198935*^9}, {
   3.6917934965731*^9, 3.691793543089006*^9}, 3.69179357632473*^9, {
   3.691793611881084*^9, 3.691793659967074*^9}, 3.691794147805304*^9, {
   3.691794194160804*^9, 3.691794230413221*^9}, 3.691794309990511*^9, 
   3.691794347202363*^9, {3.6917944697362633`*^9, 3.69179448721546*^9}, {
   3.6917945202197237`*^9, 3.691794552050255*^9}, 3.691794642658412*^9, 
   3.691794680130802*^9, 3.69179475428813*^9, 3.691794831212236*^9, 
   3.691794978608439*^9, 3.691795009809869*^9, {3.691795199059567*^9, 
   3.691795223228322*^9}, 3.6917954895859947`*^9, 3.6917955468865633`*^9, 
   3.691795602693726*^9, {3.691795829638823*^9, 3.691795848393449*^9}, 
   3.69218483024903*^9, 3.701716174254334*^9, 3.725323319903133*^9, 
   3.725323406116519*^9, 3.725323699482471*^9, 3.725324018263672*^9, 
   3.7253242075493727`*^9, 3.725324426734576*^9, 3.7253245551632433`*^9, 
   3.725324740233644*^9, 3.725324868930287*^9, 3.725326182399308*^9, 
   3.725327139453877*^9, 3.725577998667445*^9, 3.903958175381967*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"b5e8f3ee-be32-4296-b2e0-0f8207771d18"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {"\<\"\\\\mathbf{e}_1\"\>"},
    {"\<\"\\\\mathbf{e}_2\"\>"},
    {"\<\"\\\\mathbf{e}_3\"\>"},
    {"\<\"\\\\mathbf{e}_{23}\"\>"},
    {"\<\"\\\\mathbf{e}_{31}\"\>"},
    {"\<\"\\\\mathbf{e}_{12}\"\>"},
    {"\<\"\\\\mathbf{e}_{123}\"\>"},
    {
     RowBox[{"1", "+", "\<\"\\\\mathbf{e}_1\"\>"}]},
    {
     RowBox[{"1", "+", "\<\"\\\\mathbf{e}_{23}\"\>"}]},
    {
     RowBox[{"1", "+", "\<\"\\\\mathbf{e}_{123}\"\>"}]},
    {
     RowBox[{"\<\"\\\\mathbf{e}_1\"\>", "+", "\<\"\\\\mathbf{e}_{23}\"\>"}]},
    {
     RowBox[{"\<\"\\\\mathbf{e}_1\"\>", 
      "+", "\<\"\\\\mathbf{e}_{123}\"\>"}]},
    {
     RowBox[{"\<\"\\\\mathbf{e}_{123}\"\>", 
      "+", "\<\"\\\\mathbf{e}_{23}\"\>"}]},
    {
     RowBox[{
     "1", "+", "\<\"\\\\mathbf{e}_1\"\>", "+", "\<\"\\\\mathbf{e}_{23}\"\>"}]},
    {
     RowBox[{
     "1", "+", "\<\"\\\\mathbf{e}_1\"\>", 
      "+", "\<\"\\\\mathbf{e}_{123}\"\>"}]},
    {
     RowBox[{
     "1", "+", "\<\"\\\\mathbf{e}_{123}\"\>", 
      "+", "\<\"\\\\mathbf{e}_{23}\"\>"}]},
    {
     RowBox[{"\<\"\\\\mathbf{e}_1\"\>", "+", "\<\"\\\\mathbf{e}_{123}\"\>", 
      "+", "\<\"\\\\mathbf{e}_{23}\"\>"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.691791551402295*^9, {3.691791594869808*^9, 3.6917916458927193`*^9}, {
   3.691791709440235*^9, 3.691791720571684*^9}, {3.691791768503936*^9, 
   3.69179179516475*^9}, 3.6917920865475893`*^9, {3.69179258229484*^9, 
   3.6917925900896387`*^9}, {3.691792687344152*^9, 3.691792708165069*^9}, {
   3.691792841796733*^9, 3.691792949602928*^9}, {3.691792982818384*^9, 
   3.691793028460248*^9}, 3.691793150190076*^9, {3.691793193380019*^9, 
   3.691793222383069*^9}, {3.6917932775491123`*^9, 3.691793316206334*^9}, 
   3.69179336027372*^9, {3.6917934288920307`*^9, 3.691793456198935*^9}, {
   3.6917934965731*^9, 3.691793543089006*^9}, 3.69179357632473*^9, {
   3.691793611881084*^9, 3.691793659967074*^9}, 3.691794147805304*^9, {
   3.691794194160804*^9, 3.691794230413221*^9}, 3.691794309990511*^9, 
   3.691794347202363*^9, {3.6917944697362633`*^9, 3.69179448721546*^9}, {
   3.6917945202197237`*^9, 3.691794552050255*^9}, 3.691794642658412*^9, 
   3.691794680130802*^9, 3.69179475428813*^9, 3.691794831212236*^9, 
   3.691794978608439*^9, 3.691795009809869*^9, {3.691795199059567*^9, 
   3.691795223228322*^9}, 3.6917954895859947`*^9, 3.6917955468865633`*^9, 
   3.691795602693726*^9, {3.691795829638823*^9, 3.691795848393449*^9}, 
   3.69218483024903*^9, 3.701716174254334*^9, 3.725323319903133*^9, 
   3.725323406116519*^9, 3.725323699482471*^9, 3.725324018263672*^9, 
   3.7253242075493727`*^9, 3.725324426734576*^9, 3.7253245551632433`*^9, 
   3.725324740233644*^9, 3.725324868930287*^9, 3.725326182399308*^9, 
   3.725327139453877*^9, 3.725577998667445*^9, 3.903958175383601*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"d93092d0-acb4-43c8-9ab6-86e880ca8f60"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TODO", ":", " ", 
   RowBox[{"test", " ", "multivector", " ", "products"}], ":", " ", "dot"}], 
  ",", " ", "wedge", ",", " ", "**"}]], "Input",
 CellChangeTimes->{{3.691875787772244*^9, 
  3.691875845771678*^9}},ExpressionUUID->"ccb5c879-3456-4105-a065-\
1f793045460e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"manual", " ", "test"}], ",", " ", 
    RowBox[{"or", " ", "just", " ", "the", " ", "dot", " ", "product"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"m1", ",", " ", "m2"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m1", " ", "=", " ", 
     RowBox[{
      RowBox[{"Scalar", "[", "1", "]"}], " ", "+", " ", 
      RowBox[{"Vector", "[", 
       RowBox[{"1", ",", "2"}], "]"}], " ", "+", " ", 
      RowBox[{"Bivector", "[", 
       RowBox[{"1", ",", "2", ",", "3"}], "]"}], " ", "+", " ", 
      RowBox[{"Trivector", "[", "1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"m2", " ", "=", " ", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"Scalar", "[", "1", "]"}]}], " ", "-", " ", 
      RowBox[{"Vector", "[", 
       RowBox[{"1", ",", "2"}], "]"}], " ", "+", " ", 
      RowBox[{"3", 
       RowBox[{"Bivector", "[", 
        RowBox[{"1", ",", "3", ",", "1"}], "]"}]}], " ", "-", " ", 
      RowBox[{"Trivector", "[", "1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"m1", ".", "m2", " ", 
    RowBox[{"(*", 
     RowBox[{"//", " ", "TraditionalForm"}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.691875800491975*^9, 3.691875809658766*^9}, 
   3.701716189060936*^9},ExpressionUUID->"6f58300a-6240-42f5-b757-\
f44c81ed89cb"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.7017161905988626`*^9},ExpressionUUID->"702b8042-764a-471a-ab79-\
003cdfe91013"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(Manual) tests for grad, div, and curl.", "Subsection",
 CellChangeTimes->{{3.695297866361394*^9, 
  3.695297875439659*^9}},ExpressionUUID->"76cd59ea-2d49-4401-b314-\
e9644df732b6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "s", ",", "v", ",", "b", ",", "t", ",", "\[IndentingNewLine]", "grads", 
    ",", "\[IndentingNewLine]", "gradv", ",", " ", "curlv", ",", " ", "divv", 
    ",", "vcurlv", ",", "\[IndentingNewLine]", "gradb", ",", " ", "curlb", 
    ",", "divb", ",", "\[IndentingNewLine]", "gradt", ",", " ", "curlt", ",", 
    "divt", ",", "\[IndentingNewLine]", "x", ",", "y", ",", "z", ",", "f", 
    ",", "g", ",", "h"}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", " ", ":=", " ", 
   RowBox[{"Scalar", "[", 
    RowBox[{"g", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"grads", " ", "=", " ", 
    RowBox[{"Grad", "[", 
     RowBox[{"s", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", " ", ":=", " ", 
   RowBox[{
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", "1"}], "]"}], " ", "+", 
    
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", "2"}], "]"}], "+", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"h", "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", "3"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", " ", ":=", " ", 
   RowBox[{
    RowBox[{"Trivector", "[", "1", "]"}], " ", "v"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"t", " ", ":=", " ", 
    RowBox[{
     RowBox[{"Trivector", "[", "1", "]"}], " ", "s"}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gradv", ":=", 
   RowBox[{"Grad", "[", 
    RowBox[{"v", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"divv", " ", ":=", 
   RowBox[{"Div", "[", 
    RowBox[{"v", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"curlv", " ", ":=", 
   RowBox[{"Curl", "[", 
    RowBox[{"v", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vcurlv", " ", ":=", 
    RowBox[{"Vcurl", "[", 
     RowBox[{"v", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gradb", ":=", 
   RowBox[{"Grad", "[", 
    RowBox[{"b", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"divb", " ", ":=", 
   RowBox[{"Div", "[", 
    RowBox[{"b", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"curlb", " ", ":=", 
    RowBox[{"Curl", "[", 
     RowBox[{"b", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gradt", ":=", 
   RowBox[{"Grad", "[", 
    RowBox[{"t", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"divt", ":=", 
   RowBox[{"Div", "[", 
    RowBox[{"t", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"curlt", ":=", 
    RowBox[{"Curl", "[", 
     RowBox[{"t", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "//", "First"}], ",", " ", "\"\< = \>\"", ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", " ", "//", " ", "Last"}], ")"}], " ", "//", " ", 
        "DisplayForm"}]}], "}"}], " ", "&"}], "/@", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<s\>\"", ",", "s"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Del] s\>\"", ",", " ", "grads"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<v\>\"", ",", "v"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Del] v\>\"", ",", "gradv"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Del] \[CenterDot] v\>\"", ",", " ", "divv"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Del] \[Wedge] v\>\"", ",", "curlv"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Del] \[Cross] v\>\"", ",", "vcurlv"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<b\>\"", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Del] b\>\"", ",", "gradb"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Del] \[CenterDot] b\>\"", ",", " ", "divb"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Del] \[Wedge] b\>\"", ",", "curlb"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Del] t\>\"", ",", "gradt"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Del] \[CenterDot] t\>\"", ",", "divt"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Del] \[Wedge] t\>\"", ",", "curlt"}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], ")"}], " ", "//", " ", 
  "Grid"}]}], "Input",
 CellChangeTimes->{{3.6953091939869413`*^9, 
  3.6953092225253963`*^9}},ExpressionUUID->"9ec963a4-37ea-4ecb-b347-\
3304013f5dcb"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"s\"\>", "\<\" = \"\>", 
     RowBox[{"g", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}]},
    {"\<\"\[Del] s\"\>", "\<\" = \"\>", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "3"], " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "2"], " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "1"], " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}]},
    {"\<\"v\"\>", "\<\" = \"\>", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], " ", 
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "1"]}], "+", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], " ", 
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "2"]}], "+", 
      RowBox[{
       RowBox[{"h", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], " ", 
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "3"]}]}]},
    {"\<\"\[Del] v\"\>", "\<\" = \"\>", 
     RowBox[{
      RowBox[{
       SuperscriptBox["h", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}], "+", 
      RowBox[{
       SuperscriptBox["g", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"23\"\>"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["h", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"12\"\>"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SuperscriptBox["f", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"31\"\>"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["f", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "-", 
         RowBox[{
          SuperscriptBox["h", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}]}]},
    {"\<\"\[Del] \[CenterDot] v\"\>", "\<\" = \"\>", 
     RowBox[{
      RowBox[{
       SuperscriptBox["h", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}], "+", 
      RowBox[{
       SuperscriptBox["g", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}], "+", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]},
    {"\<\"\[Del] \[Wedge] v\"\>", "\<\" = \"\>", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"23\"\>"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["h", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"12\"\>"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SuperscriptBox["f", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"31\"\>"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["f", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "-", 
         RowBox[{
          SuperscriptBox["h", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}]}]},
    {"\<\"\[Del] \[Cross] v\"\>", "\<\" = \"\>", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "1"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["h", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SuperscriptBox["f", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["f", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "-", 
         RowBox[{
          SuperscriptBox["h", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}]}]},
    {"\<\"b\"\>", "\<\" = \"\>", 
     RowBox[{
      RowBox[{
       RowBox[{"h", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], " ", 
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"12\"\>"]}], "+", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], " ", 
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"23\"\>"]}], "+", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], " ", 
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"31\"\>"]}]}]},
    {"\<\"\[Del] b\"\>", "\<\" = \"\>", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "1"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "-", 
         RowBox[{
          SuperscriptBox["h", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"123\"\>"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["h", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "+", 
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "+", 
         RowBox[{
          SuperscriptBox["f", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["f", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "-", 
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SuperscriptBox["f", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["h", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}]}]},
    {"\<\"\[Del] \[CenterDot] b\"\>", "\<\" = \"\>", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "1"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "-", 
         RowBox[{
          SuperscriptBox["h", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["f", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "-", 
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SuperscriptBox["f", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["h", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}]}]},
    {"\<\"\[Del] \[Wedge] b\"\>", "\<\" = \"\>", 
     RowBox[{
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"123\"\>"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["h", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"x", ",", "y", ",", "z"}], "]"}], "+", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"x", ",", "y", ",", "z"}], "]"}], "+", 
        RowBox[{
         SuperscriptBox["f", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}]}]},
    {"\<\"t\"\>", "\<\" = \"\>", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}], " ", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"123\"\>"]}]},
    {"\<\"\[Del] t\"\>", "\<\" = \"\>", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"12\"\>"], " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"31\"\>"], " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"23\"\>"], " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}]},
    {"\<\"\[Del] \[CenterDot] t\"\>", "\<\" = \"\>", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"12\"\>"], " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"31\"\>"], " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"23\"\>"], " ", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}]},
    {"\<\"\[Del] \[Wedge] t\"\>", "\<\" = \"\>", 
     TagBox["0",
      DisplayForm]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.6952978536169853`*^9, 3.6953092274356537`*^9, 
  3.7017161959731607`*^9, 
  3.725578014118123*^9},ExpressionUUID->"f239f26e-5fdd-4b82-aa72-\
f889154bc95a"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7253692282309113`*^9, 3.725369236763974*^9}, 
   3.725578022818015*^9},ExpressionUUID->"6f11f211-cff2-403f-9b52-\
1378b63e294e"],

Cell["Unit test code for complex IsPossibleZeroQ extension.", "Text",
 CellChangeTimes->{{3.9039627644253807`*^9, 
  3.903962779904965*^9}},ExpressionUUID->"c6b172d7-9b89-4e89-a892-\
e408cb59dfc4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ClearAll", "[", 
       RowBox[{"a", ",", "b", ",", " ", "c", ",", " ", "d"}], "]"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "a"}], " ", "=", " ", 
     RowBox[{"3", " ", "e12"}]}], " ", ";", "\[IndentingNewLine]", 
    RowBox[{"b", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], " ", "e12"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"-", " ", "0.00001"}], " ", "e13"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"d", " ", "=", " ", 
     RowBox[{"3", " ", "+", " ", 
      RowBox[{"0.00003", " ", "e23"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"c", " ", "=", " ", 
     RowBox[{"a", " ", "**", " ", "b"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<a = \>\"", ",", " ", "a"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\"\<b = \>\"", ",", " ", "b"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\"\<c = \>\"", ",", " ", "c"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\"\<d = \>\"", ",", " ", "d"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\"\<a = \>\"", ",", " ", 
         RowBox[{"a", "//", " ", "FullForm"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\"\<b = \>\"", ",", " ", 
         RowBox[{"b", " ", "//", " ", "FullForm"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\"\<c = \>\"", ",", " ", 
         RowBox[{"c", " ", "//", " ", "FullForm"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\"\<d = \>\"", ",", " ", 
         RowBox[{"d", " ", "//", " ", "FullForm"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Assert", "[", " ", 
    RowBox[{"d", " ", "==", " ", "c"}], "]"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.903958318443799*^9, 3.9039585851793747`*^9}, 
   3.903958635240306*^9, {3.903958689404973*^9, 3.903958796139956*^9}, 
   3.9039627835299053`*^9},
 CellLabel->
  "In[106]:=",ExpressionUUID->"9458c0df-1c1b-40e7-a52b-7848542fbbaa"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "gad", "]"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"gad", "[", 
       RowBox[{"v_grade", ",", "how_"}], "]"}], ":=", 
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"AngleBracket", "[", 
                RowBox[{
                 RowBox[{"#", "//", "First"}], ",", "v"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "how", "]"}], "]"}]}], "}"}], "&"}], "/@", 
            "displayMapping"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a_", ",", "b_"}], "}"}], "/;", 
            RowBox[{"!", 
             RowBox[{"PossibleZeroQ", "[", "a", "]"}]}]}]}], "]"}], ")"}]}], 
       "\[IndentingNewLine]", "]"}]}], "*)"}], "\n", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"gad", "[", 
       RowBox[{"v_grade", ",", "how_"}], "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"AngleBracket", "[", 
              RowBox[{
               RowBox[{"#", "//", "First"}], ",", "v"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "how", "]"}], "]"}]}], "}"}], "&"}], "/@", 
          "displayMapping"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a_", ",", "b_"}], "}"}], "/;", 
          RowBox[{"!", 
           RowBox[{"PossibleZeroQ", "[", "a", "]"}]}]}]}], "]"}], ")"}]}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"gad", "[", "v_grade", "]"}]}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"AngleBracket", "[", 
          RowBox[{
           RowBox[{"#", "//", "First"}], ",", "v"}], "]"}], "//", " ", 
         "FullForm"}], ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
     "displayMapping"}], "\[IndentingNewLine]", 
    RowBox[{"gad", "[", "c", "]"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.903958940939649*^9, 3.9039590786515636`*^9}, {
   3.903959233404957*^9, 3.903959266977099*^9}, 3.90396279363142*^9},
 CellLabel->
  "In[107]:=",ExpressionUUID->"f0ecaf82-d350-4b48-b447-22de7a8bd87c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Unprotect", "[", "complex", "]"}], "\[IndentingNewLine]", 
     RowBox[{"complex", "/:", 
      RowBox[{"complex", "[", 
       RowBox[{"re_PossibleZeroQ", ",", "im_PossibleZeroQ"}], "]"}], ":=", 
      "0"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"complex", "/:", 
     RowBox[{"complex", "[", 
      RowBox[{"re_", ",", "im_PossibleZeroQ"}], "]"}], ":=", "re"}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Unprotect", "[", "PossibleZeroQ", "]"}], "\[IndentingNewLine]", 
      RowBox[{"PossibleZeroQ", "[", 
       RowBox[{"complex", "[", 
        RowBox[{
         RowBox[{"re_", "?", "PossibleZeroQ"}], ",", " ", 
         RowBox[{"im_", "?", "PossibleZeroQ"}]}], "]"}], "]"}]}], " ", ":=", 
     " ", "True"}], ";"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.903959198623163*^9, 3.903959212070004*^9}, {
   3.9039593628388557`*^9, 3.903959363061748*^9}, {3.903962382484268*^9, 
   3.903962438780204*^9}, {3.903962607255105*^9, 3.903962609650255*^9}, 
   3.903962797630817*^9},
 CellLabel->
  "In[108]:=",ExpressionUUID->"8c0898e7-0663-4421-834d-ae038c0cad13"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.903959288669939*^9, 3.90395929228638*^9}, 
   3.903962801801547*^9},
 CellLabel->
  "In[109]:=",ExpressionUUID->"7a2258b9-d372-4b40-83a8-c5193ee61131"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9039594070476627`*^9, 3.903959412300489*^9}, {
   3.9039624881008377`*^9, 3.9039624978353987`*^9}, 3.903962805297696*^9},
 CellLabel->
  "In[110]:=",ExpressionUUID->"7a4fa3bc-2447-48fd-9d5b-1b04fccc1ed6"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.903962512601776*^9, 3.903962513468112*^9}, 
   3.90396280817128*^9},
 CellLabel->
  "In[111]:=",ExpressionUUID->"a3069aba-423d-4071-a958-05cb076d028d"]
}, Open  ]]
},
WindowSize->{1440, 851},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification:>1.5 Inherited,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"cc417ff8-d363-451a-a457-44e5c17d8356"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 603, 15, 295, "Text",ExpressionUUID->"ad00b55f-7c01-40aa-ac6c-2a561783a060"],
Cell[CellGroupData[{
Cell[1186, 39, 5089, 123, 1597, "Input",ExpressionUUID->"dd68e078-9023-4718-8b06-c9a62096c345"],
Cell[6278, 164, 16446, 317, 2626, "Output",ExpressionUUID->"6b4d35df-5ec3-4e65-ad01-42312e3f7346"],
Cell[22727, 483, 10203, 255, 141, "Output",ExpressionUUID->"f89c569e-4c6a-44e5-ab4a-5f09522e9faa"],
Cell[32933, 740, 16390, 397, 141, "Output",ExpressionUUID->"543b55ca-7fbf-479a-ad63-38e0378a87ff"],
Cell[49326, 1139, 17731, 427, 141, "Output",ExpressionUUID->"29f786a2-7c1a-4316-b2dc-e70c8dcd1416"],
Cell[67060, 1568, 10487, 261, 141, "Output",ExpressionUUID->"465f05b0-3030-4d45-a1b9-74554945a71e"],
Cell[77550, 1831, 10298, 256, 141, "Output",ExpressionUUID->"31b49c4f-e868-4ffd-80fa-17d28c15e1c4"],
Cell[87851, 2089, 9892, 248, 141, "Output",ExpressionUUID->"2e888425-3aef-4716-b6d6-2b55e2c8971b"],
Cell[97746, 2339, 9892, 248, 141, "Output",ExpressionUUID->"012c1cf5-3e6e-4b12-ba33-ba6d5a089945"],
Cell[107641, 2589, 9921, 249, 141, "Output",ExpressionUUID->"4af70198-b84e-4144-925e-a6898d60b1fa"],
Cell[117565, 2840, 9932, 249, 141, "Output",ExpressionUUID->"913421dd-a7d7-4dd5-bc1f-c86828251f83"],
Cell[127500, 3091, 9905, 249, 141, "Output",ExpressionUUID->"0c1287b7-52b3-431f-be93-9bb90d670b18"],
Cell[137408, 3342, 9902, 248, 141, "Output",ExpressionUUID->"0fc054b2-387e-40fa-95ea-5e726262757d"],
Cell[147313, 3592, 9872, 249, 141, "Output",ExpressionUUID->"6eb62604-9785-4ebe-af01-420d346faea2"],
Cell[157188, 3843, 542, 12, 70, "Message",ExpressionUUID->"1ad7412b-d587-414c-b5aa-503eef7445eb"],
Cell[157733, 3857, 18403, 438, 176, "Output",ExpressionUUID->"f0235b8b-cec3-4908-a346-6558a08e65c5"],
Cell[176139, 4297, 12285, 292, 211, "Output",ExpressionUUID->"45602e02-8b9f-478e-9097-5eb442187602"],
Cell[188427, 4591, 10493, 259, 141, "Output",ExpressionUUID->"09c084e0-6cea-442e-8313-61c1aaa35d8b"],
Cell[198923, 4852, 10515, 259, 141, "Output",ExpressionUUID->"dcc1d1d0-f820-47f0-80f5-54682b559e71"],
Cell[209441, 5113, 10678, 262, 176, "Output",ExpressionUUID->"10f3d1f5-efaa-4cef-a61f-2fe5a525bd53"],
Cell[220122, 5377, 10442, 260, 141, "Output",ExpressionUUID->"02f9fc67-8b42-4999-b017-f00b130107b2"],
Cell[230567, 5639, 10675, 264, 158, "Output",ExpressionUUID->"24d1b1cc-d1ab-4d6f-9d30-36798ea65b05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241279, 5908, 177, 3, 81, "Subsection",ExpressionUUID->"577843da-0eb4-42e4-8529-6090e96b7a35"],
Cell[241459, 5913, 43010, 1221, 5338, "Input",ExpressionUUID->"e5bf2811-8a60-44c9-8350-8f7bd1ce8285"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284506, 7139, 232, 5, 81, "Subsection",ExpressionUUID->"6f56a442-56d1-4f37-bd74-195f8db78e3d"],
Cell[CellGroupData[{
Cell[284763, 7148, 14189, 348, 2775, "Input",ExpressionUUID->"fe91dae3-52fe-42a1-863c-4e085e62b74a"],
Cell[298955, 7498, 6917, 172, 177, "Output",ExpressionUUID->"2f317952-a9ad-4ce8-a141-572a9f6498d8"],
Cell[305875, 7672, 4772, 101, 183, "Output",ExpressionUUID->"09852304-7c58-4537-b2b4-5f553af18ed4"],
Cell[310650, 7775, 17858, 461, 209, "Output",ExpressionUUID->"70077ddf-0e21-495a-8b99-a0944aebdc9c"],
Cell[328511, 8238, 17172, 477, 209, "Output",ExpressionUUID->"c86c02d9-bfb1-4a3a-aeda-c2925ee3dbc1"],
Cell[345686, 8717, 15785, 447, 209, "Output",ExpressionUUID->"4f572d1c-ac87-41a5-b227-ffc869923726"],
Cell[361474, 9166, 15013, 384, 209, "Output",ExpressionUUID->"9ebb6eca-49ca-4a61-820e-45f874f40a59"],
Cell[376490, 9552, 4461, 123, 489, "Output",ExpressionUUID->"2e1c027c-8ceb-431e-a299-c8bb3e30a486"],
Cell[380954, 9677, 5198, 159, 501, "Output",ExpressionUUID->"66ddf71d-fed2-41bf-8504-2e4b8da7204c"],
Cell[386155, 9838, 4461, 123, 489, "Output",ExpressionUUID->"6d6beb62-95e0-4251-a81b-55709458c94b"],
Cell[390619, 9963, 5198, 159, 501, "Output",ExpressionUUID->"b5e8f3ee-be32-4296-b2e0-0f8207771d18"],
Cell[395820, 10124, 3058, 67, 505, "Output",ExpressionUUID->"d93092d0-acb4-43c8-9ab6-86e880ca8f60"]
}, Open  ]],
Cell[398893, 10194, 305, 7, 46, "Input",ExpressionUUID->"ccb5c879-3456-4105-a065-1f793045460e"],
Cell[CellGroupData[{
Cell[399223, 10205, 1433, 37, 202, "Input",ExpressionUUID->"6f58300a-6240-42f5-b757-f44c81ed89cb"],
Cell[400659, 10244, 132, 3, 52, "Output",ExpressionUUID->"702b8042-764a-471a-ab79-003cdfe91013"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[400840, 10253, 187, 3, 81, "Subsection",ExpressionUUID->"76cd59ea-2d49-4401-b314-e9644df732b6"],
Cell[CellGroupData[{
Cell[401052, 10260, 6247, 181, 1442, "Input",ExpressionUUID->"9ec963a4-37ea-4ecb-b347-3304013f5dcb"],
Cell[407302, 10443, 21272, 668, 669, "Output",ExpressionUUID->"f239f26e-5fdd-4b82-aa72-f889154bc95a"]
}, Open  ]],
Cell[428589, 11114, 177, 3, 46, "Input",ExpressionUUID->"6f11f211-cff2-403f-9b52-1378b63e294e"],
Cell[428769, 11119, 197, 3, 53, "Text",ExpressionUUID->"c6b172d7-9b89-4e89-a892-e408cb59dfc4"],
Cell[428969, 11124, 2484, 62, 667, "Input",ExpressionUUID->"9458c0df-1c1b-40e7-a52b-7848542fbbaa"],
Cell[431456, 11188, 2726, 78, 264, "Input",ExpressionUUID->"f0ecaf82-d350-4b48-b447-22de7a8bd87c"],
Cell[434185, 11268, 1221, 30, 171, "Input",ExpressionUUID->"8c0898e7-0663-4421-834d-ae038c0cad13"],
Cell[435409, 11300, 200, 4, 46, "Input",ExpressionUUID->"7a2258b9-d372-4b40-83a8-c5193ee61131"],
Cell[435612, 11306, 253, 4, 46, "Input",ExpressionUUID->"7a4fa3bc-2447-48fd-9d5b-1b04fccc1ed6"],
Cell[435868, 11312, 200, 4, 73, "Input",ExpressionUUID->"a3069aba-423d-4071-a958-05cb076d028d"]
}, Open  ]]
}
]
*)

