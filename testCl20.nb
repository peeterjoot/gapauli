(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    277350,       7017]
NotebookOptionsPosition[    273266,       6960]
NotebookOutlinePosition[    273692,       6977]
CellTagsIndexPosition[    273649,       6974]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
This notebook:

- displays the help for the Cl20 module, and its functions
- has a number of test cases.
- some manual tests that require visual verification.
\
\>", "Text",
 CellChangeTimes->{{3.691795964600712*^9, 3.691795975214867*^9}, {
   3.691796083626561*^9, 3.691796241126536*^9}, 3.6917964799818163`*^9, {
   3.691875939595688*^9, 3.691875941048305*^9}, {3.6918770691516314`*^9, 
   3.6918770692445993`*^9}, {3.6919525052697067`*^9, 3.691952512793326*^9}, {
   3.895776102411983*^9, 
   3.895776103038966*^9}},ExpressionUUID->"45ceca23-304a-4fb9-82ba-\
372933a8b95c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"<<", " ", "Cl20`"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"?", "Cl20"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"?", "grade"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"?", "Scalar"}], "\n", 
 RowBox[{"?", "Vector"}], "\n", 
 RowBox[{
  RowBox[{"?", "Bivector"}], "\n"}], "\n", 
 RowBox[{"?", "gradeQ"}], "\n", 
 RowBox[{"?", "scalarQ"}], "\n", 
 RowBox[{"?", "vectorQ"}], "\n", 
 RowBox[{
  RowBox[{"?", "bivectorQ"}], "\n"}], "\n", 
 RowBox[{"?", "bladeQ"}], "\n", 
 RowBox[{"?", "gradeAnyQ"}], "\n", 
 RowBox[{"?", "notGradeQ"}], "\n", 
 RowBox[{"?", "GradeSelection"}], "\n", 
 RowBox[{"?", "ScalarSelection"}], "\n", 
 RowBox[{"?", "VectorSelection"}], "\n", 
 RowBox[{
  RowBox[{"?", "BivectorSelection"}], "\n"}], "\n", 
 RowBox[{"?", "ScalarValue"}], "\n", 
 RowBox[{"?", "ScalarProduct"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"On", "[", "Assert", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "e0", ",", " ", "e1", ",", " ", "e2", ",", " ", "e12", ",", " ", "e21", 
    ",", " ", "m01", ",", " ", "m02", ",", " ", "m12", ",", " ", "m012"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e0", " ", "=", " ", 
   RowBox[{"Scalar", "[", "1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e1", " ", "=", " ", 
   RowBox[{"Vector", "[", 
    RowBox[{"1", ",", "1"}], "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e2", " ", "=", " ", 
   RowBox[{"Vector", "[", 
    RowBox[{"1", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e12", " ", "=", " ", 
   RowBox[{"Bivector", "[", "1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e21", " ", "=", " ", 
   RowBox[{"-", "e12"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m01", " ", "=", " ", 
   RowBox[{"e0", " ", "+", " ", "e1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m02", " ", "=", " ", 
   RowBox[{"e0", " ", "+", " ", "e21"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m12", " ", "=", " ", 
   RowBox[{"e1", " ", "+", " ", "e21"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m012", " ", "=", " ", 
    RowBox[{"e0", " ", "+", " ", "e1", " ", "+", " ", "e21"}]}], ";"}], 
  "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.691718294880554*^9, 3.691718295281008*^9}, {
   3.6917887255064077`*^9, 3.6917887259455748`*^9}, {3.691790620876504*^9, 
   3.691790621198758*^9}, {3.691790729000072*^9, 3.691790740993383*^9}, {
   3.691790896837412*^9, 3.691790897681327*^9}, 3.6917957960933*^9, {
   3.69187575260861*^9, 3.691875775083118*^9}, {3.691877071435698*^9, 
   3.691877256866488*^9}, {3.895776105344101*^9, 3.895776109316293*^9}, 
   3.895776600469754*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"36971f6a-0943-4dee-bce7-5d397b773d20"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Cl20: An implementation of Euclidean (CL(2,0)) \
Geometric Algebra.\\n\\nA pair of complex numbers are used to represent the \
algebraic elements.  This provides an efficient and compact \
representation\\nof the entire algebraic space.\\n\\nInternally, a \
multivector is represented by a triplet (grade, complex-odd, complex-even).  \
The grade portion will be\\nobliterated when adding objects that have \
different grade, or multiplying vectors or bivectors.  When\\nit is \
available, certain operations can be optimized.  Comparison ignores the \
cached grade if it exists.\\n\\nElements of the algebra can be constructed \
with one of\\n\\n   Scalar[ v ]\\n   Vector[ v, n ]\\n   Bivector[ v \
]\\n\\nExample:\\n\\n   m = Scalar[ Sin[ x ] ] + Vector[ Log[ z ], 3 ]\\n   m \
// StandardForm\\n\\n> e[ 3 ] Log[ z ] + Sin[ x ]\\n\\nA few operators are \
provided:\\n   ==         Compare two multivectors, ignoring the cached grade \
if any.\\n   m1 + m2\\n   m1 - m2\\n   - m\\n   st * vb    Scalars can \
multiply vectors and bivectors in any order\\n   vb1 ** vb1 Vectors and \
bivectors when multiplied have to use the NonCommutativeMultiply operator, \
but any grade object may also.\\n   m1 . m2    Dot product.  The functional \
form Dot[ m1, m2 ] may also be used.\\n   m1 ^ m2   Wedgeproduct.  Enter with \
m1 [ Esc ]^[ Esc ] m2.  The functional form Wedge[ m1, m2 ]\\n   <m>        \
Scalar selection.  Enter with [ Esc ]<[ Esc ] m [ Esc ]>[ Esc ].  The \
functional form ScalarValue[ m ] may also be used.  This returns the numeric \
(or expression) value of the scalar grade of the multivector, and not a \
grade[ ] object.\\n   <m1,m2>    Scalar product.  Enter with [ Esc ]<[ Esc ] \
m1,m2 [ Esc ]>[ Esc ].  The functional form ScalarProduct[ m1, m2 ] may also \
be used.  This returns the numeric (or expression) value of the scalar \
product of the multivectors, and not a grade[ ] object.\\n\\n   Functions \
provided:\\n\\n   - GradeSelection\\n   - ScalarSelection\\n   - \
VectorSelection\\n   - BivectorSelection\\n   - ScalarValue, < m >\\n   - \
ScalarProduct, < m1, m2 >\\n\\nThe following built-in methods are overridden:\
\\n\\n   - TraditionalForm\\n   - DisplayForm\\n   - StandardForm\\n   - \
TeXForm\\n\\nInternal functions:\\n\\n   - scalarQ\\n   - vectorQ\\n   - \
bivectorQ\\n   - bladeQ\\n   - gradeAnyQ\\n   - notGradeQ\\n\\nTODO:\\n\\n1) \
How to get better formatted output by default without using one of \
TraditionalForm, DisplayForm, StandardForm ?\\n\\n2) Can a package have \
options (i.e. to define the name of the e[ ] operator used in StandardForm \
that represents a basis vector).\\n\\n3) proper packaging stuff:  private for \
internals.\\n\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`Cl20\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Cl20: An implementation of Euclidean (CL(2,0)) \
Geometric Algebra.\\n\\nA pair of complex numbers are used to represent the \
algebraic elements.  This provides an efficient and compact \
representation\\nof the entire algebraic space.\\n\\nInternally, a \
multivector is represented by a triplet (grade, complex-odd, complex-even).  \
The grade portion will be\\nobliterated when adding objects that have \
different grade, or multiplying vectors or bivectors.  When\\nit is \
available, certain operations can be optimized.  Comparison ignores the \
cached grade if it exists.\\n\\nElements of the algebra can be constructed \
with one of\\n\\n   Scalar[ v ]\\n   Vector[ v, n ]\\n   Bivector[ v \
]\\n\\nExample:\\n\\n   m = Scalar[ Sin[ x ] ] + Vector[ Log[ z ], 3 ]\\n   m \
// StandardForm\\n\\n> e[ 3 ] Log[ z ] + Sin[ x ]\\n\\nA few operators are \
provided:\\n   ==         Compare two multivectors, ignoring the cached grade \
if any.\\n   m1 + m2\\n   m1 - m2\\n   - m\\n   st * vb    Scalars can \
multiply vectors and bivectors in any order\\n   vb1 ** vb1 Vectors and \
bivectors when multiplied have to use the NonCommutativeMultiply operator, \
but any grade object may also.\\n   m1 . m2    Dot product.  The functional \
form Dot[ m1, m2 ] may also be used.\\n   m1 ^ m2   Wedgeproduct.  Enter with \
m1 [ Esc ]^[ Esc ] m2.  The functional form Wedge[ m1, m2 ]\\n   <m>        \
Scalar selection.  Enter with [ Esc ]<[ Esc ] m [ Esc ]>[ Esc ].  The \
functional form ScalarValue[ m ] may also be used.  This returns the numeric \
(or expression) value of the scalar grade of the multivector, and not a \
grade[ ] object.\\n   <m1,m2>    Scalar product.  Enter with [ Esc ]<[ Esc ] \
m1,m2 [ Esc ]>[ Esc ].  The functional form ScalarProduct[ m1, m2 ] may also \
be used.  This returns the numeric (or expression) value of the scalar \
product of the multivectors, and not a grade[ ] object.\\n\\n   Functions \
provided:\\n\\n   - GradeSelection\\n   - ScalarSelection\\n   - \
VectorSelection\\n   - BivectorSelection\\n   - ScalarValue, < m >\\n   - \
ScalarProduct, < m1, m2 >\\n\\nThe following built-in methods are overridden:\
\\n\\n   - TraditionalForm\\n   - DisplayForm\\n   - StandardForm\\n   - \
TeXForm\\n\\nInternal functions:\\n\\n   - scalarQ\\n   - vectorQ\\n   - \
bivectorQ\\n   - bladeQ\\n   - gradeAnyQ\\n   - notGradeQ\\n\\nTODO:\\n\\n1) \
How to get better formatted output by default without using one of \
TraditionalForm, DisplayForm, StandardForm ?\\n\\n2) Can a package have \
options (i.e. to define the name of the e[ ] operator used in StandardForm \
that represents a basis vector).\\n\\n3) proper packaging stuff:  private for \
internals.\\n\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Cl20: An implementation of Euclidean (CL(2,0)) Geometric Algebra.\n\nA \
pair of complex numbers are used to represent the algebraic elements.  This \
provides an efficient and compact representation\nof the entire algebraic \
space.\n\nInternally, a multivector is represented by a triplet (grade, \
complex-odd, complex-even).  The grade portion will be\nobliterated when \
adding objects that have different grade, or multiplying vectors or \
bivectors.  When\nit is available, certain operations can be optimized.  \
Comparison ignores the cached grade if it exists.\n\nElements of the algebra \
can be constructed with one of\n\n   Scalar[ v ]\n   Vector[ v, n ]\n   \
Bivector[ v ]\n\nExample:\n\n   m = Scalar[ Sin[ x ] ] + Vector[ Log[ z ], 3 \
]\n   m // StandardForm\n\n> e[ 3 ] Log[ z ] + Sin[ x ]\n\nA few operators \
are provided:\n   ==         Compare two multivectors, ignoring the cached \
grade if any.\n   m1 + m2\n   m1 - m2\n   - m\n   st * vb    Scalars can \
multiply vectors and bivectors in any order\n   vb1 ** vb1 Vectors and \
bivectors when multiplied have to use the NonCommutativeMultiply operator, \
but any grade object may also.\n   m1 . m2    Dot product.  The functional \
form Dot[ m1, m2 ] may also be used.\n   m1 ^ m2   Wedgeproduct.  Enter with \
m1 [ Esc ]^[ Esc ] m2.  The functional form Wedge[ m1, m2 ]\n   <m>        \
Scalar selection.  Enter with [ Esc ]<[ Esc ] m [ Esc ]>[ Esc ].  The \
functional form ScalarValue[ m ] may also be used.  This returns the numeric \
(or expression) value of the scalar grade of the multivector, and not a \
grade[ ] object.\n   <m1,m2>    Scalar product.  Enter with [ Esc ]<[ Esc ] \
m1,m2 [ Esc ]>[ Esc ].  The functional form ScalarProduct[ m1, m2 ] may also \
be used.  This returns the numeric (or expression) value of the scalar \
product of the multivectors, and not a grade[ ] object.\n\n   Functions \
provided:\n\n   - GradeSelection\n   - ScalarSelection\n   - VectorSelection\n\
   - BivectorSelection\n   - ScalarValue, < m >\n   - ScalarProduct, < m1, m2 \
>\n\nThe following built-in methods are overridden:\n\n   - TraditionalForm\n \
  - DisplayForm\n   - StandardForm\n   - TeXForm\n\nInternal functions:\n\n   \
- scalarQ\n   - vectorQ\n   - bivectorQ\n   - bladeQ\n   - gradeAnyQ\n   - \
notGradeQ\n\nTODO:\n\n1) How to get better formatted output by default \
without using one of TraditionalForm, DisplayForm, StandardForm ?\n\n2) Can a \
package have options (i.e. to define the name of the e[ ] operator used in \
StandardForm that represents a basis vector).\n\n3) proper packaging stuff:  \
private for internals.\n", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Cl20`Cl20"|>, 
   False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.895789491632577*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"70ce4207-eeb8-4083-bf31-042ddefe711c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Scalar[ v ] constructs a scalar grade quantity with \
value v.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"Scalar", "[", "Cl20`Private`v_", "]"}], ":=", 
                    "Cl20`Private`v"}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`Scalar\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Scalar[ v ] constructs a scalar grade quantity with \
value v.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Scalar[ v ] constructs a scalar grade quantity with value v.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, Cl20`Scalar, {Cl20`Scalar[
         Pattern[Cl20`Private`v, 
          Blank[]]] :> Cl20`grade[0, 
         Cl20`complex[Cl20`Private`v, 0], Cl20`Private`complex0]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "Cl20`Scalar"|>, False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.895789491697482*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"b8627da5-a6b4-42bd-8923-ee197e41919f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Vector[ v, n ], where n = {1,2} constructs a vector \
grade quantity with value v in direction n.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"Vector", "[", 
                    RowBox[{"Cl20`Private`v_", ",", 
                    RowBox[{"Cl20`Private`k_Integer", "/;", 
                    RowBox[{"Cl20`Private`k", "\[Equal]", "1"}]}]}], "]"}], 
                    ":=", 
                    RowBox[{"Cl20`Private`v", " ", 
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "1"]}]}]}, {" "}, {
                   
                    RowBox[{
                    RowBox[{"Vector", "[", 
                    RowBox[{"Cl20`Private`v_", ",", 
                    RowBox[{"Cl20`Private`k_Integer", "/;", 
                    RowBox[{"Cl20`Private`k", "\[Equal]", "2"}]}]}], "]"}], 
                    ":=", 
                    RowBox[{"Cl20`Private`v", " ", 
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "2"]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`Vector\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Vector[ v, n ], where n = {1,2} constructs a vector \
grade quantity with value v in direction n.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Vector[ v, n ], where n = {1,2} constructs a vector grade quantity with \
value v in direction n.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[DownValues, Cl20`Vector, {Cl20`Vector[
         Pattern[Cl20`Private`v, 
          Blank[]], 
         Condition[
          Pattern[Cl20`Private`k, 
           Blank[Integer]], Cl20`Private`k == 1]] :> 
       Cl20`grade[1, Cl20`Private`complex0, 
         Cl20`complex[Cl20`Private`v, 0]], Cl20`Vector[
         Pattern[Cl20`Private`v, 
          Blank[]], 
         Condition[
          Pattern[Cl20`Private`k, 
           Blank[Integer]], Cl20`Private`k == 2]] :> 
       Cl20`grade[1, Cl20`Private`complex0, 
         Cl20`complex[0, Cl20`Private`v]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "Cl20`Vector"|>, False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.895789491767702*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"729bd9f6-358c-43a6-aefb-c9ebb9ca14bb"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Bivector[ v ], constructs a bivector grade quantity \
with value v in the plane e1,e2.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"Bivector", "[", "Cl20`Private`v_", "]"}], ":=", 
                    RowBox[{"Cl20`Private`v", " ", 
                    SubscriptBox[
                    RowBox[{"Style", "[", 
                    RowBox[{"\"e\"", ",", "Bold"}], "]"}], "\"12\""]}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`Bivector\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Bivector[ v ], constructs a bivector grade quantity \
with value v in the plane e1,e2.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Bivector[ v ], constructs a bivector grade quantity with value v in the \
plane e1,e2.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[DownValues, Cl20`Bivector, {Cl20`Bivector[
         Pattern[Cl20`Private`v, 
          Blank[]]] :> Cl20`grade[2, 
         Cl20`complex[0, Cl20`Private`v], Cl20`Private`complex0]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "Cl20`Bivector"|>, False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.895789491834427*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"15e7de01-e974-4b10-9617-e2d91230d907"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"gradeQ[ m, n ] tests if the multivector m is of \
grade n.  n = -1 is used internally to represent values of more than one \
grade.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"gradeQ", "[", 
                    
                    RowBox[{
                    "Cl20`Private`m_grade", ",", "Cl20`Private`n_Integer"}], 
                    "]"}], ":=", 
                    RowBox[{
                    RowBox[{"First", "[", "Cl20`Private`m", "]"}], "\[Equal]",
                     "Cl20`Private`n"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`gradeQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"gradeQ[ m, n ] tests if the multivector m is of \
grade n.  n = -1 is used internally to represent values of more than one \
grade.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "gradeQ[ m, n ] tests if the multivector m is of grade n.  n = -1 is used \
internally to represent values of more than one grade.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[DownValues, Cl20`gradeQ, {Cl20`gradeQ[
         Pattern[Cl20`Private`m, 
          Blank[Cl20`grade]], 
         Pattern[Cl20`Private`n, 
          Blank[Integer]]] :> First[Cl20`Private`m] == Cl20`Private`n}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Cl20`gradeQ"|>, False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.8957894919007998`*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"9b40bbcf-565f-4350-aeb4-3a71315b19f6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"scalarQ[ m ] tests if the multivector m is of grade \
0 (scalar)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"scalarQ", "[", "Cl20`Private`m_grade", "]"}], 
                    ":=", 
                    RowBox[{"gradeQ", "[", 
                    RowBox[{"Cl20`Private`m", ",", "0"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`scalarQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"scalarQ[ m ] tests if the multivector m is of grade \
0 (scalar)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "scalarQ[ m ] tests if the multivector m is of grade 0 (scalar)", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, Cl20`scalarQ, {Cl20`scalarQ[
         Pattern[Cl20`Private`m, 
          Blank[Cl20`grade]]] :> Cl20`gradeQ[Cl20`Private`m, 0]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Cl20`scalarQ"|>, False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.895789491965783*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"b34f7d2f-bbf2-4267-a1c2-f8113c6499aa"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"vectorQ[ m ] tests if the multivector m is of grade \
1 (vector)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"vectorQ", "[", "Cl20`Private`m_grade", "]"}], 
                    ":=", 
                    RowBox[{"gradeQ", "[", 
                    RowBox[{"Cl20`Private`m", ",", "1"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`vectorQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"vectorQ[ m ] tests if the multivector m is of grade \
1 (vector)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "vectorQ[ m ] tests if the multivector m is of grade 1 (vector)", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, Cl20`vectorQ, {Cl20`vectorQ[
         Pattern[Cl20`Private`m, 
          Blank[Cl20`grade]]] :> Cl20`gradeQ[Cl20`Private`m, 1]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Cl20`vectorQ"|>, False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.895789492032631*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"1aa8cb39-0859-46f6-ba9b-2d79b2cdbd66"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"bivectorQ[ m ] tests if the multivector m is of \
grade 2 (bivector)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"bivectorQ", "[", "Cl20`Private`m_grade", "]"}], 
                    ":=", 
                    RowBox[{"gradeQ", "[", 
                    RowBox[{"Cl20`Private`m", ",", "2"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`bivectorQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"bivectorQ[ m ] tests if the multivector m is of \
grade 2 (bivector)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "bivectorQ[ m ] tests if the multivector m is of grade 2 (bivector)", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Cl20`bivectorQ, {Cl20`bivectorQ[
         Pattern[Cl20`Private`m, 
          Blank[Cl20`grade]]] :> Cl20`gradeQ[Cl20`Private`m, 2]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Cl20`bivectorQ"|>, False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.895789492100966*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"bd7452ab-72d3-4ee5-ba95-6d04c498b94f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"bladeQ[ m ] tests if the multivector is of a single \
grade.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"bladeQ", "[", "Cl20`Private`m_grade", "]"}], 
                    ":=", 
                    RowBox[{
                    RowBox[{"First", "[", "Cl20`Private`m", "]"}], 
                    "\[GreaterEqual]", "0"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`bladeQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"bladeQ[ m ] tests if the multivector is of a single \
grade.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "bladeQ[ m ] tests if the multivector is of a single grade.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, Cl20`bladeQ, {Cl20`bladeQ[
         Pattern[Cl20`Private`m, 
          Blank[Cl20`grade]]] :> First[Cl20`Private`m] >= 0}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Cl20`bladeQ"|>, 
   False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.895789492167931*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"3d0b3d7b-c4ef-46af-925b-bdcc51e571ec"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"gradeAnyQ[ ].  predicate pattern match for grade[ _ \
]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"gradeAnyQ", "[", "Cl20`Private`m_grade", "]"}], 
                    ":=", "True"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"gradeAnyQ", "[", "_", "]"}], ":=", "False"}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`gradeAnyQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"gradeAnyQ[ ].  predicate pattern match for grade[ _ \
]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "gradeAnyQ[ ].  predicate pattern match for grade[ _ ]", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Cl20`gradeAnyQ, {Cl20`gradeAnyQ[
         Pattern[Cl20`Private`m, 
          Blank[Cl20`grade]]] :> True, Cl20`gradeAnyQ[
         Blank[]] :> False}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Cl20`gradeAnyQ"|>, False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.895789492236044*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"392b2468-25b4-406f-b37b-7b9abab729aa"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"notGradeQ[ ].  predicate pattern match for !grade[ \
]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"notGradeQ", "[", "Cl20`Private`v_", "]"}], ":=", 
                    
                    RowBox[{"!", 
                    RowBox[{"gradeAnyQ", "[", "Cl20`Private`v", "]"}]}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`notGradeQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"notGradeQ[ ].  predicate pattern match for !grade[ \
]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "notGradeQ[ ].  predicate pattern match for !grade[ ]", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Cl20`notGradeQ, {Cl20`notGradeQ[
         Pattern[Cl20`Private`v, 
          Blank[]]] :> Not[
         Cl20`gradeAnyQ[Cl20`Private`v]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Cl20`notGradeQ"|>, 
   False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.895789492327636*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"681f82b5-d2eb-49c7-b3ca-6f9f9f206e48"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GradeSelection[ m, k ] selects the grade k elements \
from the multivector m.  The selected result is represented internally as a \
grade[ ] type (so scalar selection is not just a number).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{
                    RowBox[{"Cl20`Private`m_", "?", "scalarQ"}], ",", "0"}], 
                    "]"}], ":=", "Cl20`Private`m"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{
                    RowBox[{"Cl20`Private`m_", "?", "vectorQ"}], ",", "1"}], 
                    "]"}], ":=", "Cl20`Private`m"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{
                    RowBox[{"Cl20`Private`m_", "?", "bivectorQ"}], ",", "2"}],
                     "]"}], ":=", "Cl20`Private`m"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{"Cl20`Private`m_", ",", 
                    RowBox[{"Cl20`Private`k_Integer", "/;", 
                    RowBox[{
                    RowBox[{"Cl20`Private`k", "\[GreaterEqual]", "0"}], "&&", 
                    
                    RowBox[{"Cl20`Private`k", "\[LessEqual]", "2"}]}]}]}], 
                    "]"}], ":=", 
                    RowBox[{"gradeSelect", "[", 
                    RowBox[{"Cl20`Private`m", ",", "Cl20`Private`k"}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`GradeSelection\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GradeSelection[ m, k ] selects the grade k elements \
from the multivector m.  The selected result is represented internally as a \
grade[ ] type (so scalar selection is not just a number).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "GradeSelection[ m, k ] selects the grade k elements from the multivector \
m.  The selected result is represented internally as a grade[ ] type (so \
scalar selection is not just a number).", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Cl20`GradeSelection, {Cl20`GradeSelection[
         PatternTest[
          Pattern[Cl20`Private`m, 
           Blank[]], Cl20`scalarQ], 0] :> Cl20`Private`m, 
       Cl20`GradeSelection[
         PatternTest[
          Pattern[Cl20`Private`m, 
           Blank[]], Cl20`vectorQ], 1] :> Cl20`Private`m, 
       Cl20`GradeSelection[
         PatternTest[
          Pattern[Cl20`Private`m, 
           Blank[]], Cl20`bivectorQ], 2] :> Cl20`Private`m, 
       Cl20`GradeSelection[
         Pattern[Cl20`Private`m, 
          Blank[]], 
         Condition[
          Pattern[Cl20`Private`k, 
           Blank[Integer]], 
          And[Cl20`Private`k >= 0, Cl20`Private`k <= 2]]] :> 
       Cl20`gradeSelect[Cl20`Private`m, Cl20`Private`k]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "Cl20`GradeSelection"|>, False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.895789492395697*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"7056b6d7-995b-4793-9a45-acd56b40ce19"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarSelection[ m ] selects the grade 0 (scalar) \
elements from the multivector m.  The selected result is represented \
internally as a grade[ ] type (not just a number or an expression).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"ScalarSelection", ":=", 
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{"#1", ",", "0"}], "]"}], "&"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`ScalarSelection\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarSelection[ m ] selects the grade 0 (scalar) \
elements from the multivector m.  The selected result is represented \
internally as a grade[ ] type (not just a number or an expression).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "ScalarSelection[ m ] selects the grade 0 (scalar) elements from the \
multivector m.  The selected result is represented internally as a grade[ ] \
type (not just a number or an expression).", "Documentation" -> None, 
    "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, Cl20`ScalarSelection, {
      Cl20`ScalarSelection :> (Cl20`GradeSelection[#, 0]& )}], "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected}, "FullName" -> "Cl20`ScalarSelection"|>, 
   False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.895789492461851*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"c631372f-0aaa-48d5-a321-3af94f772588"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"VectorSelection[ m ] selects the grade 1 (vector) \
elements from the multivector m.  The selected result is represented \
internally as a grade[ ] type.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"VectorSelection", ":=", 
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{"#1", ",", "1"}], "]"}], "&"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`VectorSelection\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"VectorSelection[ m ] selects the grade 1 (vector) \
elements from the multivector m.  The selected result is represented \
internally as a grade[ ] type.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "VectorSelection[ m ] selects the grade 1 (vector) elements from the \
multivector m.  The selected result is represented internally as a grade[ ] \
type.", "Documentation" -> None, "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, Cl20`VectorSelection, {
      Cl20`VectorSelection :> (Cl20`GradeSelection[#, 1]& )}], "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected}, "FullName" -> "Cl20`VectorSelection"|>, 
   False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.895789492529962*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"401f24e6-e991-40b9-8c26-3a709a558a34"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"BivectorSelection[ m ] selects the grade 2 \
(bivector) elements from the multivector m.  The selected result is \
represented internally as a grade[ ] type.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"BivectorSelection", ":=", 
                    RowBox[{
                    RowBox[{"GradeSelection", "[", 
                    RowBox[{"#1", ",", "2"}], "]"}], "&"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`BivectorSelection\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"BivectorSelection[ m ] selects the grade 2 \
(bivector) elements from the multivector m.  The selected result is \
represented internally as a grade[ ] type.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "BivectorSelection[ m ] selects the grade 2 (bivector) elements from the \
multivector m.  The selected result is represented internally as a grade[ ] \
type.", "Documentation" -> None, "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, Cl20`BivectorSelection, {
      Cl20`BivectorSelection :> (Cl20`GradeSelection[#, 2]& )}], "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected}, "FullName" -> "Cl20`BivectorSelection"|>, 
   False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.895789492596959*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"361f66a9-742a-4a56-aad3-4cdf7f245d59"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarValue[ m ].  Same as AngleBracket[ m ], aka [ \
Esc ]<[ Esc ] m1 [ Esc ]>[ Esc ].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"ScalarValue", "[", "Cl20`Private`m_grade", "]"}],
                     ":=", 
                    
                    RowBox[{
                    "\[LeftAngleBracket]", "Cl20`Private`m", 
                    "\[RightAngleBracket]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`ScalarValue\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarValue[ m ].  Same as AngleBracket[ m ], aka [ \
Esc ]<[ Esc ] m1 [ Esc ]>[ Esc ].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "ScalarValue[ m ].  Same as AngleBracket[ m ], aka [ Esc ]<[ Esc ] m1 [ \
Esc ]>[ Esc ].", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Cl20`ScalarValue, {Cl20`ScalarValue[
         Pattern[Cl20`Private`m, 
          Blank[Cl20`grade]]] :> AngleBracket[Cl20`Private`m]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "Cl20`ScalarValue"|>, False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.895789492663919*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"6a9e9cc4-368f-49ed-86c9-b5119a0025fc"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarProduct[ ].  Same as AngleBracket[ m1, m2 ], \
aka [ Esc ]<[ Esc ] m1, m2 [ Esc ]>[ Esc ].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"ScalarProduct", "[", 
                    
                    RowBox[{
                    "Cl20`Private`m1_grade", ",", "Cl20`Private`m2_grade"}], 
                    "]"}], ":=", 
                    RowBox[{"\[LeftAngleBracket]", 
                    RowBox[{"Cl20`Private`m1", ",", "Cl20`Private`m2"}], 
                    "\[RightAngleBracket]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Cl20`ScalarProduct\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ScalarProduct[ ].  Same as AngleBracket[ m1, m2 ], \
aka [ Esc ]<[ Esc ] m1, m2 [ Esc ]>[ Esc ].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "ScalarProduct[ ].  Same as AngleBracket[ m1, m2 ], aka [ Esc ]<[ Esc ] \
m1, m2 [ Esc ]>[ Esc ].", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Cl20`ScalarProduct, {Cl20`ScalarProduct[
         Pattern[Cl20`Private`m1, 
          Blank[Cl20`grade]], 
         Pattern[Cl20`Private`m2, 
          Blank[Cl20`grade]]] :> 
       AngleBracket[Cl20`Private`m1, Cl20`Private`m2]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "Cl20`ScalarProduct"|>, False]]], "Output",
 CellChangeTimes->{
  3.895776152816761*^9, 3.895776852944017*^9, 3.895777296812283*^9, 
   3.895777383541193*^9, 3.895778347293666*^9, 3.895785625680094*^9, 
   3.895785682322836*^9, 3.895786391024249*^9, 3.8957870855322533`*^9, 
   3.895787631411962*^9, {3.8957894486445427`*^9, 3.895789492731196*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"96257828-75a3-439c-bafd-789cf75b7321"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Predicate", " ", "tests"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Assert", "[", 
        RowBox[{"bladeQ", "[", "#", "]"}], "]"}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e0", ",", "e1", ",", "e2", ",", "e12"}], "}"}]}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Assert", "[", 
        RowBox[{"!", 
         RowBox[{"bladeQ", "[", "#", "]"}]}], "]"}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"m01", ",", "m02", ",", "m12", ",", "m012"}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Assert", "[", 
        RowBox[{"gradeAnyQ", "[", "#", "]"}], "]"}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", "m12", ",", 
       "m012"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Assert", "[", 
        RowBox[{"!", 
         RowBox[{"gradeAnyQ", "[", "#", "]"}]}], "]"}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"Sin", "[", "x", "]"}], ",", 
       RowBox[{"Exp", "[", 
        RowBox[{"I", " ", "theta"}], "]"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Assert", "[", 
        RowBox[{"!", 
         RowBox[{"notGradeQ", "[", "#", "]"}]}], "]"}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "e0", ",", "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", 
       "m12", ",", "m012"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Assert", "[", 
        RowBox[{"notGradeQ", "[", "#", "]"}], "]"}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"Sin", "[", "x", "]"}], ",", 
       RowBox[{"Exp", "[", 
        RowBox[{"I", " ", "theta"}], "]"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{"gradeQ", "[", 
          RowBox[{"#", ",", "0"}], "]"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{"scalarQ", "[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", "e0", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{"!", 
          RowBox[{"gradeQ", "[", 
           RowBox[{"#", ",", "0"}], "]"}]}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{"!", 
          RowBox[{"scalarQ", "[", "#", "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", "m12", ",", 
       "m012"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{"gradeQ", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{"vectorQ", "[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e1", ",", "e2"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{"!", 
          RowBox[{"gradeQ", "[", 
           RowBox[{"#", ",", "1"}], "]"}]}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{"!", 
          RowBox[{"vectorQ", "[", "#", "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "e0", ",", "e12", ",", "m01", ",", "m02", ",", "m12", ",", "m012"}], 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{"gradeQ", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{"bivectorQ", "[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", "e12", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{"!", 
          RowBox[{"gradeQ", "[", 
           RowBox[{"#", ",", "2"}], "]"}]}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{"!", 
          RowBox[{"bivectorQ", "[", "#", "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "e0", ",", "e1", ",", "e2", ",", "m01", ",", "m02", ",", "m12", ",", 
       "m012"}], "}"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Assert", "[", 
        RowBox[{"gradeQ", "[", 
         RowBox[{"#", ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"m01", ",", "m02", ",", "m12", ",", "m012"}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Assert", "[", 
        RowBox[{"!", 
         RowBox[{"gradeQ", "[", 
          RowBox[{"#", ",", 
           RowBox[{"-", "1"}]}], "]"}]}], "]"}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e0", ",", "e1", ",", "e2", ",", "e12"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Grade", " ", "selection", " ", 
     RowBox[{"tests", "."}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"GradeSelection", "[", 
           RowBox[{"#", ",", "0"}], "]"}], "\[Equal]", "e0"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"ScalarSelection", "[", "#", "]"}], "\[Equal]", "e0"}], 
         "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e0", ",", "m01", ",", "m02", ",", "m012"}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"GradeSelection", "[", 
           RowBox[{"#", ",", "0"}], "]"}], "\[Equal]", "0"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"ScalarSelection", "[", "#", "]"}], "\[Equal]", "0"}], 
         "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e1", ",", "e2", ",", "e12", ",", "m12"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"GradeSelection", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "\[Equal]", "e1"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"VectorSelection", "[", "#", "]"}], "\[Equal]", "e1"}], 
         "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e1", ",", "m01", ",", "m12", ",", "m012"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"GradeSelection", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "\[Equal]", "0"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"VectorSelection", "[", "#", "]"}], "\[Equal]", "0"}], 
         "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e0", ",", "e12", ",", "m02"}], "}"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"GradeSelection", "[", 
           RowBox[{"#", ",", "2"}], "]"}], "\[Equal]", "e21"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"BivectorSelection", "[", "#", "]"}], "\[Equal]", "e21"}], 
         "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e21", ",", "m02", ",", "m12", ",", "m012"}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"GradeSelection", "[", 
           RowBox[{"#", ",", "2"}], "]"}], "\[Equal]", "0"}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{"BivectorSelection", "[", "#", "]"}], "\[Equal]", "0"}], 
         "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"e0", ",", "e1", ",", "e2", ",", "m01"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Minus", " ", "tests"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"-", "e0"}], "\[Equal]", 
      RowBox[{"Scalar", "[", 
       RowBox[{"-", "1"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"-", "e1"}], "\[Equal]", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"-", "e2"}], "\[Equal]", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "2"}], "]"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"-", "e12"}], "\[Equal]", 
      RowBox[{"Bivector", "[", 
       RowBox[{"-", "1"}], "]"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"-", "m01"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "e0"}], "-", "e1"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"-", "m02"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "e0"}], "-", "e21"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"-", "m12"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "e1"}], "-", "e21"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"-", "m012"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "e0"}], "-", "e1", "-", "e21"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Scalar", "/", "Pseudoscalar"}], " ", "multiplication", " ", 
     "tests"}], "*)"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}]}], "\[Equal]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}]}], "\[Equal]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], "**", 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}]}], "\[Equal]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}], "**", 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}]}], "\[Equal]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"e0", ",", "e0", ",", 
         RowBox[{"Scalar", "[", "1", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e0", ",", "e1", ",", 
         RowBox[{"Vector", "[", 
          RowBox[{"1", ",", "1"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e0", ",", "e2", ",", 
         RowBox[{"Vector", "[", 
          RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e0", ",", "e12", ",", 
         RowBox[{"Bivector", "[", "1", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e0", ",", "m01", ",", 
         RowBox[{"e0", "+", "e1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e0", ",", "m02", ",", 
         RowBox[{"e0", "+", "e21"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e0", ",", "m12", ",", 
         RowBox[{"e1", "+", "e21"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e0", ",", "m012", ",", 
         RowBox[{"e0", "+", "e1", "+", "e21"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}]}], "\[Equal]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"Assert", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}]}], "\[Equal]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "e0", ",", 
         RowBox[{"Scalar", "[", "2", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "e1", ",", 
         RowBox[{"Vector", "[", 
          RowBox[{"2", ",", "1"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "e2", ",", 
         RowBox[{"Vector", "[", 
          RowBox[{"2", ",", "2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "e12", ",", 
         RowBox[{"Bivector", "[", "2", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "m01", ",", 
         RowBox[{
          RowBox[{"2", " ", "e0"}], "+", 
          RowBox[{"2", " ", "e1"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "m02", ",", 
         RowBox[{
          RowBox[{"2", " ", "e0"}], "+", 
          RowBox[{"2", " ", "e21"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "m12", ",", 
         RowBox[{
          RowBox[{"2", " ", "e1"}], "+", 
          RowBox[{"2", " ", "e21"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "m012", ",", 
         RowBox[{
          RowBox[{"2", " ", "e0"}], "+", 
          RowBox[{"2", " ", "e1"}], "+", 
          RowBox[{"2", " ", "e21"}]}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Tests", " ", "for", " ", 
      RowBox[{"(", 
       RowBox[{"non", "-", "commutitive"}], ")"}], " ", "multiplication"}], 
     ",", " ", 
     RowBox[{"dot", " ", "and", " ", 
      RowBox[{"wedge", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", " ", 
     RowBox[{
     "mbasis", ",", " ", "ptable", ",", " ", "dtable", ",", " ", "wtable", 
      ",", " ", "stable"}], " ", "]"}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mbasis", "=", 
     RowBox[{"{", 
      RowBox[{"e1", ",", "e2", ",", "e12"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"ptable", "=", 
     RowBox[{"(*", 
      RowBox[{"e1", ",", "e2", ",", "e12"}], "*)"}], 
     RowBox[{"(*", "e1", "*)"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"e0", ",", "e12", ",", "e2"}], "}"}], ",", 
       RowBox[{"(*", "e2", "*)"}], 
       RowBox[{"{", 
        RowBox[{"e21", ",", "e0", ",", 
         RowBox[{"-", "e1"}]}], "}"}], ",", 
       RowBox[{"(*", "e12", "*)"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "e2"}], ",", "e1", ",", 
         RowBox[{"-", "e0"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"dtable", "=", 
     RowBox[{"(*", 
      RowBox[{"e1", ",", "e2", ",", "e12"}], "*)"}], 
     RowBox[{"(*", "e1", "*)"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"e0", ",", "0", ",", "e2"}], "}"}], ",", 
       RowBox[{"(*", "e2", "*)"}], 
       RowBox[{"{", 
        RowBox[{"0", ",", "e0", ",", 
         RowBox[{"-", "e1"}]}], "}"}], ",", 
       RowBox[{"(*", "e12", "*)"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "e2"}], ",", "e1", ",", 
         RowBox[{"-", "e0"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wtable", "=", 
     RowBox[{"(*", 
      RowBox[{"e1", ",", "e2", ",", "e12"}], "*)"}], 
     RowBox[{"(*", "e1", "*)"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "e12", ",", "0"}], "}"}], ",", 
       RowBox[{"(*", "e2", "*)"}], 
       RowBox[{"{", 
        RowBox[{"e21", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"(*", "e12", "*)"}], 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stable", "=", 
     RowBox[{"(*", 
      RowBox[{"e1", ",", "e2", ",", "e12"}], "*)"}], 
     RowBox[{"(*", "e1", "*)"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ","}], "}"}], ",", 
       RowBox[{"(*", "e2", "*)"}], 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ","}], "}"}], ",", 
       RowBox[{"(*", "e12", "*)"}], 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", "\n",
    "\n", 
   RowBox[{
    RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], " ", "\[Equal]", " ", 
          RowBox[{"ptable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{"NonCommutativeMultiply", "[", " ", 
           RowBox[{
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "\[Equal]", " ", 
          RowBox[{"ptable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", 
    ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", ".", " ", 
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], " ", "\[Equal]", " ", 
          RowBox[{"dtable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{"Dot", "[", 
           RowBox[{
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "\[Equal]", " ", 
          RowBox[{"dtable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "\[Wedge]", " ", 
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], " ", "\[Equal]", " ", 
          RowBox[{"wtable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{"Wedge", "[", 
           RowBox[{
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "\[Equal]", " ", 
          RowBox[{"wtable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{"\[LeftAngleBracket]", 
           RowBox[{
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", ",", " ", 
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "\[RightAngleBracket]"}], " ", 
          "\[Equal]", " ", 
          RowBox[{"stable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{"ScalarProduct", "[", 
           RowBox[{
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", ",", " ", 
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "\[Equal]", " ", 
          RowBox[{"stable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{"\[LeftAngleBracket]", 
           RowBox[{
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
            RowBox[{"mbasis", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "\[RightAngleBracket]"}], " ", 
          "\[Equal]", " ", 
          RowBox[{"stable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"Assert", "[", " ", 
         RowBox[{
          RowBox[{"ScalarValue", "[", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"mbasis", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
             RowBox[{"mbasis", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], ")"}], " ", "]"}], " ", 
          "\[Equal]", " ", 
          RowBox[{"stable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "1", ",", " ", 
        RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Visual", " ", "verification", " ", "found", " ", "this", " ", "was", " ",
      "initially", " ", 
     RowBox[{"wrong", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Assert", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"e2", " ", "-", 
        RowBox[{"5", "e21"}]}], ")"}], "**", "e2"}], " ", "==", " ", 
     RowBox[{"1", " ", "+", " ", 
      RowBox[{"5", " ", "e1"}]}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.691718210439073*^9, 3.6917182571309843`*^9}, {
   3.6917182929298563`*^9, 3.6917183025319567`*^9}, {3.691750173495006*^9, 
   3.691750175245139*^9}, 3.691751017579562*^9, 3.691751071857938*^9, {
   3.6917511135036993`*^9, 3.691751191437381*^9}, {3.691751563802803*^9, 
   3.6917516355396347`*^9}, {3.691752853444841*^9, 3.691752867621365*^9}, {
   3.691781247818859*^9, 3.691781307456411*^9}, {3.691790979873547*^9, 
   3.691790980953986*^9}, {3.6917910542064543`*^9, 3.691791055052411*^9}, {
   3.691794137408502*^9, 3.691794137710519*^9}, 3.6917962719730167`*^9, {
   3.691877176163657*^9, 3.691877176335655*^9}, {3.69187731756637*^9, 
   3.691877445706374*^9}, {3.6918913952879353`*^9, 3.691891479755362*^9}, {
   3.6918927133813543`*^9, 3.6918927172073717`*^9}, {3.691893181927628*^9, 
   3.691893218525127*^9}, 3.691893268298562*^9, {3.6918933086063213`*^9, 
   3.691893325140667*^9}, {3.6918933759750547`*^9, 3.691893402477111*^9}, {
   3.691893448595636*^9, 3.691893502444434*^9}, {3.692008445434374*^9, 
   3.692008484130316*^9}, 3.692009572040307*^9, 3.692009616150391*^9, {
   3.692009781283574*^9, 3.692009822922305*^9}, {3.692010176074326*^9, 
   3.692010196845755*^9}, {3.692010241326173*^9, 3.692010244005372*^9}, 
   3.6920111261218452`*^9, {3.8957773320166407`*^9, 3.8957773504868813`*^9}, {
   3.8957774087257853`*^9, 3.89577742535153*^9}, {3.89577839558864*^9, 
   3.895778464272338*^9}, {3.8957857389979277`*^9, 3.895785935969178*^9}, 
   3.8957864108766108`*^9, {3.8957877156611023`*^9, 3.895787740707666*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"e82809a0-c711-4157-bbe2-9000a905158b"],

Cell["\<\
Manual tests, showing the results of various products in traditional form.\
\>", "Text",
 CellChangeTimes->{{3.6917962788404827`*^9, 
  3.691796303542089*^9}},ExpressionUUID->"c62148eb-b4b9-4ddb-8c26-\
ce827fdf77e2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"x", ",", "y"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", " ", 
       RowBox[{"\"\<(\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ")"}], " ", "//", " ", 
         "TraditionalForm"}], ",", "\[IndentingNewLine]", "\"\<)(\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ")"}], " ", "//", " ", 
         "TraditionalForm"}], ",", "\[IndentingNewLine]", "\"\<) = \>\"", ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], " ", "**", " ", 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}]}], ")"}], "//", " ", 
         "TraditionalForm"}]}], "\[IndentingNewLine]", "}"}], "]"}], " ", 
     "&"}], "/@", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"e2", ",", "e2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"e2", ",", "e21"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e2", " ", "-", 
         RowBox[{"5", "e21"}]}], ",", "e2"}], "}"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"e2", ",", 
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{"3", "e21"}]}]}], "}"}], " ", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{
          RowBox[{"Tan", "[", "y", "]"}], "e21"}]}], ",", "e2"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "y", "]"}], "e2"}], ",", 
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{
          RowBox[{"Sin", "[", "x", "]"}], "e21"}]}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], " ", "//", "Column"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", " ", 
       RowBox[{"\"\<(\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ")"}], " ", "//", " ", "TeXForm"}],
         ",", "\[IndentingNewLine]", "\"\<)(\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ")"}], " ", "//", " ", "TeXForm"}],
         ",", "\[IndentingNewLine]", "\"\<) = \>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], " ", "**", " ", 
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}]}], ")"}], "//", " ", 
         "TeXForm"}]}], "\[IndentingNewLine]", "}"}], "]"}], " ", "&"}], "/@",
     " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"e2", ",", "e2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"e2", ",", "e21"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e2", " ", "-", 
         RowBox[{"5", "e21"}]}], ",", "e2"}], "}"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"e2", ",", 
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{"3", "e21"}]}]}], "}"}], " ", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{
          RowBox[{"Tan", "[", "y", "]"}], "e21"}]}], ",", "e2"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "y", "]"}], "e2"}], ",", 
        RowBox[{"e2", " ", "+", " ", 
         RowBox[{
          RowBox[{"Sin", "[", "x", "]"}], "e21"}]}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], " ", "//", "Column"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\< \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\< = \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "**", " ", 
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], ")"}], 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\<     \>\""}], "\[IndentingNewLine]", 
       "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", "//",
    " ", "Grid"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\<\[CenterDot]\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\< = \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", " ", 
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], ")"}], 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\<     \>\""}], "\[IndentingNewLine]", 
       "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", "//",
    " ", "Grid"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\<\[Wedge]\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\< = \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "\[Wedge]", " ", 
          RowBox[{"mbasis", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], ")"}], 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\<     \>\""}], "\[IndentingNewLine]", 
       "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", "//",
    " ", "Grid"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"\"\<<\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\< \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"mbasis", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\<>\>\"", ",", "\[IndentingNewLine]", 
        "\"\< = \>\"", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{"\[LeftAngleBracket]", 
          RowBox[{
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
           RowBox[{"mbasis", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "\[RightAngleBracket]"}], ")"}], 
        RowBox[{"(*", 
         RowBox[{"//", " ", "TraditionalForm"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\"\<     \>\""}], "\[IndentingNewLine]", 
       "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", 
       RowBox[{"mbasis", " ", "//", " ", "Length"}]}], "}"}]}], "]"}], " ", "//",
    " ", "Grid"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"XXForm", " ", "tests", " ", 
    RowBox[{"(", 
     RowBox[{"manual", " ", "verification"}], ")"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "//", "FullForm"}], ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", 
      "m12", ",", "m012"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "//", "TraditionalForm"}], ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", 
      "m12", ",", "m012"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "#", ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", 
      "m12", ",", "m012"}], "}"}]}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "//", "StandardForm"}], ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", 
      "m12", ",", "m012"}], "}"}]}], "]"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "//", "DisplayForm"}], ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", 
      "m12", ",", "m012"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "//", "TeXForm"}], ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "e0", ",", "e1", ",", "e2", ",", "e12", ",", "m01", ",", "m02", ",", 
      "m12", ",", "m012"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"e21", "//", " ", "TraditionalForm"}], ",", "\[IndentingNewLine]", 
    RowBox[{"e21", "//", " ", "DisplayForm"}], ",", "\[IndentingNewLine]", 
    RowBox[{"e21", "//", " ", "Format"}], ",", "\[IndentingNewLine]", 
    RowBox[{"e21", "//", " ", "StandardForm"}], ",", "\[IndentingNewLine]", 
    RowBox[{"e21", "//", " ", "FullForm"}], ",", "\[IndentingNewLine]", 
    RowBox[{"e21", "//", "TeXForm"}]}], "}"}], " ", "//", " ", 
  "Column"}]}], "Input",
 CellChangeTimes->{{3.691791531811805*^9, 3.691791549767912*^9}, {
   3.691791588713826*^9, 3.6917916498371696`*^9}, {3.6917917021550827`*^9, 
   3.6917917202040462`*^9}, {3.691791774541381*^9, 3.6917918197078323`*^9}, 
   3.691791893128619*^9, {3.691792581346946*^9, 3.691792589408039*^9}, {
   3.6917927042212276`*^9, 3.6917927050141172`*^9}, {3.691792865075037*^9, 
   3.691793027992055*^9}, {3.6917931138285217`*^9, 3.691793354385445*^9}, {
   3.691793421672282*^9, 3.691793454478035*^9}, {3.691793493307729*^9, 
   3.69179354162236*^9}, {3.691793573926221*^9, 3.6917935756674356`*^9}, {
   3.691793611249544*^9, 3.6917936578082323`*^9}, {3.6917941624602947`*^9, 
   3.6917942544317627`*^9}, {3.6917943028594723`*^9, 
   3.6917943451806803`*^9}, {3.691794382116899*^9, 3.691794551102071*^9}, {
   3.691794612330554*^9, 3.6917946761087217`*^9}, {3.691794709650693*^9, 
   3.691794747375781*^9}, {3.691794811887302*^9, 3.6917948276847553`*^9}, {
   3.691794955976565*^9, 3.6917950084512367`*^9}, {3.691795218630961*^9, 
   3.691795386213243*^9}, {3.6917954181246157`*^9, 3.691795482761589*^9}, {
   3.691795531345439*^9, 3.691795544568725*^9}, {3.691795576303005*^9, 
   3.691795598207263*^9}, {3.6917958088878593`*^9, 3.6917958093751593`*^9}, {
   3.691795841721541*^9, 3.691795844686182*^9}, {3.691877176350192*^9, 
   3.6918771763574247`*^9}, {3.691877317814925*^9, 3.691877377965032*^9}, {
   3.6918915221836243`*^9, 3.6918915475643578`*^9}, 3.691894212777133*^9, 
   3.692008355674622*^9, {3.701715865185787*^9, 3.701715932561586*^9}, {
   3.701716022451016*^9, 3.7017160291443787`*^9}, {3.725326840526416*^9, 
   3.72532685073575*^9}, {3.725326921227632*^9, 3.725326925969862*^9}, 
   3.895786580823347*^9, 3.89578783826842*^9, {3.895789631883645*^9, 
   3.895789658972485*^9}, {3.895789774469605*^9, 3.8957897796171303`*^9}, {
   3.8957900027343082`*^9, 
   3.895790004006003*^9}},ExpressionUUID->"e3b5b69f-1919-4ce3-9768-\
9be6133abe0d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox["1", TraditionalForm], TraditionalForm, Editable -> True]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         RowBox[{"-", 
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]}], 
         TraditionalForm], TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], 
         TraditionalForm], TraditionalForm, Editable -> True]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         RowBox[{
           RowBox[{"5", " ", 
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]}], 
           "+", 
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]}], 
         TraditionalForm], TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox[
         RowBox[{
           RowBox[{"5", " ", 
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}], "+", 
           "1"}], TraditionalForm], TraditionalForm, Editable -> True]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         RowBox[{
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "-", 
           RowBox[{"3", " ", 
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]}]}], 
         TraditionalForm], TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox[
         RowBox[{
           RowBox[{"3", " ", 
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}], "+", 
           "1"}], TraditionalForm], TraditionalForm, Editable -> True]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         RowBox[{
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "-", 
           RowBox[{
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], " ", 
             
             RowBox[{"tan", "(", "y", ")"}]}]}], TraditionalForm], 
        TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
         TraditionalForm], TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox[
         RowBox[{"1", "-", 
           RowBox[{
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], " ", 
             RowBox[{"tan", "(", "y", ")"}]}]}], TraditionalForm], 
        TraditionalForm, Editable -> True]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       TagBox[
        FormBox[
         RowBox[{
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], " ", 
           RowBox[{"cos", "(", "y", ")"}]}], TraditionalForm], 
        TraditionalForm, Editable -> True], "\")(\"", 
       TagBox[
        FormBox[
         RowBox[{
           SubscriptBox[
            StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "-", 
           RowBox[{
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], " ", 
             
             RowBox[{"sin", "(", "x", ")"}]}]}], TraditionalForm], 
        TraditionalForm, Editable -> True], "\") = \"", 
       TagBox[
        FormBox[
         RowBox[{
           RowBox[{
             SubscriptBox[
              StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], " ", 
             RowBox[{"sin", "(", "x", ")"}], " ", 
             RowBox[{"cos", "(", "y", ")"}]}], "+", 
           RowBox[{"cos", "(", "y", ")"}]}], TraditionalForm], 
        TraditionalForm, Editable -> True]},
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.692008358361168*^9, 3.7017159722680187`*^9, 3.7017160306697197`*^9, 
   3.72532685182164*^9, 3.72532689730477*^9, 3.7253269276783257`*^9, 
   3.725577939850293*^9, 3.895786431682369*^9, 3.895786583389991*^9, 
   3.895787093684729*^9, 3.895787646893663*^9, 3.895787839581181*^9, 
   3.895789504709338*^9, {3.895789635855763*^9, 3.895789662395546*^9}, 
   3.895789780586424*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"c3429b6d-4c77-456c-9a3d-02a4ee4a8db2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
      "\"(\"", "\"\\\\mathbf{e}_2\"", "\")(\"", "\"\\\\mathbf{e}_2\"", 
       "\") = \"", "1"},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", "\"\\\\mathbf{e}_2\"", "\")(\"", 
       TemplateBox[{"\"(\"", 
         InterpretationBox["\"-1\"", 
          TeXForm[-1], Editable -> True, AutoDelete -> True], "\")(\"", 
         "\"\\\\mathbf{e}_{12}\"", "\")\""}, "RowDefault"], "\") = \"", 
       "\"\\\\mathbf{e}_1\""},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       RowBox[{"\"\\\\mathbf{e}_2\"", "+", 
         TemplateBox[{"\"(\"", 
           InterpretationBox["\"5\"", 
            TeXForm[5], Editable -> True, AutoDelete -> True], "\")(\"", 
           "\"\\\\mathbf{e}_{12}\"", "\")\""}, "RowDefault"]}], "\")(\"", 
       "\"\\\\mathbf{e}_2\"", "\") = \"", 
       RowBox[{"1", "+", 
         TemplateBox[{"\"(\"", 
           InterpretationBox["\"5\"", 
            TeXForm[5], Editable -> True, AutoDelete -> True], "\")(\"", 
           "\"\\\\mathbf{e}_1\"", "\")\""}, "RowDefault"]}]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", "\"\\\\mathbf{e}_2\"", "\")(\"", 
       RowBox[{"\"\\\\mathbf{e}_2\"", "+", 
         TemplateBox[{"\"(\"", 
           InterpretationBox["\"-3\"", 
            TeXForm[-3], Editable -> True, AutoDelete -> True], "\")(\"", 
           "\"\\\\mathbf{e}_{12}\"", "\")\""}, "RowDefault"]}], "\") = \"", 
       RowBox[{"1", "+", 
         TemplateBox[{"\"(\"", 
           InterpretationBox["\"3\"", 
            TeXForm[3], Editable -> True, AutoDelete -> True], "\")(\"", 
           "\"\\\\mathbf{e}_1\"", "\")\""}, "RowDefault"]}]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       RowBox[{"\"\\\\mathbf{e}_2\"", "+", 
         TemplateBox[{"\"(\"", 
           InterpretationBox["\"-\\\\tan (y)\"", 
            TeXForm[-Tan[$CellContext`y]], Editable -> True, AutoDelete -> 
            True], "\")(\"", "\"\\\\mathbf{e}_{12}\"", "\")\""}, 
          "RowDefault"]}], "\")(\"", "\"\\\\mathbf{e}_2\"", "\") = \"", 
       RowBox[{"1", "+", 
         TemplateBox[{"\"(\"", 
           InterpretationBox["\"-\\\\tan (y)\"", 
            TeXForm[-Tan[$CellContext`y]], Editable -> True, AutoDelete -> 
            True], "\")(\"", "\"\\\\mathbf{e}_1\"", "\")\""}, "RowDefault"]}]},
      "RowDefault"]},
    {
     TemplateBox[{"\"(\"", 
       TemplateBox[{"\"(\"", 
         InterpretationBox["\"\\\\cos (y)\"", 
          TeXForm[
           Cos[$CellContext`y]], Editable -> True, AutoDelete -> True], 
         "\")(\"", "\"\\\\mathbf{e}_2\"", "\")\""}, "RowDefault"], "\")(\"", 
       RowBox[{"\"\\\\mathbf{e}_2\"", "+", 
         TemplateBox[{"\"(\"", 
           InterpretationBox["\"-\\\\sin (x)\"", 
            TeXForm[-Sin[$CellContext`x]], Editable -> True, AutoDelete -> 
            True], "\")(\"", "\"\\\\mathbf{e}_{12}\"", "\")\""}, 
          "RowDefault"]}], "\") = \"", 
       RowBox[{
         TemplateBox[{"\"(\"", 
           InterpretationBox["\"\\\\cos (y)\"", 
            TeXForm[
             Cos[$CellContext`y]], Editable -> True, AutoDelete -> True], 
           "\")(\"", "1", "\")\""}, "RowDefault"], "+", 
         TemplateBox[{"\"(\"", 
           InterpretationBox["\"\\\\sin (x) \\\\cos (y)\"", 
            TeXForm[Cos[$CellContext`y] Sin[$CellContext`x]], Editable -> 
            True, AutoDelete -> True], "\")(\"", "\"\\\\mathbf{e}_1\"", 
           "\")\""}, "RowDefault"]}]},
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.692008358361168*^9, 3.7017159722680187`*^9, 3.7017160306697197`*^9, 
   3.72532685182164*^9, 3.72532689730477*^9, 3.7253269276783257`*^9, 
   3.725577939850293*^9, 3.895786431682369*^9, 3.895786583389991*^9, 
   3.895787093684729*^9, 3.895787646893663*^9, 3.895787839581181*^9, 
   3.895789504709338*^9, {3.895789635855763*^9, 3.895789662395546*^9}, 
   3.895789780601736*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"873b693b-64a3-4695-97d1-306f08cec5a2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "1", 
       "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\"     \""},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]}], 
       "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "1", 
       "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}], "\"     \""},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]}], "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       RowBox[{"-", "1"}], "\"     \""},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.692008358361168*^9, 3.7017159722680187`*^9, 3.7017160306697197`*^9, 
   3.72532685182164*^9, 3.72532689730477*^9, 3.7253269276783257`*^9, 
   3.725577939850293*^9, 3.895786431682369*^9, 3.895786583389991*^9, 
   3.895787093684729*^9, 3.895787646893663*^9, 3.895787839581181*^9, 
   3.895789504709338*^9, {3.895789635855763*^9, 3.895789662395546*^9}, 
   3.89578978061698*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"36e2f511-1109-4480-8491-ed7136302f85"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "1", 
       "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "0", 
       "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\"     \""},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "0", 
       "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "1", 
       "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "1"]}], "\"     \""},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "2"]}], "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[CenterDot]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       
       RowBox[{"-", "1"}], "\"     \""},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.692008358361168*^9, 3.7017159722680187`*^9, 3.7017160306697197`*^9, 
   3.72532685182164*^9, 3.72532689730477*^9, 3.7253269276783257`*^9, 
   3.725577939850293*^9, 3.895786431682369*^9, 3.895786583389991*^9, 
   3.895787093684729*^9, 3.895787646893663*^9, 3.895787839581181*^9, 
   3.895789504709338*^9, {3.895789635855763*^9, 3.895789662395546*^9}, 
   3.895789780628772*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"b7f1ff89-e3ce-4294-a035-e551453e63b4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "0", 
       "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       "0", "\"     \""},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", 
       RowBox[{"-", 
         SubscriptBox[
          StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""]}], 
       "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "0", 
       "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\"\[Wedge]\"", 
       
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       "0", "\"     \""},
      "RowDefault"]},
    {
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" = \"", "0", 
       "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" = \"", "0", 
       "\"     \""},
      "RowDefault"], 
     TemplateBox[{
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], 
       "\"\[Wedge]\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" = \"", 
       "0", "\"     \""},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.692008358361168*^9, 3.7017159722680187`*^9, 3.7017160306697197`*^9, 
   3.72532685182164*^9, 3.72532689730477*^9, 3.7253269276783257`*^9, 
   3.725577939850293*^9, 3.895786431682369*^9, 3.895786583389991*^9, 
   3.895787093684729*^9, 3.895787646893663*^9, 3.895787839581181*^9, 
   3.895789504709338*^9, {3.895789635855763*^9, 3.895789662395546*^9}, 
   3.8957897806396637`*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"ad8f1a9b-63e4-43bd-8c0c-f1596e26d1a7"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\">\"", 
       "\" = \"", "1", "\"     \""},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\">\"", 
       "\" = \"", "0", "\"     \""},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\">\"", 
       "\" = \"", "0", "\"     \""},
      "RowDefault"]},
    {
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\">\"", 
       "\" = \"", "0", "\"     \""},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\">\"", 
       "\" = \"", "1", "\"     \""},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\">\"", 
       "\" = \"", "0", "\"     \""},
      "RowDefault"]},
    {
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "1"], "\">\"", 
       "\" = \"", "0", "\"     \""},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "2"], "\">\"", 
       "\" = \"", "0", "\"     \""},
      "RowDefault"], 
     TemplateBox[{"\"<\"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\" \"", 
       SubscriptBox[
        StyleBox["\"e\"", Bold, StripOnInput -> False], "\"12\""], "\">\"", 
       "\" = \"", 
       RowBox[{"-", "1"}], "\"     \""},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.692008358361168*^9, 3.7017159722680187`*^9, 3.7017160306697197`*^9, 
   3.72532685182164*^9, 3.72532689730477*^9, 3.7253269276783257`*^9, 
   3.725577939850293*^9, 3.895786431682369*^9, 3.895786583389991*^9, 
   3.895787093684729*^9, 3.895787646893663*^9, 3.895787839581181*^9, 
   3.895789504709338*^9, {3.895789635855763*^9, 3.895789662395546*^9}, 
   3.895789780650817*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"3ae93cfb-c5d4-4c15-ade5-0e54faf6e573"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       RowBox[{"grade", "[", 
        RowBox[{"0", ",", "1", ",", "0"}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"grade", "[", 
        RowBox[{"1", ",", "0", ",", "1"}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"grade", "[", 
        RowBox[{"1", ",", "0", ",", 
         RowBox[{"complex", "[", 
          RowBox[{"0", ",", "1"}], "]"}]}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"grade", "[", 
        RowBox[{"2", ",", 
         RowBox[{"complex", "[", 
          RowBox[{"0", ",", "1"}], "]"}], ",", "0"}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"grade", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1", ",", "1"}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"grade", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"complex", "[", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"grade", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"complex", "[", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", "1"}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"grade", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"complex", "[", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", "1"}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.692008358361168*^9, 3.7017159722680187`*^9, 3.7017160306697197`*^9, 
   3.72532685182164*^9, 3.72532689730477*^9, 3.7253269276783257`*^9, 
   3.725577939850293*^9, 3.895786431682369*^9, 3.895786583389991*^9, 
   3.895787093684729*^9, 3.895787646893663*^9, 3.895787839581181*^9, 
   3.895789504709338*^9, {3.895789635855763*^9, 3.895789662395546*^9}, 
   3.895789780662712*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"71d325ab-30af-4033-960a-b2e53d929126"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      FormBox["1",
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {
     TagBox[
      FormBox[
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "1"],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {
     TagBox[
      FormBox[
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "2"],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {
     TagBox[
      FormBox[
       SubscriptBox[
        StyleBox["\<\"e\"\>",
         StripOnInput->False,
         FontWeight->Bold], "\<\"12\"\>"],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {
     TagBox[
      FormBox[
       RowBox[{
        SubscriptBox[
         StyleBox["\<\"e\"\>",
          StripOnInput->False,
          FontWeight->Bold], "1"], "+", "1"}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {
     TagBox[
      FormBox[
       RowBox[{"1", "-", 
        SubscriptBox[
         StyleBox["\<\"e\"\>",
          StripOnInput->False,
          FontWeight->Bold], "\<\"12\"\>"]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {
     TagBox[
      FormBox[
       RowBox[{
        SubscriptBox[
         StyleBox["\<\"e\"\>",
          StripOnInput->False,
          FontWeight->Bold], "1"], "-", 
        SubscriptBox[
         StyleBox["\<\"e\"\>",
          StripOnInput->False,
          FontWeight->Bold], "\<\"12\"\>"]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {
     TagBox[
      FormBox[
       RowBox[{
        RowBox[{"-", 
         SubscriptBox[
          StyleBox["\<\"e\"\>",
           StripOnInput->False,
           FontWeight->Bold], "\<\"12\"\>"]}], "+", 
        SubscriptBox[
         StyleBox["\<\"e\"\>",
          StripOnInput->False,
          FontWeight->Bold], "1"], "+", "1"}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.692008358361168*^9, 3.7017159722680187`*^9, 3.7017160306697197`*^9, 
   3.72532685182164*^9, 3.72532689730477*^9, 3.7253269276783257`*^9, 
   3.725577939850293*^9, 3.895786431682369*^9, 3.895786583389991*^9, 
   3.895787093684729*^9, 3.895787646893663*^9, 3.895787839581181*^9, 
   3.895789504709338*^9, {3.895789635855763*^9, 3.895789662395546*^9}, 
   3.895789780667857*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"ebc09b5a-01a5-4429-8b26-49ce1dad4206"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "1"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "2"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "\<\"12\"\>"]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"]}]},
    {
     RowBox[{"1", "-", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"12\"\>"]}]},
    {
     RowBox[{
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "-", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"12\"\>"]}]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "-", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"12\"\>"]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.692008358361168*^9, 3.7017159722680187`*^9, 3.7017160306697197`*^9, 
   3.72532685182164*^9, 3.72532689730477*^9, 3.7253269276783257`*^9, 
   3.725577939850293*^9, 3.895786431682369*^9, 3.895786583389991*^9, 
   3.895787093684729*^9, 3.895787646893663*^9, 3.895787839581181*^9, 
   3.895789504709338*^9, {3.895789635855763*^9, 3.895789662395546*^9}, 
   3.895789780673808*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"992873f6-fd47-4556-adae-91efee8235ee"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {
     RowBox[{"e", "[", "1", "]"}]},
    {
     RowBox[{"e", "[", "2", "]"}]},
    {
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], " ", 
      RowBox[{"e", "[", "2", "]"}]}]},
    {
     RowBox[{"1", "+", 
      RowBox[{"e", "[", "1", "]"}]}]},
    {
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"e", "[", "1", "]"}], "-", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}]}]}]},
    {
     RowBox[{"1", "+", 
      RowBox[{"e", "[", "1", "]"}], "-", 
      RowBox[{
       RowBox[{"e", "[", "1", "]"}], " ", 
       RowBox[{"e", "[", "2", "]"}]}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.692008358361168*^9, 3.7017159722680187`*^9, 3.7017160306697197`*^9, 
   3.72532685182164*^9, 3.72532689730477*^9, 3.7253269276783257`*^9, 
   3.725577939850293*^9, 3.895786431682369*^9, 3.895786583389991*^9, 
   3.895787093684729*^9, 3.895787646893663*^9, 3.895787839581181*^9, 
   3.895789504709338*^9, {3.895789635855763*^9, 3.895789662395546*^9}, 
   3.895789780679022*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"b0534d3b-8ca8-4b3f-83f1-8078d44bc7de"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "1"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "2"]},
    {
     SubscriptBox[
      StyleBox["\<\"e\"\>",
       StripOnInput->False,
       FontWeight->Bold], "\<\"12\"\>"]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"]}]},
    {
     RowBox[{"1", "-", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"12\"\>"]}]},
    {
     RowBox[{
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "-", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"12\"\>"]}]},
    {
     RowBox[{"1", "+", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "1"], "-", 
      SubscriptBox[
       StyleBox["\<\"e\"\>",
        StripOnInput->False,
        FontWeight->Bold], "\<\"12\"\>"]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.692008358361168*^9, 3.7017159722680187`*^9, 3.7017160306697197`*^9, 
   3.72532685182164*^9, 3.72532689730477*^9, 3.7253269276783257`*^9, 
   3.725577939850293*^9, 3.895786431682369*^9, 3.895786583389991*^9, 
   3.895787093684729*^9, 3.895787646893663*^9, 3.895787839581181*^9, 
   3.895789504709338*^9, {3.895789635855763*^9, 3.895789662395546*^9}, 
   3.895789780683793*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"fa9ba5cb-23ab-4ff8-861a-1652fee5722f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {"\<\"\\\\mathbf{e}_1\"\>"},
    {"\<\"\\\\mathbf{e}_2\"\>"},
    {"\<\"\\\\mathbf{e}_{12}\"\>"},
    {
     RowBox[{"1", "+", "\<\"\\\\mathbf{e}_1\"\>"}]},
    {
     RowBox[{"1", "+", 
      TemplateBox[{"\"(\"", 
        InterpretationBox["\"-1\"", 
         TeXForm[-1], Editable -> True, AutoDelete -> True], "\")(\"", 
        "\"\\\\mathbf{e}_{12}\"", "\")\""},
       "RowDefault"]}]},
    {
     RowBox[{"\<\"\\\\mathbf{e}_1\"\>", "+", 
      TemplateBox[{"\"(\"", 
        InterpretationBox["\"-1\"", 
         TeXForm[-1], Editable -> True, AutoDelete -> True], "\")(\"", 
        "\"\\\\mathbf{e}_{12}\"", "\")\""},
       "RowDefault"]}]},
    {
     RowBox[{"1", "+", "\<\"\\\\mathbf{e}_1\"\>", "+", 
      TemplateBox[{"\"(\"", 
        InterpretationBox["\"-1\"", 
         TeXForm[-1], Editable -> True, AutoDelete -> True], "\")(\"", 
        "\"\\\\mathbf{e}_{12}\"", "\")\""},
       "RowDefault"]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.692008358361168*^9, 3.7017159722680187`*^9, 3.7017160306697197`*^9, 
   3.72532685182164*^9, 3.72532689730477*^9, 3.7253269276783257`*^9, 
   3.725577939850293*^9, 3.895786431682369*^9, 3.895786583389991*^9, 
   3.895787093684729*^9, 3.895787646893663*^9, 3.895787839581181*^9, 
   3.895789504709338*^9, {3.895789635855763*^9, 3.895789662395546*^9}, 
   3.895789780689213*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"7c8fb49c-34cc-403e-8084-f01a8df8b3f1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TODO", ":", " ", 
   RowBox[{"test", " ", "multivector", " ", "products"}], ":", " ", "dot"}], 
  ",", " ", "wedge", ",", " ", "**"}]], "Input",
 CellChangeTimes->{{3.691875787772244*^9, 
  3.691875845771678*^9}},ExpressionUUID->"89709ba7-11b4-431e-86fb-\
60b4d59253cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"manual", " ", "test"}], ",", " ", 
    RowBox[{"or", " ", "just", " ", "the", " ", "dot", " ", "product"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"m1", ",", " ", "m2"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m1", " ", "=", " ", 
     RowBox[{
      RowBox[{"Scalar", "[", "1", "]"}], " ", "+", " ", 
      RowBox[{"Vector", "[", 
       RowBox[{"1", ",", "2"}], "]"}], " ", "+", " ", 
      RowBox[{"Bivector", "[", "1", "]"}]}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m2", " ", "=", " ", 
     RowBox[{
      RowBox[{"Scalar", "[", "1", "]"}], " ", "+", 
      RowBox[{"Vector", "[", 
       RowBox[{"1", ",", "2"}], "]"}], " ", "-", " ", 
      RowBox[{"Bivector", "[", "1", "]"}]}]}], " ", ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"m1", ".", "m2"}], " ", 
   RowBox[{"(*", 
    RowBox[{"//", " ", "TraditionalForm"}], "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.691875800491975*^9, 3.691875809658766*^9}, {
   3.691894037639244*^9, 3.6918940494691973`*^9}, {3.6920078010125427`*^9, 
   3.692007803102578*^9}, {3.692007850722372*^9, 3.692007934001274*^9}, {
   3.6920081954687862`*^9, 3.692008307979595*^9}, {3.692008611408082*^9, 
   3.6920086707843313`*^9}, {3.692008737523641*^9, 3.692008851842248*^9}, {
   3.6920089522646008`*^9, 3.692008989460525*^9}, {3.692009053324778*^9, 
   3.692009079959097*^9}, {3.6920091458202543`*^9, 3.6920092718791637`*^9}, {
   3.692009335807555*^9, 3.692009357277741*^9}, {3.692009468340424*^9, 
   3.6920095174128113`*^9}, {3.692011154866823*^9, 3.6920111679047127`*^9}, 
   3.701715942437066*^9},ExpressionUUID->"8f7ceef2-b423-4af6-a3d7-\
c8ec2b91e0e3"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.691894056730894*^9, 3.692007804959461*^9, {3.692007852070221*^9, 
   3.6920078719115267`*^9}, {3.692007910309023*^9, 3.692007935692668*^9}, 
   3.6920081772608852`*^9, 3.6920082262593327`*^9, {3.692008258184786*^9, 
   3.6920083087241697`*^9}, {3.692008620290701*^9, 3.6920086725803347`*^9}, {
   3.692008781682931*^9, 3.692008852442244*^9}, 3.6920089391140213`*^9, 
   3.6920089905016127`*^9, 3.692009080840979*^9, {3.692009213549879*^9, 
   3.692009234341085*^9}, 3.692009273253623*^9, 3.692009358975376*^9, {
   3.692009469085383*^9, 3.69200952028538*^9}, 3.692011156609562*^9, 
   3.701716039001183*^9},ExpressionUUID->"5da664e5-6650-456f-9dd1-\
47ed5198b66b"]
}, Open  ]]
},
WindowSize->{1792, 1067},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c9882aeb-d1dd-46c9-baed-9af299a034fa"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 586, 14, 226, "Text",ExpressionUUID->"45ceca23-304a-4fb9-82ba-372933a8b95c"],
Cell[CellGroupData[{
Cell[1169, 38, 2971, 76, 1194, "Input",ExpressionUUID->"36971f6a-0943-4dee-bce7-5d397b773d20"],
Cell[4143, 116, 16341, 317, 2521, "Output",ExpressionUUID->"70ce4207-eeb8-4083-bf31-042ddefe711c"],
Cell[20487, 435, 10425, 259, 141, "Output",ExpressionUUID->"b8627da5-a6b4-42bd-8923-ee197e41919f"],
Cell[30915, 696, 11769, 288, 141, "Output",ExpressionUUID->"729bd9f6-358c-43a6-aefb-c9ebb9ca14bb"],
Cell[42687, 986, 10668, 262, 141, "Output",ExpressionUUID->"15e7de01-e974-4b10-9617-e2d91230d907"],
Cell[53358, 1250, 10492, 259, 141, "Output",ExpressionUUID->"9b40bbcf-565f-4350-aeb4-3a71315b19f6"],
Cell[63853, 1511, 10084, 251, 141, "Output",ExpressionUUID->"b34f7d2f-bbf2-4267-a1c2-f8113c6499aa"],
Cell[73940, 1764, 10084, 251, 141, "Output",ExpressionUUID->"1aa8cb39-0859-46f6-ba9b-2d79b2cdbd66"],
Cell[84027, 2017, 10112, 252, 141, "Output",ExpressionUUID->"bd7452ab-72d3-4ee5-ba95-6d04c498b94f"],
Cell[94142, 2271, 10097, 252, 141, "Output",ExpressionUUID->"3d0b3d7b-c4ef-46af-925b-bdcc51e571ec"],
Cell[104242, 2525, 10095, 251, 141, "Output",ExpressionUUID->"392b2468-25b4-406f-b37b-7b9abab729aa"],
Cell[114340, 2778, 10064, 252, 141, "Output",ExpressionUUID->"681f82b5-d2eb-49c7-b3ca-6f9f9f206e48"],
Cell[124407, 3032, 12618, 305, 141, "Output",ExpressionUUID->"7056b6d7-995b-4793-9a45-acd56b40ce19"],
Cell[137028, 3339, 10815, 264, 141, "Output",ExpressionUUID->"c631372f-0aaa-48d5-a321-3af94f772588"],
Cell[147846, 3605, 10685, 262, 141, "Output",ExpressionUUID->"401f24e6-e991-40b9-8c26-3a709a558a34"],
Cell[158534, 3869, 10707, 262, 141, "Output",ExpressionUUID->"361f66a9-742a-4a56-aad3-4cdf7f245d59"],
Cell[169244, 4133, 10634, 263, 141, "Output",ExpressionUUID->"6a9e9cc4-368f-49ed-86c9-b5119a0025fc"],
Cell[179881, 4398, 10868, 267, 141, "Output",ExpressionUUID->"96257828-75a3-439c-bafd-789cf75b7321"]
}, Open  ]],
Cell[190764, 4668, 28185, 781, 3519, "Input",ExpressionUUID->"e82809a0-c711-4157-bbe2-9000a905158b"],
Cell[218952, 5451, 226, 5, 53, "Text",ExpressionUUID->"c62148eb-b4b9-4ddb-8c26-ce827fdf77e2"],
Cell[CellGroupData[{
Cell[219203, 5460, 14987, 369, 3054, "Input",ExpressionUUID->"e3b5b69f-1919-4ce3-9768-9be6133abe0d"],
Cell[234193, 5831, 5712, 156, 177, "Output",ExpressionUUID->"c3429b6d-4c77-456c-9a3d-02a4ee4a8db2"],
Cell[239908, 5989, 4163, 94, 183, "Output",ExpressionUUID->"873b693b-64a3-4695-97d1-306f08cec5a2"],
Cell[244074, 6085, 3554, 94, 99, "Output",ExpressionUUID->"36e2f511-1109-4480-8491-ed7136302f85"],
Cell[247631, 6181, 3531, 98, 99, "Output",ExpressionUUID->"b7f1ff89-e3ce-4294-a035-e551453e63b4"],
Cell[251165, 6281, 3315, 94, 99, "Output",ExpressionUUID->"ad8f1a9b-63e4-43bd-8c0c-f1596e26d1a7"],
Cell[254483, 6377, 3168, 81, 99, "Output",ExpressionUUID->"3ae93cfb-c5d4-4c15-ade5-0e54faf6e573"],
Cell[257654, 6460, 3094, 104, 237, "Output",ExpressionUUID->"71d325ab-30af-4033-960a-b2e53d929126"],
Cell[260751, 6566, 2786, 104, 229, "Output",ExpressionUUID->"ebc09b5a-01a5-4429-8b26-49ce1dad4206"],
Cell[263540, 6672, 1886, 63, 229, "Output",ExpressionUUID->"992873f6-fd47-4556-adae-91efee8235ee"],
Cell[265429, 6737, 1426, 44, 229, "Output",ExpressionUUID->"b0534d3b-8ca8-4b3f-83f1-8078d44bc7de"],
Cell[266858, 6783, 1886, 63, 229, "Output",ExpressionUUID->"fa9ba5cb-23ab-4ff8-861a-1652fee5722f"],
Cell[268747, 6848, 1634, 42, 235, "Output",ExpressionUUID->"7c8fb49c-34cc-403e-8084-f01a8df8b3f1"]
}, Open  ]],
Cell[270396, 6893, 305, 7, 46, "Input",ExpressionUUID->"89709ba7-11b4-431e-86fb-60b4d59253cb"],
Cell[CellGroupData[{
Cell[270726, 6904, 1804, 40, 202, "Input",ExpressionUUID->"8f7ceef2-b423-4af6-a3d7-c8ec2b91e0e3"],
Cell[272533, 6946, 717, 11, 52, "Output",ExpressionUUID->"5da664e5-6650-456f-9dd1-47ed5198b66b"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

